import {
  vtkImageData$1
} from "./chunk-CNJU7J6N.js";
import {
  vtkXMLReader$1
} from "./chunk-BGBUIUI6.js";
import "./chunk-RUO4W2U5.js";
import "./chunk-PCBY7TQL.js";
import "./chunk-B5BVLPZX.js";
import "./chunk-2MWAGLL3.js";
import "./chunk-Z2LVQNSU.js";
import "./chunk-Z5OKWKLG.js";
import "./chunk-SWDS6M4V.js";
import "./chunk-GC37RKNO.js";
import "./chunk-IC3JHQHE.js";
import "./chunk-SXNZFZKA.js";
import "./chunk-FOWOP5PK.js";
import {
  macro
} from "./chunk-OTTIIP4A.js";
import "./chunk-HKWV5KNA.js";
import "./chunk-XL65WI7U.js";
import "./chunk-HUBM7RA2.js";

// node_modules/@kitware/vtk.js/IO/XML/XMLImageDataReader.js
function vtkXMLImageDataReader(publicAPI, model) {
  model.classHierarchy.push("vtkXMLImageDataReader");
  publicAPI.parseXML = function(rootElem, type, compressor, byteOrder, headerType) {
    var _imageDataElem$getAtt;
    var imageDataElem = rootElem.getElementsByTagName(model.dataType)[0];
    var origin = imageDataElem.getAttribute("Origin").split(" ").map(function(t) {
      return Number(t);
    });
    var spacing = imageDataElem.getAttribute("Spacing").split(" ").map(function(t) {
      return Number(t);
    });
    var direction = (_imageDataElem$getAtt = imageDataElem.getAttribute("Direction")) === null || _imageDataElem$getAtt === void 0 ? void 0 : _imageDataElem$getAtt.split(" ").map(function(t) {
      return Number(t);
    });
    var pieces = imageDataElem.getElementsByTagName("Piece");
    var nbPieces = pieces.length;
    for (var outputIndex = 0; outputIndex < nbPieces; outputIndex++) {
      var piece = pieces[outputIndex];
      var extent = piece.getAttribute("Extent").split(" ").map(function(t) {
        return Number(t);
      });
      var imageData = vtkImageData$1.newInstance({
        origin,
        spacing,
        direction,
        extent
      });
      vtkXMLReader$1.processFieldData(imageData.getNumberOfPoints(), piece.getElementsByTagName("PointData")[0], imageData.getPointData(), compressor, byteOrder, headerType, model.binaryBuffer);
      vtkXMLReader$1.processFieldData(imageData.getNumberOfCells(), piece.getElementsByTagName("CellData")[0], imageData.getCellData(), compressor, byteOrder, headerType, model.binaryBuffer);
      model.output[outputIndex] = imageData;
    }
  };
}
var DEFAULT_VALUES = {
  dataType: "ImageData"
};
function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  Object.assign(model, DEFAULT_VALUES, initialValues);
  vtkXMLReader$1.extend(publicAPI, model, initialValues);
  vtkXMLImageDataReader(publicAPI, model);
}
var newInstance = macro.newInstance(extend, "vtkXMLImageDataReader");
var vtkXMLImageDataReader$1 = {
  newInstance,
  extend
};

// dep:@kitware_vtk__js_IO_XML_XMLImageDataReader
var kitware_vtk_js_IO_XML_XMLImageDataReader_default = vtkXMLImageDataReader$1;
export {
  kitware_vtk_js_IO_XML_XMLImageDataReader_default as default,
  extend,
  newInstance
};
//# sourceMappingURL=@kitware_vtk__js_IO_XML_XMLImageDataReader.js.map
