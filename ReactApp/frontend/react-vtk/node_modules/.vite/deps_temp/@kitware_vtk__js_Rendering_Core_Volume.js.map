{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/VolumeProperty.js", "../../@kitware/vtk.js/Rendering/Core/Volume.js", "dep:@kitware_vtk__js_Rendering_Core_Volume"],
  "sourcesContent": ["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar InterpolationType = Constants.InterpolationType,\n    OpacityMode = Constants.OpacityMode;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar VTK_MAX_VRCOMP = 4; // ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n\n  publicAPI.getMTime = function () {\n    var mTime = model.mtime;\n    var time;\n\n    for (var index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } // Opacity MTimes\n\n\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n\n    return mTime;\n  };\n\n  publicAPI.getColorChannels = function (index) {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n\n    return model.componentData[index].colorChannels;\n  }; // Set the color of a volume to a gray transfer function\n\n\n  publicAPI.setGrayTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set gray transfer function. Create one if none set.\n\n\n  publicAPI.getGrayTransferFunction = function (index) {\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].grayTransferFunction;\n  }; // Set the color of a volume to an RGB transfer function\n\n\n  publicAPI.setRGBTransferFunction = function (index, func) {\n    var modified = false;\n\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n\n    if (modified) {\n      publicAPI.modified();\n    }\n\n    return modified;\n  }; // Get the currently set RGB transfer function. Create one if none set.\n\n\n  publicAPI.getRGBTransferFunction = function (index) {\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].rGBTransferFunction;\n  }; // Set the scalar opacity of a volume to a transfer function\n\n\n  publicAPI.setScalarOpacity = function (index, func) {\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  }; // Get the scalar opacity transfer function. Create one if none set.\n\n\n  publicAPI.getScalarOpacity = function (index) {\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n\n    return model.componentData[index].scalarOpacity;\n  };\n\n  publicAPI.setComponentWeight = function (index, value) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n\n    var val = Math.min(1, Math.max(0, value));\n\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getComponentWeight = function (index) {\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n\n    return model.componentData[index].componentWeight;\n  };\n\n  publicAPI.setInterpolationTypeToNearest = function () {\n    return publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  };\n\n  publicAPI.setInterpolationTypeToLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  };\n\n  publicAPI.setInterpolationTypeToFastLinear = function () {\n    return publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  };\n\n  publicAPI.getInterpolationTypeAsString = function () {\n    return macro.enumToString(InterpolationType, model.interpolationType);\n  };\n\n  var sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"set\".concat(cap)] = function (index, value) {\n      if (model.componentData[index][\"\".concat(val)] !== value) {\n        model.componentData[index][\"\".concat(val)] = value;\n        publicAPI.modified();\n        return true;\n      }\n\n      return false;\n    };\n  });\n  var gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(function (val) {\n    var cap = macro.capitalize(val);\n\n    publicAPI[\"get\".concat(cap)] = function (index) {\n      return model.componentData[index][\"\".concat(val)];\n    };\n  });\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n\n  if (!model.componentData) {\n    model.componentData = [];\n\n    for (var i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineThickness']); // Object methods\n\n  vtkVolumeProperty(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeProperty'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkVolumeProperty$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkVolumeProperty from './VolumeProperty.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro; // ----------------------------------------------------------------------------\n// vtkVolume methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolume(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolume');\n\n  publicAPI.getVolumes = function () {\n    return publicAPI;\n  };\n\n  publicAPI.makeProperty = vtkVolumeProperty.newInstance;\n\n  publicAPI.getProperty = function () {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n\n    return model.property;\n  };\n\n  publicAPI.getBounds = function () {\n    if (model.mapper === null) {\n      return model.bounds;\n    } // Check for the special case when the mapper's bounds are unknown\n\n\n    var bds = model.mapper.getBounds();\n\n    if (!bds || bds.length !== 6) {\n      return bds;\n    } // Check for the special case when the actor is empty.\n\n\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    } // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n\n\n    var zip = function zip(rows) {\n      return rows[0].map(function (_, c) {\n        return rows.map(function (row) {\n          return row[c];\n        });\n      });\n    };\n\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce(function (a, b) {\n      return a && b[0] === b[1];\n    }, true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(function (x) {\n        return x;\n      });\n      var bbox = [];\n      vtkBoundingBox.getCorners(bds, bbox);\n      publicAPI.computeMatrix();\n      var tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      bbox.forEach(function (pt) {\n        return vec3.transformMat4(pt, pt, tmp4);\n      });\n      /* eslint-disable no-multi-assign */\n\n      model.bounds[0] = model.bounds[2] = model.bounds[4] = Number.MAX_VALUE;\n      model.bounds[1] = model.bounds[3] = model.bounds[5] = -Number.MAX_VALUE;\n      /* eslint-enable no-multi-assign */\n\n      model.bounds = model.bounds.map(function (d, i) {\n        return i % 2 === 0 ? bbox.reduce(function (a, b) {\n          return a > b[i / 2] ? b[i / 2] : a;\n        }, d) : bbox.reduce(function (a, b) {\n          return a < b[(i - 1) / 2] ? b[(i - 1) / 2] : a;\n        }, d);\n      });\n      model.boundsMTime.modified();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.getMTime = function () {\n    var mt = model.mtime;\n\n    if (model.property !== null) {\n      var time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n\n    return mt;\n  };\n\n  publicAPI.getRedrawMTime = function () {\n    var mt = model.mtime;\n\n    if (model.mapper !== null) {\n      var time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n\n    return mt;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [1, -1, 1, -1, 1, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkProp3D.extend(publicAPI, model, initialValues); // vtkTimeStamp\n\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime); // Build VTK API\n\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6); // Object methods\n\n  vtkVolume(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolume'); // ----------------------------------------------------------------------------\n\nvar vtkVolume$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVolume$1 as default, extend, newInstance };\n", "import d from \"./node_modules/@kitware/vtk.js/Rendering/Core/Volume.js\";export default d;\nexport * from \"./node_modules/@kitware/vtk.js/Rendering/Core/Volume.js\""],
  "mappings": "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",
  "names": ["zip", "DEFAULT_VALUES", "extend", "newInstance"]
}
