import {
  _slicedToArray
} from "./chunk-XL65WI7U.js";

// node_modules/@kitware/vtk.js/Common/Core/URLExtract.js
function identity(i) {
  return i;
}
function toNativeType(str) {
  if (str === null || str === "null") {
    return null;
  }
  if (str === "true") {
    return true;
  }
  if (str === "false") {
    return false;
  }
  if (str === void 0 || str === "undefined") {
    return void 0;
  }
  if (str[0] === "[" && str[str.length - 1] === "]") {
    return str.substring(1, str.length - 1).split(",").map(function(s) {
      return toNativeType(s.trim());
    });
  }
  if (str === "" || Number.isNaN(Number(str))) {
    return str;
  }
  return Number(str);
}
function extractURLParameters() {
  var castToNativeType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
  var query = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : window.location.search;
  var summary = {};
  var convert = castToNativeType ? toNativeType : identity;
  var queryTokens = (query || "").replace(/#.*/, "").replace("?", "").split("&");
  queryTokens.forEach(function(token) {
    var _token$split$map = token.split("=").map(function(s) {
      return decodeURIComponent(s);
    }), _token$split$map2 = _slicedToArray(_token$split$map, 2), key = _token$split$map2[0], value = _token$split$map2[1];
    if (key) {
      summary[key] = value ? convert(value) : true;
    }
  });
  return summary;
}
var vtkURLExtract = {
  toNativeType,
  extractURLParameters
};

export {
  vtkURLExtract
};
//# sourceMappingURL=chunk-TZFPXST2.js.map
