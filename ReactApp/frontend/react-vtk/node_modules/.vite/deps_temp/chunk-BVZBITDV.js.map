{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/Texture.js"],
  "sourcesContent": ["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTexture(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTexture');\n\n  publicAPI.imageLoaded = function () {\n    model.image.removeEventListener('load', publicAPI.imageLoaded);\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setJsImageData = function (imageData) {\n    if (model.jsImageData === imageData) {\n      return;\n    } // clear other entries\n\n\n    if (imageData !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.canvas = null;\n    }\n\n    model.jsImageData = imageData;\n    model.imageLoaded = true;\n    publicAPI.modified();\n  };\n\n  publicAPI.setCanvas = function (canvas) {\n    if (model.canvas === canvas) {\n      return;\n    } // clear other entries\n\n\n    if (canvas !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.image = null;\n      model.jsImageData = null;\n    }\n\n    model.canvas = canvas;\n    publicAPI.modified();\n  };\n\n  publicAPI.setImage = function (image) {\n    if (model.image === image) {\n      return;\n    } // clear other entries\n\n\n    if (image !== null) {\n      publicAPI.setInputData(null);\n      publicAPI.setInputConnection(null);\n      model.canvas = null;\n      model.jsImageData = null;\n    }\n\n    model.image = image;\n    model.imageLoaded = false;\n\n    if (image.complete) {\n      publicAPI.imageLoaded();\n    } else {\n      image.addEventListener('load', publicAPI.imageLoaded);\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.getDimensionality = function () {\n    var width = 0;\n    var height = 0;\n    var depth = 1;\n\n    if (publicAPI.getInputData()) {\n      var data = publicAPI.getInputData();\n      width = data.getDimensions()[0];\n      height = data.getDimensions()[1];\n      depth = data.getDimensions()[2];\n    }\n\n    if (model.jsImageData) {\n      width = model.jsImageData.width;\n      height = model.jsImageData.height;\n    }\n\n    if (model.canvas) {\n      width = model.canvas.width;\n      height = model.canvas.height;\n    }\n\n    if (model.image) {\n      width = model.image.width;\n      height = model.image.height;\n    }\n\n    var dimensionality = (width > 1) + (height > 1) + (depth > 1);\n    return dimensionality;\n  };\n\n  publicAPI.getInputAsJsImageData = function () {\n    if (!model.imageLoaded || publicAPI.getInputData()) return null;\n\n    if (model.jsImageData) {\n      return model.jsImageData();\n    }\n\n    if (model.canvas) {\n      var context = model.canvas.getContext('2d');\n      var imageData = context.getImageData(0, 0, model.canvas.width, model.canvas.height);\n      return imageData;\n    }\n\n    if (model.image) {\n      var canvas = document.createElement('canvas');\n      canvas.width = model.image.width;\n      canvas.height = model.image.height;\n\n      var _context = canvas.getContext('2d');\n\n      _context.translate(0, canvas.height);\n\n      _context.scale(1, -1);\n\n      _context.drawImage(model.image, 0, 0, model.image.width, model.image.height);\n\n      var _imageData = _context.getImageData(0, 0, canvas.width, canvas.height);\n\n      return _imageData;\n    }\n\n    return null;\n  };\n} // Use nativeArray instead of self\n\n\nvar generateMipmaps = function generateMipmaps(nativeArray, width, height, level) {\n  // TODO: FIX UNEVEN TEXTURE MIP GENERATION:\n  // When textures don't have standard ratios, higher mip levels\n  // result in their color chanels getting messed up and shifting\n  // 3x3 gaussian kernel\n  var g3m = [1, 2, 1]; // eslint-disable-line\n\n  var g3w = 4; // eslint-disable-line\n\n  var kernel = g3m;\n  var kernelWeight = g3w;\n  var hs = nativeArray.length / (width * height); // TODO: support for textures with depth more than 1\n\n  var currentWidth = width;\n  var currentHeight = height;\n  var imageData = nativeArray;\n  var maps = [imageData];\n\n  for (var i = 0; i < level; i++) {\n    var oldData = _toConsumableArray(imageData);\n\n    currentWidth /= 2;\n    currentHeight /= 2;\n    imageData = new Uint8ClampedArray(currentWidth * currentHeight * hs);\n    var vs = hs * currentWidth; // Scale down\n\n    var shift = 0;\n\n    for (var p = 0; p < imageData.length; p += hs) {\n      if (p % vs === 0) {\n        shift += 2 * hs * currentWidth;\n      }\n\n      for (var c = 0; c < hs; c++) {\n        var sample = oldData[shift + c];\n        sample += oldData[shift + hs + c];\n        sample += oldData[shift - 2 * vs + c];\n        sample += oldData[shift - 2 * vs + hs + c];\n        sample /= 4;\n        imageData[p + c] = sample;\n      }\n\n      shift += 2 * hs;\n    } // Horizontal Pass\n\n\n    var dataCopy = _toConsumableArray(imageData);\n\n    for (var _p = 0; _p < imageData.length; _p += hs) {\n      for (var _c = 0; _c < hs; _c++) {\n        var x = -(kernel.length - 1) / 2;\n        var kw = kernelWeight;\n        var value = 0.0;\n\n        for (var k = 0; k < kernel.length; k++) {\n          var index = _p + _c + x * hs;\n          var lineShift = index % vs - (_p + _c) % vs;\n          if (lineShift > hs) index += vs;\n          if (lineShift < -hs) index -= vs;\n\n          if (dataCopy[index]) {\n            value += dataCopy[index] * kernel[k];\n          } else {\n            kw -= kernel[k];\n          }\n\n          x += 1;\n        }\n\n        imageData[_p + _c] = value / kw;\n      }\n    } // Vertical Pass\n\n\n    dataCopy = _toConsumableArray(imageData);\n\n    for (var _p2 = 0; _p2 < imageData.length; _p2 += hs) {\n      for (var _c2 = 0; _c2 < hs; _c2++) {\n        var _x = -(kernel.length - 1) / 2;\n\n        var _kw = kernelWeight;\n        var _value = 0.0;\n\n        for (var _k = 0; _k < kernel.length; _k++) {\n          var _index = _p2 + _c2 + _x * vs;\n\n          if (dataCopy[_index]) {\n            _value += dataCopy[_index] * kernel[_k];\n          } else {\n            _kw -= kernel[_k];\n          }\n\n          _x += 1;\n        }\n\n        imageData[_p2 + _c2] = _value / _kw;\n      }\n    }\n\n    maps.push(imageData);\n  }\n\n  return maps;\n}; // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  image: null,\n  canvas: null,\n  jsImageData: null,\n  imageLoaded: false,\n  repeat: false,\n  interpolate: false,\n  edgeClamp: false,\n  mipLevel: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 6, 0);\n  macro.get(publicAPI, model, ['canvas', 'image', 'jsImageData', 'imageLoaded']);\n  macro.setGet(publicAPI, model, ['repeat', 'edgeClamp', 'interpolate', 'mipLevel']);\n  vtkTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkTexture');\nvar STATIC = {\n  generateMipmaps: generateMipmaps\n}; // ----------------------------------------------------------------------------\n\nvar vtkTexture$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC);\n\nexport { STATIC, vtkTexture$1 as default, extend, newInstance };\n"],
  "mappings": "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",
  "names": ["generateMipmaps"]
}
