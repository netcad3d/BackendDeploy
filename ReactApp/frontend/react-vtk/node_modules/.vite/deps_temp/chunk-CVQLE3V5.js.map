{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/Camera.js", "../../@kitware/vtk.js/Rendering/Core/Light.js", "../../@kitware/vtk.js/Rendering/Core/Viewport.js", "../../@kitware/vtk.js/Rendering/Core/Renderer.js"],
  "sourcesContent": ["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport { mat4, vec4, vec3, quat } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport { r as radiansFromDegrees, l as add, k as cross } from '../../Common/Core/Math/index.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro;\n/* eslint-disable new-cap */\n\n/*\n * Convenience function to access elements of a gl-matrix.  If it turns\n * out I have rows and columns swapped everywhere, then I'll just change\n * the order of 'row' and 'col' parameters in this function\n */\n// function getMatrixElement(matrix, row, col) {\n//   const idx = (row * 4) + col;\n//   return matrix[idx];\n// }\n// ----------------------------------------------------------------------------\n// vtkCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCamera'); // Set up private variables and methods\n\n  var origin = new Float64Array(3);\n  var dopbasis = new Float64Array([0.0, 0.0, -1.0]);\n  var upbasis = new Float64Array([0.0, 1.0, 0.0]);\n  var tmpMatrix = mat4.identity(new Float64Array(16));\n  var tmpMatrix2 = mat4.identity(new Float64Array(16));\n  var tmpvec1 = new Float64Array(3);\n  var tmpvec2 = new Float64Array(3);\n  var tmpvec3 = new Float64Array(3);\n  var rotateMatrix = mat4.identity(new Float64Array(16));\n  var trans = mat4.identity(new Float64Array(16));\n  var newPosition = new Float64Array(3);\n  var newFocalPoint = new Float64Array(3); // Internal Functions that don't need to be public\n\n  function computeViewPlaneNormal() {\n    // VPN is -DOP\n    model.viewPlaneNormal[0] = -model.directionOfProjection[0];\n    model.viewPlaneNormal[1] = -model.directionOfProjection[1];\n    model.viewPlaneNormal[2] = -model.directionOfProjection[2];\n  }\n\n  publicAPI.orthogonalizeViewUp = function () {\n    var vt = publicAPI.getViewMatrix();\n    model.viewUp[0] = vt[4];\n    model.viewUp[1] = vt[5];\n    model.viewUp[2] = vt[6];\n    publicAPI.modified();\n  };\n\n  publicAPI.setPosition = function (x, y, z) {\n    if (x === model.position[0] && y === model.position[1] && z === model.position[2]) {\n      return;\n    }\n\n    model.position[0] = x;\n    model.position[1] = y;\n    model.position[2] = z; // recompute the focal distance\n\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.setFocalPoint = function (x, y, z) {\n    if (x === model.focalPoint[0] && y === model.focalPoint[1] && z === model.focalPoint[2]) {\n      return;\n    }\n\n    model.focalPoint[0] = x;\n    model.focalPoint[1] = y;\n    model.focalPoint[2] = z; // recompute the focal distance\n\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.setDistance = function (d) {\n    if (model.distance === d) {\n      return;\n    }\n\n    model.distance = d;\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n    } // we want to keep the camera pointing in the same direction\n\n\n    var vec = model.directionOfProjection; // recalculate FocalPoint\n\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    publicAPI.modified();\n  }; //----------------------------------------------------------------------------\n  // This method must be called when the focal point or camera position changes\n\n\n  publicAPI.computeDistance = function () {\n    var dx = model.focalPoint[0] - model.position[0];\n    var dy = model.focalPoint[1] - model.position[1];\n    var dz = model.focalPoint[2] - model.position[2];\n    model.distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n    if (model.distance < 1e-20) {\n      model.distance = 1e-20;\n      vtkDebugMacro('Distance is set to minimum.');\n      var vec = model.directionOfProjection; // recalculate FocalPoint\n\n      model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n      model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n      model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    }\n\n    model.directionOfProjection[0] = dx / model.distance;\n    model.directionOfProjection[1] = dy / model.distance;\n    model.directionOfProjection[2] = dz / model.distance;\n    computeViewPlaneNormal();\n  }; //----------------------------------------------------------------------------\n  // Move the position of the camera along the view plane normal. Moving\n  // towards the focal point (e.g., > 1) is a dolly-in, moving away\n  // from the focal point (e.g., < 1) is a dolly-out.\n\n\n  publicAPI.dolly = function (amount) {\n    if (amount <= 0.0) {\n      return;\n    } // dolly moves the camera towards the focus\n\n\n    var d = model.distance / amount;\n    publicAPI.setPosition(model.focalPoint[0] - d * model.directionOfProjection[0], model.focalPoint[1] - d * model.directionOfProjection[1], model.focalPoint[2] - d * model.directionOfProjection[2]);\n  };\n\n  publicAPI.roll = function (angle) {\n    var eye = model.position;\n    var at = model.focalPoint;\n    var up = model.viewUp;\n    var viewUpVec4 = new Float64Array([up[0], up[1], up[2], 0.0]);\n    mat4.identity(rotateMatrix);\n    var viewDir = new Float64Array([at[0] - eye[0], at[1] - eye[1], at[2] - eye[2]]);\n    mat4.rotate(rotateMatrix, rotateMatrix, radiansFromDegrees(angle), viewDir);\n    vec4.transformMat4(viewUpVec4, viewUpVec4, rotateMatrix);\n    model.viewUp[0] = viewUpVec4[0];\n    model.viewUp[1] = viewUpVec4[1];\n    model.viewUp[2] = viewUpVec4[2];\n    publicAPI.modified();\n  };\n\n  publicAPI.azimuth = function (angle) {\n    var fp = model.focalPoint;\n    mat4.identity(trans); // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.yaw = function (angle) {\n    var position = model.position;\n    mat4.identity(trans); // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), model.viewUp);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint(newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]);\n  };\n\n  publicAPI.elevation = function (angle) {\n    var fp = model.focalPoint; // get the eye / camera position from the viewMatrix\n\n    var vt = publicAPI.getViewMatrix();\n    var axis = [-vt[0], -vt[1], -vt[2]];\n    mat4.identity(trans); // translate the focal point to the origin,\n    // rotate about view up,\n    // translate back again\n\n    mat4.translate(trans, trans, fp);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-fp[0], -fp[1], -fp[2]]); // apply the transform to the position\n\n    vec3.transformMat4(newPosition, model.position, trans);\n    publicAPI.setPosition(newPosition[0], newPosition[1], newPosition[2]);\n  };\n\n  publicAPI.pitch = function (angle) {\n    var position = model.position;\n    var vt = publicAPI.getViewMatrix();\n    var axis = [vt[0], vt[1], vt[2]];\n    mat4.identity(trans); // translate the camera to the origin,\n    // rotate about axis,\n    // translate back again\n\n    mat4.translate(trans, trans, position);\n    mat4.rotate(trans, trans, radiansFromDegrees(angle), axis);\n    mat4.translate(trans, trans, [-position[0], -position[1], -position[2]]); // apply the transform to the focal point\n\n    vec3.transformMat4(newFocalPoint, model.focalPoint, trans);\n    publicAPI.setFocalPoint.apply(publicAPI, _toConsumableArray(newFocalPoint));\n  };\n\n  publicAPI.zoom = function (factor) {\n    if (factor <= 0) {\n      return;\n    }\n\n    if (model.parallelProjection) {\n      model.parallelScale /= factor;\n    } else {\n      model.viewAngle /= factor;\n    }\n\n    publicAPI.modified();\n  };\n\n  publicAPI.translate = function (x, y, z) {\n    var offset = [x, y, z];\n    add(model.position, offset, model.position);\n    add(model.focalPoint, offset, model.focalPoint);\n    publicAPI.computeDistance();\n    publicAPI.modified();\n  };\n\n  publicAPI.applyTransform = function (transformMat4) {\n    var vuOld = [].concat(_toConsumableArray(model.viewUp), [1.0]);\n    var posNew = [];\n    var fpNew = [];\n    var vuNew = [];\n    vuOld[0] += model.position[0];\n    vuOld[1] += model.position[1];\n    vuOld[2] += model.position[2];\n    vec4.transformMat4(posNew, [].concat(_toConsumableArray(model.position), [1.0]), transformMat4);\n    vec4.transformMat4(fpNew, [].concat(_toConsumableArray(model.focalPoint), [1.0]), transformMat4);\n    vec4.transformMat4(vuNew, vuOld, transformMat4);\n    vuNew[0] -= posNew[0];\n    vuNew[1] -= posNew[1];\n    vuNew[2] -= posNew[2];\n    publicAPI.setPosition.apply(publicAPI, _toConsumableArray(posNew.slice(0, 3)));\n    publicAPI.setFocalPoint.apply(publicAPI, _toConsumableArray(fpNew.slice(0, 3)));\n    publicAPI.setViewUp.apply(publicAPI, _toConsumableArray(vuNew.slice(0, 3)));\n  };\n\n  publicAPI.getThickness = function () {\n    return model.clippingRange[1] - model.clippingRange[0];\n  };\n\n  publicAPI.setThickness = function (thickness) {\n    var t = thickness;\n\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n\n    publicAPI.setClippingRange(model.clippingRange[0], model.clippingRange[0] + t);\n  };\n\n  publicAPI.setThicknessFromFocalPoint = function (thickness) {\n    var t = thickness;\n\n    if (t < 1e-20) {\n      t = 1e-20;\n      vtkDebugMacro('Thickness is set to minimum.');\n    }\n\n    publicAPI.setClippingRange(model.distance - t / 2, model.distance + t / 2);\n  }; // Unimplemented functions\n\n\n  publicAPI.setRoll = function (angle) {}; // dependency on GetOrientation() and a model.ViewTransform object, see https://github.com/Kitware/VTK/blob/master/Common/Transforms/vtkTransform.cxx and https://vtk.org/doc/nightly/html/classvtkTransform.html\n\n\n  publicAPI.getRoll = function () {};\n\n  publicAPI.setObliqueAngles = function (alpha, beta) {};\n\n  publicAPI.getOrientation = function () {};\n\n  publicAPI.getOrientationWXYZ = function () {};\n\n  publicAPI.getFrustumPlanes = function (aspect) {// Return array of 24 params (4 params for each of 6 plane equations)\n  };\n\n  publicAPI.getCameraLightTransformMatrix = function (matrix) {\n    mat4.copy(matrix, model.cameraLightTransform);\n    return matrix;\n  };\n\n  publicAPI.computeCameraLightTransform = function () {\n    // not sure if this is the correct transformation, based on the same funciton in VTK\n    mat4.copy(tmpMatrix, publicAPI.getViewMatrix());\n    mat4.invert(tmpMatrix, tmpMatrix);\n    mat4.fromScaling(tmpMatrix2, [model.distance, model.distance, model.distance]);\n    mat4.multiply(tmpMatrix, tmpMatrix, tmpMatrix2);\n    mat4.identity(model.cameraLightTransform);\n    mat4.translate(model.cameraLightTransform, tmpMatrix, [0.0, 0.0, -1.0]);\n  };\n\n  publicAPI.deepCopy = function (sourceCamera) {};\n\n  publicAPI.physicalOrientationToWorldDirection = function (ori) {\n    // push the x axis through the orientation quat\n    var oriq = quat.fromValues(ori[0], ori[1], ori[2], ori[3]);\n    var coriq = quat.create();\n    var qdir = quat.fromValues(0.0, 0.0, 1.0, 0.0);\n    quat.conjugate(coriq, oriq); // rotate the z axis by the quat\n\n    quat.multiply(qdir, oriq, qdir);\n    quat.multiply(qdir, qdir, coriq); // return the z axis in world coords\n\n    return [qdir[0], qdir[1], qdir[2]];\n  };\n\n  publicAPI.getPhysicalToWorldMatrix = function (result) {\n    publicAPI.getWorldToPhysicalMatrix(result);\n    mat4.invert(result, result);\n  };\n\n  publicAPI.getWorldToPhysicalMatrix = function (result) {\n    mat4.identity(result); // now the physical to vtk world rotation tform\n\n    var physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight);\n    result[0] = physVRight[0];\n    result[1] = physVRight[1];\n    result[2] = physVRight[2];\n    result[4] = model.physicalViewUp[0];\n    result[5] = model.physicalViewUp[1];\n    result[6] = model.physicalViewUp[2];\n    result[8] = -model.physicalViewNorth[0];\n    result[9] = -model.physicalViewNorth[1];\n    result[10] = -model.physicalViewNorth[2];\n    mat4.transpose(result, result);\n    vec3.set(tmpvec1, 1 / model.physicalScale, 1 / model.physicalScale, 1 / model.physicalScale);\n    mat4.scale(result, result, tmpvec1);\n    mat4.translate(result, result, model.physicalTranslation);\n  };\n\n  publicAPI.computeViewParametersFromViewMatrix = function (vmat) {\n    // invert to get view to world\n    mat4.invert(tmpMatrix, vmat); // note with glmatrix operations happen in\n    // the reverse order\n    // mat.scale\n    // mat.translate\n    // will result in the translation then the scale\n    // mat.mult(a,b)\n    // results in perform the B transformation then A\n    // then extract the params position, orientation\n    // push 0,0,0 through to get a translation\n\n    vec3.transformMat4(tmpvec1, origin, tmpMatrix);\n    publicAPI.computeDistance();\n    var oldDist = model.distance;\n    publicAPI.setPosition(tmpvec1[0], tmpvec1[1], tmpvec1[2]); // push basis vectors to get orientation\n\n    vec3.transformMat4(tmpvec2, dopbasis, tmpMatrix);\n    vec3.subtract(tmpvec2, tmpvec2, tmpvec1);\n    vec3.normalize(tmpvec2, tmpvec2);\n    publicAPI.setDirectionOfProjection(tmpvec2[0], tmpvec2[1], tmpvec2[2]);\n    vec3.transformMat4(tmpvec3, upbasis, tmpMatrix);\n    vec3.subtract(tmpvec3, tmpvec3, tmpvec1);\n    vec3.normalize(tmpvec3, tmpvec3);\n    publicAPI.setViewUp(tmpvec3[0], tmpvec3[1], tmpvec3[2]);\n    publicAPI.setDistance(oldDist);\n  }; // the provided matrix should include\n  // translation and orientation only\n  // mat is physical to view\n\n\n  publicAPI.computeViewParametersFromPhysicalMatrix = function (mat) {\n    // get the WorldToPhysicalMatrix\n    publicAPI.getWorldToPhysicalMatrix(tmpMatrix); // first convert the physical -> view matrix to be\n    // world -> view\n\n    mat4.multiply(tmpMatrix, mat, tmpMatrix);\n    publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n  };\n\n  publicAPI.setViewMatrix = function (mat) {\n    model.viewMatrix = mat;\n\n    if (model.viewMatrix) {\n      mat4.copy(tmpMatrix, model.viewMatrix);\n      publicAPI.computeViewParametersFromViewMatrix(tmpMatrix);\n      mat4.transpose(model.viewMatrix, model.viewMatrix);\n    }\n  };\n\n  publicAPI.getViewMatrix = function () {\n    if (model.viewMatrix) {\n      return model.viewMatrix;\n    }\n\n    mat4.lookAt(tmpMatrix, model.position, // eye\n    model.focalPoint, // at\n    model.viewUp // up\n    );\n    mat4.transpose(tmpMatrix, tmpMatrix);\n    var result = new Float64Array(16);\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n\n  publicAPI.setProjectionMatrix = function (mat) {\n    model.projectionMatrix = mat;\n  };\n\n  publicAPI.getProjectionMatrix = function (aspect, nearz, farz) {\n    var result = new Float64Array(16);\n    mat4.identity(result);\n\n    if (model.projectionMatrix) {\n      var scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n\n    mat4.identity(tmpMatrix); // FIXME: Not sure what to do about adjust z buffer here\n    // adjust Z-buffer range\n    // this->ProjectionTransform->AdjustZBuffer( -1, +1, nearz, farz );\n\n    var cWidth = model.clippingRange[1] - model.clippingRange[0];\n    var cRange = [model.clippingRange[0] + (nearz + 1) * cWidth / 2.0, model.clippingRange[0] + (farz + 1) * cWidth / 2.0];\n\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      var width = model.parallelScale * aspect;\n      var height = model.parallelScale;\n      var xmin = (model.windowCenter[0] - 1.0) * width;\n      var xmax = (model.windowCenter[0] + 1.0) * width;\n      var ymin = (model.windowCenter[1] - 1.0) * height;\n      var ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      var tmp = Math.tan(radiansFromDegrees(model.viewAngle) / 2.0);\n\n      var _width;\n\n      var _height;\n\n      if (model.useHorizontalViewAngle === true) {\n        _width = model.clippingRange[0] * tmp;\n        _height = model.clippingRange[0] * tmp / aspect;\n      } else {\n        _width = model.clippingRange[0] * tmp * aspect;\n        _height = model.clippingRange[0] * tmp;\n      }\n\n      var _xmin = (model.windowCenter[0] - 1.0) * _width;\n\n      var _xmax = (model.windowCenter[0] + 1.0) * _width;\n\n      var _ymin = (model.windowCenter[1] - 1.0) * _height;\n\n      var _ymax = (model.windowCenter[1] + 1.0) * _height;\n\n      var znear = cRange[0];\n      var zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (_xmax - _xmin);\n      tmpMatrix[5] = 2.0 * znear / (_ymax - _ymin);\n      tmpMatrix[2] = (_xmin + _xmax) / (_xmax - _xmin);\n      tmpMatrix[6] = (_ymin + _ymax) / (_ymax - _ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n\n  publicAPI.getCompositeProjectionMatrix = function (aspect, nearz, farz) {\n    var vMat = publicAPI.getViewMatrix();\n    var pMat = publicAPI.getProjectionMatrix(aspect, nearz, farz); // mats are transposed so the order is A then B\n    // we reuse pMat as it is a copy so we can do what we want with it\n\n    mat4.multiply(pMat, vMat, pMat);\n    return pMat;\n  };\n\n  publicAPI.setDirectionOfProjection = function (x, y, z) {\n    if (model.directionOfProjection[0] === x && model.directionOfProjection[1] === y && model.directionOfProjection[2] === z) {\n      return;\n    }\n\n    model.directionOfProjection[0] = x;\n    model.directionOfProjection[1] = y;\n    model.directionOfProjection[2] = z;\n    var vec = model.directionOfProjection; // recalculate FocalPoint\n\n    model.focalPoint[0] = model.position[0] + vec[0] * model.distance;\n    model.focalPoint[1] = model.position[1] + vec[1] * model.distance;\n    model.focalPoint[2] = model.position[2] + vec[2] * model.distance;\n    computeViewPlaneNormal();\n  }; // used to handle convert js device orientation angles\n  // when you use this method the camera will adjust to the\n  // device orientation such that the physicalViewUp you set\n  // in world coordinates looks up, and the physicalViewNorth\n  // you set in world coorindates will (maybe) point north\n  //\n  // NOTE WARNING - much of the documentation out there on how\n  // orientation works is seriously wrong. Even worse the Chrome\n  // device orientation simulator is completely wrong and should\n  // never be used. OMG it is so messed up.\n  //\n  // how it seems to work on iOS is that the device orientation\n  // is specified in extrinsic angles with a alpha, beta, gamma\n  // convention with axes of Z, X, Y (the code below substitutes\n  // the physical coordinate system for these axes to get the right\n  // modified coordinate system.\n\n\n  publicAPI.setDeviceAngles = function (alpha, beta, gamma, screen) {\n    var physVRight = [3];\n    cross(model.physicalViewNorth, model.physicalViewUp, physVRight); // phone to physical coordinates\n\n    var rotmat = mat4.identity(new Float64Array(16));\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(alpha), model.physicalViewUp);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(beta), physVRight);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(gamma), model.physicalViewNorth);\n    mat4.rotate(rotmat, rotmat, radiansFromDegrees(-screen), model.physicalViewUp);\n    var dop = new Float64Array([-model.physicalViewUp[0], -model.physicalViewUp[1], -model.physicalViewUp[2]]);\n    var vup = new Float64Array(model.physicalViewNorth);\n    vec3.transformMat4(dop, dop, rotmat);\n    vec3.transformMat4(vup, vup, rotmat);\n    publicAPI.setDirectionOfProjection(dop[0], dop[1], dop[2]);\n    publicAPI.setViewUp(vup[0], vup[1], vup[2]);\n    publicAPI.modified();\n  };\n\n  publicAPI.setOrientationWXYZ = function (degrees, x, y, z) {\n    var quatMat = mat4.identity(new Float64Array(16));\n\n    if (degrees !== 0.0 && (x !== 0.0 || y !== 0.0 || z !== 0.0)) {\n      // convert to radians\n      var angle = radiansFromDegrees(degrees);\n      var q = quat.create();\n      quat.setAxisAngle(q, [x, y, z], angle);\n      mat4.fromQuat(quatMat, q);\n    }\n\n    var newdop = new Float64Array(3);\n    vec3.transformMat4(newdop, [0.0, 0.0, -1.0], quatMat);\n    var newvup = new Float64Array(3);\n    vec3.transformMat4(newvup, [0.0, 1.0, 0.0], quatMat);\n    publicAPI.setDirectionOfProjection.apply(publicAPI, _toConsumableArray(newdop));\n    publicAPI.setViewUp.apply(publicAPI, _toConsumableArray(newvup));\n    publicAPI.modified();\n  };\n\n  publicAPI.computeClippingRange = function (bounds) {\n    var vn = null;\n    var position = null;\n    vn = model.viewPlaneNormal;\n    position = model.position;\n    var a = -vn[0];\n    var b = -vn[1];\n    var c = -vn[2];\n    var d = -(a * position[0] + b * position[1] + c * position[2]); // Set the max near clipping plane and the min far clipping plane\n\n    var range = [a * bounds[0] + b * bounds[2] + c * bounds[4] + d, 1e-18]; // Find the closest / farthest bounding box vertex\n\n    for (var k = 0; k < 2; k++) {\n      for (var j = 0; j < 2; j++) {\n        for (var i = 0; i < 2; i++) {\n          var dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = dist < range[0] ? dist : range[0];\n          range[1] = dist > range[1] ? dist : range[1];\n        }\n      }\n    }\n\n    return range;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  viewUp: [0, 1, 0],\n  directionOfProjection: [0, 0, -1],\n  parallelProjection: false,\n  useHorizontalViewAngle: false,\n  viewAngle: 30,\n  parallelScale: 1,\n  clippingRange: [0.01, 1000.01],\n  windowCenter: [0, 0],\n  viewPlaneNormal: [0, 0, 1],\n  useOffAxisProjection: false,\n  screenBottomLeft: [-0.5, -0.5, -0.5],\n  screenBottomRight: [0.5, -0.5, -0.5],\n  screenTopRight: [0.5, 0.5, -0.5],\n  freezeFocalPoint: false,\n  projectionMatrix: null,\n  viewMatrix: null,\n  cameraLightTransform: mat4.create(),\n  // used for world to physical transformations\n  physicalTranslation: [0, 0, 0],\n  physicalScale: 1.0,\n  physicalViewUp: [0, 1, 0],\n  physicalViewNorth: [0, 0, -1]\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['distance']);\n  macro.setGet(publicAPI, model, ['parallelProjection', 'useHorizontalViewAngle', 'viewAngle', 'parallelScale', 'useOffAxisProjection', 'freezeFocalPoint', 'physicalScale']);\n  macro.getArray(publicAPI, model, ['directionOfProjection', 'viewPlaneNormal', 'position', 'focalPoint']);\n  macro.setGetArray(publicAPI, model, ['clippingRange', 'windowCenter'], 2);\n  macro.setGetArray(publicAPI, model, ['viewUp', 'screenBottomLeft', 'screenBottomRight', 'screenTopRight', 'physicalTranslation', 'physicalViewUp', 'physicalViewNorth'], 3); // Object methods\n\n  vtkCamera(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCamera'); // ----------------------------------------------------------------------------\n\nvar vtkCamera$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { DEFAULT_VALUES, vtkCamera$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport { m as normalize, r as radiansFromDegrees } from '../../Common/Core/Math/index.js';\nimport { vec3 } from 'gl-matrix';\n\nvar LIGHT_TYPES = ['HeadLight', 'CameraLight', 'SceneLight']; // ----------------------------------------------------------------------------\n// vtkLight methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLight(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLight');\n  var tmpVec = new Float64Array(3);\n\n  publicAPI.getTransformedPosition = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.position, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.position[0], model.position[1], model.position[2]);\n    }\n\n    return tmpVec;\n  };\n\n  publicAPI.getTransformedFocalPoint = function () {\n    if (model.transformMatrix) {\n      vec3.transformMat4(tmpVec, model.focalPoint, model.transformMatrix);\n    } else {\n      vec3.set(tmpVec, model.focalPoint[0], model.focalPoint[1], model.focalPoint[2]);\n    }\n\n    return tmpVec;\n  };\n\n  publicAPI.getDirection = function () {\n    if (model.directionMTime < model.mtime) {\n      vec3.sub(model.direction, model.focalPoint, model.position);\n      normalize(model.direction);\n      model.directionMTime = model.mtime;\n    }\n\n    return model.direction;\n  }; // Sets the direction from a vec3 instead of a focal point\n\n\n  publicAPI.setDirection = function (directionVector) {\n    var newFocalPoint = new Float64Array(3);\n    vec3.sub(newFocalPoint, model.position, directionVector);\n    model.focalPoint = newFocalPoint;\n  };\n\n  publicAPI.setDirectionAngle = function (elevation, azimuth) {\n    var elevationRadians = radiansFromDegrees(elevation);\n    var azimuthRadians = radiansFromDegrees(azimuth);\n    publicAPI.setPosition(Math.cos(elevationRadians) * Math.sin(azimuthRadians), Math.sin(elevationRadians), Math.cos(elevationRadians) * Math.cos(azimuthRadians));\n    publicAPI.setFocalPoint(0, 0, 0);\n    publicAPI.setPositional(0);\n  };\n\n  publicAPI.setLightTypeToHeadLight = function () {\n    publicAPI.setLightType('HeadLight');\n  };\n\n  publicAPI.setLightTypeToCameraLight = function () {\n    publicAPI.setLightType('CameraLight');\n  };\n\n  publicAPI.setLightTypeToSceneLight = function () {\n    publicAPI.setTransformMatrix(null);\n    publicAPI.setLightType('SceneLight');\n  };\n\n  publicAPI.lightTypeIsHeadLight = function () {\n    return model.lightType === 'HeadLight';\n  };\n\n  publicAPI.lightTypeIsSceneLight = function () {\n    return model.lightType === 'SceneLight';\n  };\n\n  publicAPI.lightTypeIsCameraLight = function () {\n    return model.lightType === 'CameraLight';\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  switch: true,\n  intensity: 1,\n  color: [1, 1, 1],\n  position: [0, 0, 1],\n  focalPoint: [0, 0, 0],\n  positional: false,\n  exponent: 1,\n  coneAngle: 30,\n  coneFalloff: 5,\n  attenuationValues: [1, 0, 0],\n  transformMatrix: null,\n  lightType: 'SceneLight',\n  shadowAttenuation: 1,\n  direction: [0, 0, 0],\n  directionMTime: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['intensity', 'switch', 'positional', 'exponent', 'coneAngle', 'coneFalloff', 'transformMatrix', 'lightType', 'shadowAttenuation', 'attenuationValues']);\n  macro.setGetArray(publicAPI, model, ['color', 'position', 'focalPoint', 'attenuationValues'], 3); // Object methods\n\n  vtkLight(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkLight'); // ----------------------------------------------------------------------------\n\nvar vtkLight$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  LIGHT_TYPES: LIGHT_TYPES\n};\n\nexport { LIGHT_TYPES, vtkLight$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction notImplemented(method) {\n  return function () {\n    return vtkErrorMacro(\"vtkViewport::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkViewport methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkViewport(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewport'); // Public API methods\n\n  publicAPI.getViewProps = function () {\n    return model.props;\n  };\n\n  publicAPI.hasViewProp = function (prop) {\n    return !!model.props.filter(function (item) {\n      return item === prop;\n    }).length;\n  };\n\n  publicAPI.addViewProp = function (prop) {\n    if (prop && !publicAPI.hasViewProp(prop)) {\n      model.props = model.props.concat(prop);\n    }\n  };\n\n  publicAPI.removeViewProp = function (prop) {\n    var newPropList = model.props.filter(function (item) {\n      return item !== prop;\n    });\n\n    if (model.props.length !== newPropList.length) {\n      model.props = newPropList;\n    }\n  };\n\n  publicAPI.removeAllViewProps = function () {\n    model.props = [];\n  }; // this method get all the props including any nested props\n\n\n  function gatherProps(prop) {\n    var allProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    allProps.push(prop);\n    var children = prop.getNestedProps();\n\n    if (children && children.length) {\n      for (var i = 0; i < children.length; i++) {\n        gatherProps(children[i], allProps);\n      }\n    }\n\n    return allProps;\n  }\n\n  publicAPI.getViewPropsWithNestedProps = function () {\n    var allPropsArray = [];\n\n    for (var i = 0; i < model.props.length; i++) {\n      gatherProps(model.props[i], allPropsArray);\n    }\n\n    return allPropsArray;\n  };\n\n  publicAPI.addActor2D = publicAPI.addViewProp;\n\n  publicAPI.removeActor2D = function (prop) {\n    // VTK way: model.actors2D.RemoveItem(prop);\n    publicAPI.removeViewProp(prop);\n  };\n\n  publicAPI.getActors2D = function () {\n    model.actors2D = [];\n    model.props.forEach(function (prop) {\n      model.actors2D = model.actors2D.concat(prop.getActors2D());\n    });\n    return model.actors2D;\n  };\n\n  publicAPI.displayToView = function () {\n    return vtkErrorMacro('call displayToView on your view instead');\n  };\n\n  publicAPI.viewToDisplay = function () {\n    return vtkErrorMacro('callviewtodisplay on your view instead');\n  };\n\n  publicAPI.getSize = function () {\n    return vtkErrorMacro('call getSize on your View instead');\n  };\n\n  publicAPI.normalizedDisplayToProjection = function (x, y, z) {\n    // first to normalized viewport\n    var nvp = publicAPI.normalizedDisplayToNormalizedViewport(x, y, z); // then to view\n\n    return publicAPI.normalizedViewportToProjection(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedDisplayToNormalizedViewport = function (x, y, z) {\n    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [(x - model.viewport[0]) / scale[0], (y - model.viewport[1]) / scale[1], z];\n  };\n\n  publicAPI.normalizedViewportToProjection = function (x, y, z) {\n    return [x * 2.0 - 1.0, y * 2.0 - 1.0, z * 2.0 - 1.0];\n  };\n\n  publicAPI.projectionToNormalizedDisplay = function (x, y, z) {\n    // first to nvp\n    var nvp = publicAPI.projectionToNormalizedViewport(x, y, z); // then to ndp\n\n    return publicAPI.normalizedViewportToNormalizedDisplay(nvp[0], nvp[1], nvp[2]);\n  };\n\n  publicAPI.normalizedViewportToNormalizedDisplay = function (x, y, z) {\n    var scale = [model.viewport[2] - model.viewport[0], model.viewport[3] - model.viewport[1]];\n    return [x * scale[0] + model.viewport[0], y * scale[1] + model.viewport[1], z];\n  };\n\n  publicAPI.projectionToNormalizedViewport = function (x, y, z) {\n    return [(x + 1.0) * 0.5, (y + 1.0) * 0.5, (z + 1.0) * 0.5];\n  };\n\n  publicAPI.PickPropFrom = notImplemented('PickPropFrom');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _vtkWindow: null,\n  background: [0, 0, 0],\n  background2: [0.2, 0.2, 0.2],\n  gradientBackground: false,\n  viewport: [0, 0, 1, 1],\n  aspect: [1, 1],\n  pixelAspect: [1, 1],\n  props: [],\n  actors2D: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  macro.setGetArray(publicAPI, model, ['viewport'], 4);\n  macro.setGetArray(publicAPI, model, ['background', 'background2'], 3);\n  vtkViewport(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkViewport'); // ----------------------------------------------------------------------------\n\nvar vtkViewport$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewport$1 as default, extend, newInstance };\n", "import { mat4, vec3 } from 'gl-matrix';\nimport { newInstance as newInstance$1, get, setGet, getArray, setGetArray, moveToProtected, vtkDebugMacro as vtkDebugMacro$1, vtkErrorMacro as vtkErrorMacro$1, vtkWarningMacro as vtkWarningMacro$1 } from '../../macros.js';\nimport vtkCamera from './Camera.js';\nimport vtkLight from './Light.js';\nimport { Q as areBoundsInitialized, u as uninitializeBounds, r as radiansFromDegrees, d as dot, O as createUninitializedBounds } from '../../Common/Core/Math/index.js';\nimport vtkViewport from './Viewport.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\n\nvar vtkDebugMacro = vtkDebugMacro$1,\n    vtkErrorMacro = vtkErrorMacro$1,\n    vtkWarningMacro = vtkWarningMacro$1;\n\nfunction notImplemented(method) {\n  return function () {\n    return vtkErrorMacro(\"vtkRenderer::\".concat(method, \" - NOT IMPLEMENTED\"));\n  };\n} // ----------------------------------------------------------------------------\n// vtkRenderer methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkRenderer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderer'); // Events\n\n  var COMPUTE_VISIBLE_PROP_BOUNDS_EVENT = {\n    type: 'ComputeVisiblePropBoundsEvent',\n    renderer: publicAPI\n  };\n  var RESET_CAMERA_CLIPPING_RANGE_EVENT = {\n    type: 'ResetCameraClippingRangeEvent',\n    renderer: publicAPI\n  };\n  var RESET_CAMERA_EVENT = {\n    type: 'ResetCameraEvent',\n    renderer: publicAPI\n  };\n\n  publicAPI.updateCamera = function () {\n    if (!model.activeCamera) {\n      vtkDebugMacro('No cameras are on, creating one.'); // the get method will automagically create a camera\n      // and reset it since one hasn't been specified yet.\n\n      publicAPI.getActiveCameraAndResetIfCreated();\n    } // update the viewing transformation\n\n\n    model.activeCamera.render(publicAPI);\n    return true;\n  };\n\n  publicAPI.updateLightsGeometryToFollowCamera = function () {\n    // only update the light's geometry if this Renderer is tracking\n    // this lights.  That allows one renderer to view the lights that\n    // another renderer is setting up.\n    var camera = publicAPI.getActiveCameraAndResetIfCreated();\n    model.lights.forEach(function (light) {\n      if (light.lightTypeIsSceneLight()) ; else if (light.lightTypeIsHeadLight()) {\n        // update position and orientation of light to match camera.\n        light.setPositionFrom(camera.getPositionByReference());\n        light.setFocalPointFrom(camera.getFocalPointByReference());\n        light.modified(camera.getMTime());\n      } else if (light.lightTypeIsCameraLight()) {\n        light.setTransformMatrix(camera.getCameraLightTransformMatrix(mat4.create()));\n      } else {\n        vtkErrorMacro('light has unknown light type', light.get());\n      }\n    });\n  };\n\n  publicAPI.updateLightGeometry = function () {\n    if (model.lightFollowCamera) {\n      // only update the light's geometry if this Renderer is tracking\n      // this lights.  That allows one renderer to view the lights that\n      // another renderer is setting up.\n      return publicAPI.updateLightsGeometryToFollowCamera();\n    }\n\n    return true;\n  };\n\n  publicAPI.allocateTime = notImplemented('allocateTime');\n  publicAPI.updateGeometry = notImplemented('updateGeometry');\n\n  publicAPI.getVTKWindow = function () {\n    return model._renderWindow;\n  };\n\n  publicAPI.setLayer = function (layer) {\n    vtkDebugMacro(publicAPI.getClassName(), publicAPI, 'setting Layer to ', layer);\n\n    if (model.layer !== layer) {\n      model.layer = layer;\n      publicAPI.modified();\n    }\n\n    publicAPI.setPreserveColorBuffer(!!layer);\n  };\n\n  publicAPI.setActiveCamera = function (camera) {\n    if (model.activeCamera === camera) {\n      return false;\n    }\n\n    model.activeCamera = camera;\n    publicAPI.modified();\n    publicAPI.invokeEvent({\n      type: 'ActiveCameraEvent',\n      camera: camera\n    });\n    return true;\n  };\n\n  publicAPI.makeCamera = function () {\n    var camera = vtkCamera.newInstance();\n    publicAPI.invokeEvent({\n      type: 'CreateCameraEvent',\n      camera: camera\n    });\n    return camera;\n  }; // Replace the set/get macro method\n\n\n  publicAPI.getActiveCamera = function () {\n    if (!model.activeCamera) {\n      model.activeCamera = publicAPI.makeCamera();\n    }\n\n    return model.activeCamera;\n  };\n\n  publicAPI.getActiveCameraAndResetIfCreated = function () {\n    if (!model.activeCamera) {\n      publicAPI.getActiveCamera();\n      publicAPI.resetCamera();\n    }\n\n    return model.activeCamera;\n  };\n\n  publicAPI.getActors = function () {\n    model.actors = [];\n    model.props.forEach(function (prop) {\n      model.actors = model.actors.concat(prop.getActors());\n    });\n    return model.actors;\n  };\n\n  publicAPI.addActor = publicAPI.addViewProp;\n\n  publicAPI.removeActor = function (actor) {\n    model.actors = model.actors.filter(function (a) {\n      return a !== actor;\n    });\n    publicAPI.removeViewProp(actor);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllActors = function () {\n    var actors = publicAPI.getActors();\n    actors.forEach(function (actor) {\n      publicAPI.removeViewProp(actor);\n    });\n    model.actors = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.getVolumes = function () {\n    model.volumes = [];\n    model.props.forEach(function (prop) {\n      model.volumes = model.volumes.concat(prop.getVolumes());\n    });\n    return model.volumes;\n  };\n\n  publicAPI.addVolume = publicAPI.addViewProp;\n\n  publicAPI.removeVolume = function (volume) {\n    model.volumes = model.volumes.filter(function (v) {\n      return v !== volume;\n    });\n    publicAPI.removeViewProp(volume);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllVolumes = function () {\n    var volumes = publicAPI.getVolumes();\n    volumes.forEach(function (volume) {\n      publicAPI.removeViewProp(volume);\n    });\n    model.volumes = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.addLight = function (light) {\n    model.lights = [].concat(model.lights, light);\n    publicAPI.modified();\n  };\n\n  publicAPI.removeLight = function (light) {\n    model.lights = model.lights.filter(function (l) {\n      return l !== light;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.removeAllLights = function () {\n    model.lights = [];\n    publicAPI.modified();\n  };\n\n  publicAPI.setLightCollection = function (lights) {\n    model.lights = lights;\n    publicAPI.modified();\n  };\n\n  publicAPI.makeLight = vtkLight.newInstance;\n\n  publicAPI.createLight = function () {\n    if (!model.automaticLightCreation) {\n      return;\n    }\n\n    if (model._createdLight) {\n      publicAPI.removeLight(model._createdLight);\n\n      model._createdLight.delete();\n\n      model._createdLight = null;\n    }\n\n    model._createdLight = publicAPI.makeLight();\n    publicAPI.addLight(model._createdLight);\n\n    model._createdLight.setLightTypeToHeadLight(); // set these values just to have a good default should LightFollowCamera\n    // be turned off.\n\n\n    model._createdLight.setPosition(publicAPI.getActiveCamera().getPosition());\n\n    model._createdLight.setFocalPoint(publicAPI.getActiveCamera().getFocalPoint());\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.normalizedDisplayToWorld = function (x, y, z, aspect) {\n    var vpd = publicAPI.normalizedDisplayToProjection(x, y, z);\n    vpd = publicAPI.projectionToView(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.viewToWorld(vpd[0], vpd[1], vpd[2]);\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.worldToNormalizedDisplay = function (x, y, z, aspect) {\n    var vpd = publicAPI.worldToView(x, y, z);\n    vpd = publicAPI.viewToProjection(vpd[0], vpd[1], vpd[2], aspect);\n    return publicAPI.projectionToNormalizedDisplay(vpd[0], vpd[1], vpd[2]);\n  }; // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.viewToWorld = function (x, y, z) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToWorld: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the view matrix from the active camera\n\n\n    var matrix = model.activeCamera.getViewMatrix();\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix); // Transform point to world coordinates\n\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  publicAPI.projectionToView = function (x, y, z, aspect) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ProjectionToView: no active camera, cannot compute projection to view, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the projection transformation from the active camera\n\n\n    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.invert(matrix, matrix);\n    mat4.transpose(matrix, matrix); // Transform point to world coordinates\n\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  }; // Convert world point coordinates to view coordinates.\n\n\n  publicAPI.worldToView = function (x, y, z) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('WorldToView: no active camera, cannot compute view to world, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the view transformation from the active camera\n\n\n    var matrix = model.activeCamera.getViewMatrix();\n    mat4.transpose(matrix, matrix);\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  }; // Convert world point coordinates to view coordinates.\n  // requires the aspect ratio of the viewport as X/Y\n\n\n  publicAPI.viewToProjection = function (x, y, z, aspect) {\n    if (model.activeCamera === null) {\n      vtkErrorMacro('ViewToProjection: no active camera, cannot compute view to projection, returning 0,0,0');\n      return [0, 0, 0];\n    } // get the projeciton transformation from the active camera\n\n\n    var matrix = model.activeCamera.getProjectionMatrix(aspect, -1.0, 1.0);\n    mat4.transpose(matrix, matrix);\n    var result = new Float64Array([x, y, z]);\n    vec3.transformMat4(result, result, matrix);\n    return result;\n  };\n\n  publicAPI.computeVisiblePropBounds = function () {\n    model.allBounds[0] = vtkBoundingBox.INIT_BOUNDS[0];\n    model.allBounds[1] = vtkBoundingBox.INIT_BOUNDS[1];\n    model.allBounds[2] = vtkBoundingBox.INIT_BOUNDS[2];\n    model.allBounds[3] = vtkBoundingBox.INIT_BOUNDS[3];\n    model.allBounds[4] = vtkBoundingBox.INIT_BOUNDS[4];\n    model.allBounds[5] = vtkBoundingBox.INIT_BOUNDS[5];\n    var nothingVisible = true;\n    publicAPI.invokeEvent(COMPUTE_VISIBLE_PROP_BOUNDS_EVENT); // loop through all props\n\n    for (var index = 0; index < model.props.length; ++index) {\n      var prop = model.props[index];\n\n      if (prop.getVisibility() && prop.getUseBounds()) {\n        var bounds = prop.getBounds();\n\n        if (bounds && areBoundsInitialized(bounds)) {\n          nothingVisible = false;\n\n          if (bounds[0] < model.allBounds[0]) {\n            model.allBounds[0] = bounds[0];\n          }\n\n          if (bounds[1] > model.allBounds[1]) {\n            model.allBounds[1] = bounds[1];\n          }\n\n          if (bounds[2] < model.allBounds[2]) {\n            model.allBounds[2] = bounds[2];\n          }\n\n          if (bounds[3] > model.allBounds[3]) {\n            model.allBounds[3] = bounds[3];\n          }\n\n          if (bounds[4] < model.allBounds[4]) {\n            model.allBounds[4] = bounds[4];\n          }\n\n          if (bounds[5] > model.allBounds[5]) {\n            model.allBounds[5] = bounds[5];\n          }\n        }\n      }\n    }\n\n    if (nothingVisible) {\n      uninitializeBounds(model.allBounds);\n      vtkDebugMacro(\"Can't compute bounds, no 3D props are visible\");\n    }\n\n    return model.allBounds;\n  };\n\n  publicAPI.resetCamera = function () {\n    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n    var center = [0, 0, 0];\n\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera!');\n      return false;\n    }\n\n    var vn = null;\n\n    if (publicAPI.getActiveCamera()) {\n      vn = model.activeCamera.getViewPlaneNormal();\n    } else {\n      vtkErrorMacro('Trying to reset non-existent camera');\n      return false;\n    } // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n\n\n    model.activeCamera.setViewAngle(30.0);\n    center[0] = (boundsToUse[0] + boundsToUse[1]) / 2.0;\n    center[1] = (boundsToUse[2] + boundsToUse[3]) / 2.0;\n    center[2] = (boundsToUse[4] + boundsToUse[5]) / 2.0;\n    var w1 = boundsToUse[1] - boundsToUse[0];\n    var w2 = boundsToUse[3] - boundsToUse[2];\n    var w3 = boundsToUse[5] - boundsToUse[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    var radius = w1 + w2 + w3; // If we have just a single point, pick a radius of 1.0\n\n    radius = radius === 0 ? 1.0 : radius; // compute the radius of the enclosing sphere\n\n    radius = Math.sqrt(radius) * 0.5; // default so that the bounding sphere fits within the view fustrum\n    // compute the distance from the intersection of the view frustum with the\n    // bounding sphere. Basically in 2D draw a circle representing the bounding\n    // sphere in 2D then draw a horizontal line going out from the center of\n    // the circle. That is the camera view. Then draw a line from the camera\n    // position to the point where it intersects the circle. (it will be tangent\n    // to the circle at this point, this is important, only go to the tangent\n    // point, do not draw all the way to the view plane). Then draw the radius\n    // from the tangent point to the center of the circle. You will note that\n    // this forms a right triangle with one side being the radius, another being\n    // the target distance for the camera, then just find the target dist using\n    // a sin.\n\n    var angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n    var parallelScale = radius;\n    var distance = radius / Math.sin(angle * 0.5); // check view-up vector against view plane normal\n\n    var vup = model.activeCamera.getViewUp();\n\n    if (Math.abs(dot(vup, vn)) > 0.999) {\n      vtkWarningMacro('Resetting view-up since view plane normal is parallel');\n      model.activeCamera.setViewUp(-vup[2], vup[0], vup[1]);\n    } // update the camera\n\n\n    model.activeCamera.setFocalPoint(center[0], center[1], center[2]);\n    model.activeCamera.setPosition(center[0] + distance * vn[0], center[1] + distance * vn[1], center[2] + distance * vn[2]);\n    publicAPI.resetCameraClippingRange(boundsToUse); // setup default parallel scale\n\n    model.activeCamera.setParallelScale(parallelScale); // update reasonable world to physical values\n\n    model.activeCamera.setPhysicalScale(radius);\n    model.activeCamera.setPhysicalTranslation(-center[0], -center[1], -center[2]); // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n\n    publicAPI.invokeEvent(RESET_CAMERA_EVENT);\n    return true;\n  };\n\n  publicAPI.resetCameraClippingRange = function () {\n    var bounds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var boundsToUse = bounds || publicAPI.computeVisiblePropBounds();\n\n    if (!areBoundsInitialized(boundsToUse)) {\n      vtkDebugMacro('Cannot reset camera clipping range!');\n      return false;\n    } // Make sure we have an active camera\n\n\n    publicAPI.getActiveCameraAndResetIfCreated();\n\n    if (!model.activeCamera) {\n      vtkErrorMacro('Trying to reset clipping range of non-existent camera');\n      return false;\n    } // Get the exact range for the bounds\n\n\n    var range = model.activeCamera.computeClippingRange(boundsToUse); // do not let far - near be less than 0.1 of the window height\n    // this is for cases such as 2D images which may have zero range\n\n    var minGap = 0.0;\n\n    if (model.activeCamera.getParallelProjection()) {\n      minGap = 0.2 * model.activeCamera.getParallelScale();\n    } else {\n      var angle = radiansFromDegrees(model.activeCamera.getViewAngle());\n      minGap = 0.2 * Math.tan(angle / 2.0) * range[1];\n    }\n\n    if (range[1] - range[0] < minGap) {\n      minGap = minGap - range[1] + range[0];\n      range[1] += minGap / 2.0;\n      range[0] -= minGap / 2.0;\n    } // Do not let the range behind the camera throw off the calculation.\n\n\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    } // Give ourselves a little breathing room\n\n\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * model.clippingRangeExpansion;\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * model.clippingRangeExpansion; // Make sure near is not bigger than far\n\n    range[0] = range[0] >= range[1] ? 0.01 * range[1] : range[0]; // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer\n\n    if (!model.nearClippingPlaneTolerance) {\n      model.nearClippingPlaneTolerance = 0.01;\n    } // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used\n\n\n    if (range[0] < model.nearClippingPlaneTolerance * range[1]) {\n      range[0] = model.nearClippingPlaneTolerance * range[1];\n    }\n\n    model.activeCamera.setClippingRange(range[0], range[1]); // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n\n    publicAPI.invokeEvent(RESET_CAMERA_CLIPPING_RANGE_EVENT);\n    return false;\n  };\n\n  publicAPI.setRenderWindow = function (renderWindow) {\n    if (renderWindow !== model._renderWindow) {\n      model._vtkWindow = renderWindow;\n      model._renderWindow = renderWindow;\n    }\n  };\n\n  publicAPI.visibleActorCount = function () {\n    return model.props.filter(function (prop) {\n      return prop.getVisibility();\n    }).length;\n  };\n\n  publicAPI.visibleVolumeCount = publicAPI.visibleActorCount;\n\n  publicAPI.getMTime = function () {\n    var m1 = model.mtime;\n    var m2 = model.activeCamera ? model.activeCamera.getMTime() : 0;\n\n    if (m2 > m1) {\n      m1 = m2;\n    }\n\n    var m3 = model._createdLight ? model._createdLight.getMTime() : 0;\n\n    if (m3 > m1) {\n      m1 = m3;\n    }\n\n    return m1;\n  };\n\n  publicAPI.getTransparent = function () {\n    return !!model.preserveColorBuffer;\n  };\n\n  publicAPI.isActiveCameraCreated = function () {\n    return !!model.activeCamera;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  pickedProp: null,\n  activeCamera: null,\n  allBounds: [],\n  ambient: [1, 1, 1],\n  allocatedRenderTime: 100,\n  timeFactor: 1,\n  automaticLightCreation: true,\n  twoSidedLighting: true,\n  lastRenderTimeInSeconds: -1,\n  renderWindow: null,\n  lights: [],\n  actors: [],\n  volumes: [],\n  lightFollowCamera: true,\n  numberOfPropsRendered: 0,\n  propArray: null,\n  pathArray: null,\n  layer: 0,\n  preserveColorBuffer: false,\n  preserveDepthBuffer: false,\n  computeVisiblePropBounds: createUninitializedBounds(),\n  interactive: true,\n  nearClippingPlaneTolerance: 0,\n  clippingRangeExpansion: 0.05,\n  erase: true,\n  draw: true,\n  useShadows: false,\n  useDepthPeeling: false,\n  occlusionRatio: 0,\n  maximumNumberOfPeels: 4,\n  selector: null,\n  delegate: null,\n  texturedBackground: false,\n  backgroundTexture: null,\n  environmentTexture: null,\n  environmentTextureDiffuseStrength: 1,\n  environmentTextureSpecularStrength: 1,\n  useEnvironmentTextureAsBackground: false,\n  pass: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewport.extend(publicAPI, model, initialValues); // make sure background has 4 entries. Default to opaque black\n\n  if (!model.background) model.background = [0, 0, 0, 1];\n\n  while (model.background.length < 3) {\n    model.background.push(0);\n  }\n\n  if (model.background.length === 3) model.background.push(1); // Build VTK API\n\n  get(publicAPI, model, ['_renderWindow', 'allocatedRenderTime', 'timeFactor', 'lastRenderTimeInSeconds', 'numberOfPropsRendered', 'lastRenderingUsedDepthPeeling', 'selector']);\n  setGet(publicAPI, model, ['twoSidedLighting', 'lightFollowCamera', 'automaticLightCreation', 'erase', 'draw', 'nearClippingPlaneTolerance', 'clippingRangeExpansion', 'backingStore', 'interactive', 'layer', 'preserveColorBuffer', 'preserveDepthBuffer', 'useDepthPeeling', 'occlusionRatio', 'maximumNumberOfPeels', 'delegate', 'backgroundTexture', 'texturedBackground', 'environmentTexture', 'environmentTextureDiffuseStrength', 'environmentTextureSpecularStrength', 'useEnvironmentTextureAsBackground', 'useShadows', 'pass']);\n  getArray(publicAPI, model, ['actors', 'volumes', 'lights']);\n  setGetArray(publicAPI, model, ['background'], 4, 1.0);\n  moveToProtected(publicAPI, model, ['renderWindow']); // Object methods\n\n  vtkRenderer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkRenderer'); // ----------------------------------------------------------------------------\n\nvar vtkRenderer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderer$1 as default, extend, newInstance };\n"],
  "mappings": "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",
  "names": ["vtkDebugMacro", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "vtkDebugMacro", "vtkErrorMacro", "vtkWarningMacro", "notImplemented", "DEFAULT_VALUES", "extend", "newInstance"]
}
