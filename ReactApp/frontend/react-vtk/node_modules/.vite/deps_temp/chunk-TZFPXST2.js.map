{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Common/Core/URLExtract.js"],
  "sourcesContent": ["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\n\nfunction identity(i) {\n  return i;\n}\n\nfunction toNativeType(str) {\n  if (str === null || str === 'null') {\n    return null;\n  }\n\n  if (str === 'true') {\n    return true;\n  }\n\n  if (str === 'false') {\n    return false;\n  }\n\n  if (str === undefined || str === 'undefined') {\n    return undefined;\n  }\n\n  if (str[0] === '[' && str[str.length - 1] === ']') {\n    return str.substring(1, str.length - 1).split(',').map(function (s) {\n      return toNativeType(s.trim());\n    });\n  }\n\n  if (str === '' || Number.isNaN(Number(str))) {\n    return str;\n  }\n\n  return Number(str);\n}\n\nfunction extractURLParameters() {\n  var castToNativeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.search;\n  var summary = {};\n  var convert = castToNativeType ? toNativeType : identity;\n  var queryTokens = (query || '').replace(/#.*/, '') // remove hash query\n  .replace('?', '') // Remove ? from the head\n  .split('&'); // extract token pair\n\n  queryTokens.forEach(function (token) {\n    var _token$split$map = token.split('=').map(function (s) {\n      return decodeURIComponent(s);\n    }),\n        _token$split$map2 = _slicedToArray(_token$split$map, 2),\n        key = _token$split$map2[0],\n        value = _token$split$map2[1];\n\n    if (key) {\n      summary[key] = value ? convert(value) : true;\n    }\n  });\n  return summary;\n}\n\nvar vtkURLExtract = {\n  toNativeType: toNativeType,\n  extractURLParameters: extractURLParameters\n};\n\nexport { vtkURLExtract as default };\n"],
  "mappings": ";;;;;AAEA,SAAS,SAAS,GAAG;AACnB,SAAO;AACT;AAEA,SAAS,aAAa,KAAK;AACzB,MAAI,QAAQ,QAAQ,QAAQ,QAAQ;AAClC,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,QAAQ;AAClB,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,SAAS;AACnB,WAAO;AAAA,EACT;AAEA,MAAI,QAAQ,UAAa,QAAQ,aAAa;AAC5C,WAAO;AAAA,EACT;AAEA,MAAI,IAAI,OAAO,OAAO,IAAI,IAAI,SAAS,OAAO,KAAK;AACjD,WAAO,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,EAAE,MAAM,GAAG,EAAE,IAAI,SAAU,GAAG;AAClE,aAAO,aAAa,EAAE,KAAK,CAAC;AAAA,IAC9B,CAAC;AAAA,EACH;AAEA,MAAI,QAAQ,MAAM,OAAO,MAAM,OAAO,GAAG,CAAC,GAAG;AAC3C,WAAO;AAAA,EACT;AAEA,SAAO,OAAO,GAAG;AACnB;AAEA,SAAS,uBAAuB;AAC9B,MAAI,mBAAmB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC3F,MAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,OAAO,SAAS;AAChG,MAAI,UAAU,CAAC;AACf,MAAI,UAAU,mBAAmB,eAAe;AAChD,MAAI,eAAe,SAAS,IAAI,QAAQ,OAAO,EAAE,EAChD,QAAQ,KAAK,EAAE,EACf,MAAM,GAAG;AAEV,cAAY,QAAQ,SAAU,OAAO;AACnC,QAAI,mBAAmB,MAAM,MAAM,GAAG,EAAE,IAAI,SAAU,GAAG;AACvD,aAAO,mBAAmB,CAAC;AAAA,IAC7B,CAAC,GACG,oBAAoB,eAAe,kBAAkB,CAAC,GACtD,MAAM,kBAAkB,IACxB,QAAQ,kBAAkB;AAE9B,QAAI,KAAK;AACP,cAAQ,OAAO,QAAQ,QAAQ,KAAK,IAAI;AAAA,IAC1C;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEA,IAAI,gBAAgB;AAAA,EAClB;AAAA,EACA;AACF;",
  "names": []
}
