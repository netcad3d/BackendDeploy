{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/OpenGL/Texture/Constants.js", "../../@kitware/vtk.js/Common/Core/HalfFloat.js", "../../@kitware/vtk.js/Rendering/SceneGraph/ViewNode.js", "../../@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory.js", "../../@kitware/vtk.js/Rendering/OpenGL/ViewNodeFactory.js", "../../@kitware/vtk.js/Rendering/OpenGL/Texture.js", "../../@kitware/vtk.js/Rendering/OpenGL/Shader.js", "../../@kitware/vtk.js/Rendering/OpenGL/ShaderProgram.js", "../../@kitware/vtk.js/Rendering/OpenGL/BufferObject/Constants.js", "../../@kitware/vtk.js/Rendering/OpenGL/VertexArrayObject.js", "../../@kitware/vtk.js/Rendering/OpenGL/BufferObject.js", "../../@kitware/vtk.js/Rendering/OpenGL/CellArrayBufferObject.js", "../../@kitware/vtk.js/Rendering/OpenGL/Helper.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderModule.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js", "../../@kitware/vtk.js/Rendering/WebGPU/BindGroup.js", "../../@kitware/vtk.js/Rendering/WebGPU/Types.js", "../../@kitware/vtk.js/Rendering/WebGPU/Pipeline.js", "../../@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js", "../../@kitware/vtk.js/Rendering/WebGPU/VertexInput.js", "../../@kitware/vtk.js/Rendering/WebGPU/SimpleMapper.js", "../../@kitware/vtk.js/Rendering/WebGPU/FullScreenQuad.js", "../../@kitware/vtk.js/Rendering/WebGPU/BufferManager/Constants.js", "../../@kitware/vtk.js/Rendering/WebGPU/Buffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/IndexBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/BufferManager.js", "../../@kitware/vtk.js/Rendering/WebGPU/Sampler.js", "../../@kitware/vtk.js/Rendering/WebGPU/UniformBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/StorageBuffer.js", "../../@kitware/vtk.js/Rendering/WebGPU/ViewNodeFactory.js"],
  "sourcesContent": ["var Wrap = {\n  CLAMP_TO_EDGE: 0,\n  REPEAT: 1,\n  MIRRORED_REPEAT: 2\n};\nvar Filter = {\n  NEAREST: 0,\n  LINEAR: 1,\n  NEAREST_MIPMAP_NEAREST: 2,\n  NEAREST_MIPMAP_LINEAR: 3,\n  LINEAR_MIPMAP_NEAREST: 4,\n  LINEAR_MIPMAP_LINEAR: 5\n};\nvar Constants = {\n  Wrap: Wrap,\n  Filter: Filter\n};\n\nexport { Filter, Wrap, Constants as default };\n", "/* eslint-disable no-bitwise */\nvar floatView = new Float32Array(1);\nvar int32View = new Int32Array(floatView.buffer);\n/* eslint-disable no-bitwise */\n\n/* This method is faster than the OpenEXR implementation (very often\n * used, eg. in Ogre), with the additional benefit of rounding, inspired\n * by James Tursa?s half-precision code. */\n\nfunction toHalf(val) {\n  floatView[0] = val;\n  var x = int32View[0];\n  var bits = x >> 16 & 0x8000;\n  /* Get the sign */\n\n  var m = x >> 12 & 0x07ff;\n  /* Keep one extra bit for rounding */\n\n  var e = x >> 23 & 0xff;\n  /* Using int is faster here */\n\n  /* If zero, or denormal, or exponent underflows too much for a denormal\n   * half, return signed zero. */\n\n  if (e < 103) {\n    return bits;\n  }\n  /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\n  if (e > 142) {\n    bits |= 0x7c00;\n    /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n     * not Inf, so make sure we set one mantissa bit too. */\n\n    bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;\n    return bits;\n  }\n  /* If exponent underflows but not too much, return a denormal */\n\n\n  if (e < 113) {\n    m |= 0x0800;\n    /* Extra rounding may overflow and set mantissa to 0 and exponent\n     * to 1, which is OK. */\n\n    bits |= (m >> 114 - e) + (m >> 113 - e & 1);\n    return bits;\n  }\n\n  bits |= e - 112 << 10 | m >> 1;\n  /* Extra rounding. An overflow will set mantissa to 0 and increment\n   * the exponent, which is OK. */\n\n  bits += m & 1;\n  return bits;\n}\n\nfunction fromHalf(h) {\n  var s = (h & 0x8000) >> 15;\n  var e = (h & 0x7c00) >> 10;\n  var f = h & 0x03ff;\n\n  if (e === 0) {\n    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\n  }\n\n  if (e === 0x1f) {\n    return f ? NaN : (s ? -1 : 1) * Infinity;\n  }\n\n  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));\n}\n\nvar HalfFloat = {\n  fromHalf: fromHalf,\n  toHalf: toHalf\n};\n\nexport { HalfFloat as default };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar PASS_TYPES = ['Build', 'Render']; // ----------------------------------------------------------------------------\n// vtkViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkViewNode'); // Builds myself.\n\n  publicAPI.build = function (prepass) {}; // Renders myself\n\n\n  publicAPI.render = function (prepass) {};\n\n  publicAPI.traverse = function (renderPass) {\n    // we can choose to do special\n    // traversal here based on pass\n    var passTraversal = renderPass.getTraverseOperation();\n    var fn = publicAPI[passTraversal];\n\n    if (fn) {\n      fn(renderPass);\n      return;\n    } // default traversal\n\n\n    publicAPI.apply(renderPass, true);\n\n    for (var index = 0; index < model.children.length; index++) {\n      model.children[index].traverse(renderPass);\n    }\n\n    publicAPI.apply(renderPass, false);\n  };\n\n  publicAPI.apply = function (renderPass, prepass) {\n    var customRenderPass = publicAPI[renderPass.getOperation()];\n\n    if (customRenderPass) {\n      customRenderPass(prepass, renderPass);\n    }\n  };\n\n  publicAPI.getViewNodeFor = function (dataObject) {\n    if (model.renderable === dataObject) {\n      return publicAPI;\n    }\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var vn = child.getViewNodeFor(dataObject);\n\n      if (vn) {\n        return vn;\n      }\n    }\n\n    return undefined;\n  };\n\n  publicAPI.getFirstAncestorOfType = function (type) {\n    if (!model._parent) {\n      return null;\n    }\n\n    if (model._parent.isA(type)) {\n      return model._parent;\n    }\n\n    return model._parent.getFirstAncestorOfType(type);\n  }; // add a missing node/child for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n\n  publicAPI.addMissingNode = function (dobj) {\n    if (!dobj) {\n      return;\n    }\n\n    var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n    if (result !== undefined) {\n      result.setVisited(true);\n    } else {\n      // otherwise create a node\n      var newNode = publicAPI.createViewNode(dobj);\n\n      if (newNode) {\n        newNode.setParent(publicAPI);\n        newNode.setVisited(true);\n\n        model._renderableChildMap.set(dobj, newNode);\n\n        model.children.push(newNode);\n      }\n    }\n  }; // add missing nodes/children for the passed in renderables. This should\n  // be called only in between prepareNodes and removeUnusedNodes\n\n\n  publicAPI.addMissingNodes = function (dataObjs) {\n    if (!dataObjs || !dataObjs.length) {\n      return;\n    }\n\n    for (var index = 0; index < dataObjs.length; ++index) {\n      var dobj = dataObjs[index];\n\n      var result = model._renderableChildMap.get(dobj); // if found just mark as visited\n\n\n      if (result !== undefined) {\n        result.setVisited(true);\n      } else {\n        // otherwise create a node\n        var newNode = publicAPI.createViewNode(dobj);\n\n        if (newNode) {\n          newNode.setParent(publicAPI);\n          newNode.setVisited(true);\n\n          model._renderableChildMap.set(dobj, newNode);\n\n          model.children.push(newNode);\n        }\n      }\n    }\n  }; // ability to add children that have no renderable use in the same manner\n  // as addMissingNodes This case is when a normal viewnode wants to\n  // delegate passes to a helper or child that doeasn't map to a clear\n  // renderable or any renderable\n\n\n  publicAPI.addMissingChildren = function (children) {\n    if (!children || !children.length) {\n      return;\n    }\n\n    for (var index = 0; index < children.length; ++index) {\n      var child = children[index];\n      var cindex = model.children.indexOf(child);\n\n      if (cindex === -1) {\n        child.setParent(publicAPI);\n        model.children.push(child);\n      }\n\n      child.setVisited(true);\n    }\n  };\n\n  publicAPI.prepareNodes = function () {\n    for (var index = 0; index < model.children.length; ++index) {\n      model.children[index].setVisited(false);\n    }\n  };\n\n  publicAPI.setVisited = function (val) {\n    model.visited = val;\n  };\n\n  publicAPI.removeUnusedNodes = function () {\n    var deleted = null;\n\n    for (var index = 0; index < model.children.length; ++index) {\n      var child = model.children[index];\n      var visited = child.getVisited();\n\n      if (!visited) {\n        var renderable = child.getRenderable();\n\n        if (renderable) {\n          model._renderableChildMap.delete(renderable);\n        }\n\n        if (!deleted) {\n          deleted = [];\n        }\n\n        deleted.push(child);\n      } else {\n        child.setVisited(false);\n      }\n    }\n\n    if (deleted) {\n      // slow does alloc but not as common\n      model.children = model.children.filter(function (el) {\n        return !deleted.includes(el);\n      });\n    }\n  };\n\n  publicAPI.createViewNode = function (dataObj) {\n    if (!model.myFactory) {\n      vtkErrorMacro('Cannot create view nodes without my own factory');\n      return null;\n    }\n\n    var ret = model.myFactory.createNode(dataObj);\n\n    if (ret) {\n      ret.setRenderable(dataObj);\n    }\n\n    return ret;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  // _parent: null,\n  renderable: null,\n  myFactory: null,\n  children: [],\n  visited: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.event(publicAPI, model, 'event');\n  model._renderableChildMap = new Map();\n  macro.get(publicAPI, model, ['visited']);\n  macro.setGet(publicAPI, model, ['_parent', 'renderable', 'myFactory']);\n  macro.getArray(publicAPI, model, ['children']);\n  macro.moveToProtected(publicAPI, model, ['parent']); // Object methods\n\n  vtkViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  PASS_TYPES: PASS_TYPES\n};\n\nexport { vtkViewNode$1 as default };\n", "import macro from '../../macros.js';\n\n// vtkViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkViewNodeFactory(publicAPI, model) {\n  // Make sure our overrides is just for our instance not shared with everyone...\n  if (!model.overrides) {\n    model.overrides = {};\n  } // Set our className\n\n\n  model.classHierarchy.push('vtkViewNodeFactory');\n\n  publicAPI.createNode = function (dataObject) {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    var cpt = 0;\n    var className = dataObject.getClassName(cpt++);\n    var isObject = false;\n    var keys = Object.keys(model.overrides);\n\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n\n    var vn = model.overrides[className]();\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  publicAPI.registerOverride = function (className, func) {\n    model.overrides[className] = func;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {// overrides: {},\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Object methods\n\n  vtkViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewNodeFactory$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNodeFactory$1 from '../SceneGraph/ViewNodeFactory.js';\n\nvar CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n} // ----------------------------------------------------------------------------\n// vtkOpenGLViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLViewNodeFactory');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Static class mapping shared across instances\n\n  model.overrides = CLASS_MAPPING; // Inheritance\n\n  vtkViewNodeFactory$1.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkOpenGLViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkViewNodeFactory = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkViewNodeFactory as default, extend, newInstance, registerOverride };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Constants from './Texture/Constants.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\nimport { newInstance as newInstance$1, obj, set, setGet, get, newTypedArray, vtkDebugMacro as vtkDebugMacro$1, vtkErrorMacro as vtkErrorMacro$1, vtkWarningMacro as vtkWarningMacro$1 } from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport { R as isPowerOfTwo, N as nearestPowerOfTwo } from '../../Common/Core/Math/index.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Wrap = Constants.Wrap,\n    Filter = Constants.Filter;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes;\nvar vtkDebugMacro = vtkDebugMacro$1,\n    vtkErrorMacro = vtkErrorMacro$1,\n    vtkWarningMacro = vtkWarningMacro$1; // ----------------------------------------------------------------------------\n// vtkOpenGLTexture methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTexture(publicAPI, model) {\n  var _this = this;\n\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTexture'); // Renders myself\n\n  publicAPI.render = function () {\n    var renWin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (renWin) {\n      model._openGLRenderWindow = renWin;\n    } else {\n      model.openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer'); // sync renderable properties\n\n      model._openGLRenderWindow = model.openGLRenderer.getParent();\n    }\n\n    model.context = model._openGLRenderWindow.getContext();\n\n    if (model.renderable.getInterpolate()) {\n      if (model.generateMipmap) {\n        publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n      } else {\n        publicAPI.setMinificationFilter(Filter.LINEAR);\n      }\n\n      publicAPI.setMagnificationFilter(Filter.LINEAR);\n    } else {\n      publicAPI.setMinificationFilter(Filter.NEAREST);\n      publicAPI.setMagnificationFilter(Filter.NEAREST);\n    }\n\n    if (model.renderable.getRepeat()) {\n      publicAPI.setWrapR(Wrap.REPEAT);\n      publicAPI.setWrapS(Wrap.REPEAT);\n      publicAPI.setWrapT(Wrap.REPEAT);\n    } // clear image if input data is set\n\n\n    if (model.renderable.getInputData()) {\n      model.renderable.setImage(null);\n    } // create the texture if it is not done already\n\n\n    if (!model.handle || model.renderable.getMTime() > model.textureBuildTime.getMTime()) {\n      // if we have an Image\n      if (model.renderable.getImage() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        } // Have an Image which may not be complete\n\n\n        if (model.renderable.getImage() && model.renderable.getImageLoaded()) {\n          publicAPI.create2DFromImage(model.renderable.getImage());\n          publicAPI.activate();\n          publicAPI.sendParameters();\n          model.textureBuildTime.modified();\n        }\n      } // if we have a canvas\n\n\n      if (model.renderable.getCanvas() !== null) {\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        var canvas = model.renderable.getCanvas();\n        publicAPI.create2DFromRaw(canvas.width, canvas.height, 4, VtkDataTypes.UNSIGNED_CHAR, canvas, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      } // if we have jsImageData\n\n\n      if (model.renderable.getJsImageData() !== null) {\n        var jsid = model.renderable.getJsImageData();\n\n        if (model.renderable.getInterpolate()) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        publicAPI.create2DFromRaw(jsid.width, jsid.height, 4, VtkDataTypes.UNSIGNED_CHAR, jsid.data, true);\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      } // if we have InputData\n\n\n      var input = model.renderable.getInputData(0);\n\n      if (input && input.getPointData().getScalars()) {\n        var ext = input.getExtent();\n        var inScalars = input.getPointData().getScalars(); // do we have a cube map? Six inputs\n\n        var data = [];\n\n        for (var i = 0; i < model.renderable.getNumberOfInputPorts(); ++i) {\n          var indata = model.renderable.getInputData(i);\n          var scalars = indata ? indata.getPointData().getScalars().getData() : null;\n\n          if (scalars) {\n            data.push(scalars);\n          }\n        }\n\n        if (model.renderable.getInterpolate() && inScalars.getNumberOfComponents() === 4) {\n          model.generateMipmap = true;\n          publicAPI.setMinificationFilter(Filter.LINEAR_MIPMAP_LINEAR);\n        }\n\n        if (data.length % 6 === 0) {\n          publicAPI.createCubeFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), data);\n        } else {\n          publicAPI.create2DFromRaw(ext[1] - ext[0] + 1, ext[3] - ext[2] + 1, inScalars.getNumberOfComponents(), inScalars.getDataType(), inScalars.getData());\n        }\n\n        publicAPI.activate();\n        publicAPI.sendParameters();\n        model.textureBuildTime.modified();\n      }\n    }\n\n    if (model.handle) {\n      publicAPI.activate();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.destroyTexture = function () {\n    // deactivate it first\n    publicAPI.deactivate();\n\n    if (model.context && model.handle) {\n      model.context.deleteTexture(model.handle);\n    }\n\n    model.handle = 0;\n    model.numberOfDimensions = 0;\n    model.target = 0;\n    model.components = 0;\n    model.width = 0;\n    model.height = 0;\n    model.depth = 0;\n    publicAPI.resetFormatAndType();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createTexture = function () {\n    // reuse the existing handle if we have one\n    if (!model.handle) {\n      model.handle = model.context.createTexture();\n\n      if (model.target) {\n        model.context.bindTexture(model.target, model.handle); // See: http://www.openmodel.context..org/wiki/Common_Mistakes#Creating_a_complete_texture\n        // turn off mip map filter or set the base and max level correctly. here\n        // both are done.\n\n        model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n        model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n\n        if (model._openGLRenderWindow.getWebgl2()) {\n          model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n        }\n\n        model.context.bindTexture(model.target, null);\n      }\n    }\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.getTextureUnit = function () {\n    if (model._openGLRenderWindow) {\n      return model._openGLRenderWindow.getTextureUnitForTexture(publicAPI);\n    }\n\n    return -1;\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.activate = function () {\n    // activate a free texture unit for this texture\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.bind();\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.deactivate = function () {\n    if (model._openGLRenderWindow) {\n      model._openGLRenderWindow.deactivateTexture(publicAPI);\n    }\n  }; //---------------------------------------------------------------------------\n\n\n  publicAPI.releaseGraphicsResources = function (rwin) {\n    if (rwin && model.handle) {\n      rwin.activateTexture(publicAPI);\n      rwin.deactivateTexture(publicAPI);\n      model.context.deleteTexture(model.handle);\n      model.handle = 0;\n      model.numberOfDimensions = 0;\n      model.target = 0;\n      model.internalFormat = 0;\n      model.format = 0;\n      model.openGLDataType = 0;\n      model.components = 0;\n      model.width = 0;\n      model.height = 0;\n      model.depth = 0;\n    }\n\n    if (model.shaderProgram) {\n      model.shaderProgram.releaseGraphicsResources(rwin);\n      model.shaderProgram = null;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.bind = function () {\n    model.context.bindTexture(model.target, model.handle);\n\n    if (model.autoParameters && publicAPI.getMTime() > model.sendParametersTime.getMTime()) {\n      publicAPI.sendParameters();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.isBound = function () {\n    var result = false;\n\n    if (model.context && model.handle) {\n      var target = 0;\n\n      switch (model.target) {\n        case model.context.TEXTURE_2D:\n          target = model.context.TEXTURE_BINDING_2D;\n          break;\n\n        default:\n          vtkWarningMacro('impossible case');\n          break;\n      }\n\n      var oid = model.context.getIntegerv(target);\n      result = oid === model.handle;\n    }\n\n    return result;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.sendParameters = function () {\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_S, publicAPI.getOpenGLWrapMode(model.wrapS));\n    model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_T, publicAPI.getOpenGLWrapMode(model.wrapT));\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_WRAP_R, publicAPI.getOpenGLWrapMode(model.wrapR));\n    }\n\n    model.context.texParameteri(model.target, model.context.TEXTURE_MIN_FILTER, publicAPI.getOpenGLFilterMode(model.minificationFilter));\n    model.context.texParameteri(model.target, model.context.TEXTURE_MAG_FILTER, publicAPI.getOpenGLFilterMode(model.magnificationFilter));\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      model.context.texParameteri(model.target, model.context.TEXTURE_BASE_LEVEL, model.baseLevel);\n      model.context.texParameteri(model.target, model.context.TEXTURE_MAX_LEVEL, model.maxLevel);\n    } // model.context.texParameterf(model.target, model.context.TEXTURE_MIN_LOD, model.minLOD);\n    // model.context.texParameterf(model.target, model.context.TEXTURE_MAX_LOD, model.maxLOD);\n\n\n    model.sendParametersTime.modified();\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getInternalFormat = function (vtktype, numComps) {\n    if (!model.internalFormat) {\n      model.internalFormat = publicAPI.getDefaultInternalFormat(vtktype, numComps);\n    }\n\n    if (!model.internalFormat) {\n      vtkDebugMacro(\"Unable to find suitable internal format for T=\".concat(vtktype, \" NC= \").concat(numComps));\n    }\n\n    return model.internalFormat;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultInternalFormat = function (vtktype, numComps) {\n    var result = 0; // try default next\n\n    result = model._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, false);\n\n    if (result) {\n      return result;\n    } // try floating point\n\n\n    result = _this._openGLRenderWindow.getDefaultTextureInternalFormat(vtktype, numComps, true);\n\n    if (!result) {\n      vtkDebugMacro('Unsupported internal texture type!');\n      vtkDebugMacro(\"Unable to find suitable internal format for T=\".concat(vtktype, \" NC= \").concat(numComps));\n    }\n\n    return result;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.setInternalFormat = function (iFormat) {\n    if (iFormat !== model.internalFormat) {\n      model.internalFormat = iFormat;\n      publicAPI.modified();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getFormat = function (vtktype, numComps) {\n    model.format = publicAPI.getDefaultFormat(vtktype, numComps);\n    return model.format;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultFormat = function (vtktype, numComps) {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (numComps) {\n        case 1:\n          return model.context.RED;\n\n        case 2:\n          return model.context.RG;\n\n        case 3:\n          return model.context.RGB;\n\n        case 4:\n          return model.context.RGBA;\n\n        default:\n          return model.context.RGB;\n      }\n    } else {\n      // webgl1\n      switch (numComps) {\n        case 1:\n          return model.context.LUMINANCE;\n\n        case 2:\n          return model.context.LUMINANCE_ALPHA;\n\n        case 3:\n          return model.context.RGB;\n\n        case 4:\n          return model.context.RGBA;\n\n        default:\n          return model.context.RGB;\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.resetFormatAndType = function () {\n    model.format = 0;\n    model.internalFormat = 0;\n    model.openGLDataType = 0;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getDefaultDataType = function (vtkScalarType) {\n    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    // DON'T DEAL with VTK_CHAR as this is platform dependent.\n    if (model._openGLRenderWindow.getWebgl2()) {\n      switch (vtkScalarType) {\n        // case VtkDataTypes.SIGNED_CHAR:\n        //   return model.context.BYTE;\n        case VtkDataTypes.UNSIGNED_CHAR:\n          return model.context.UNSIGNED_BYTE;\n\n        case useHalfFloatType && VtkDataTypes.SHORT:\n          return model.context.HALF_FLOAT;\n\n        case useHalfFloatType && VtkDataTypes.UNSIGNED_SHORT:\n          return model.context.HALF_FLOAT;\n        // case VtkDataTypes.INT:\n        //   return model.context.INT;\n        // case VtkDataTypes.UNSIGNED_INT:\n        //   return model.context.UNSIGNED_INT;\n\n        case VtkDataTypes.FLOAT:\n        case VtkDataTypes.VOID: // used for depth component textures.\n\n        default:\n          return model.context.FLOAT;\n      }\n    }\n\n    switch (vtkScalarType) {\n      // case VtkDataTypes.SIGNED_CHAR:\n      //   return model.context.BYTE;\n      case VtkDataTypes.UNSIGNED_CHAR:\n        return model.context.UNSIGNED_BYTE;\n      // case VtkDataTypes.SHORT:\n      //   return model.context.SHORT;\n      // case VtkDataTypes.UNSIGNED_SHORT:\n      //   return model.context.UNSIGNED_SHORT;\n      // case VtkDataTypes.INT:\n      //   return model.context.INT;\n      // case VtkDataTypes.UNSIGNED_INT:\n      //   return model.context.UNSIGNED_INT;\n\n      case VtkDataTypes.FLOAT:\n      case VtkDataTypes.VOID: // used for depth component textures.\n\n      default:\n        if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n          return model.context.FLOAT;\n        }\n\n        {\n          var halfFloat = model.context.getExtension('OES_texture_half_float');\n\n          if (halfFloat && model.context.getExtension('OES_texture_half_float_linear')) {\n            return halfFloat.HALF_FLOAT_OES;\n          }\n        }\n        return model.context.UNSIGNED_BYTE;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLDataType = function (vtkScalarType) {\n    var useHalfFloatType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!model.openGLDataType) {\n      model.openGLDataType = publicAPI.getDefaultDataType(vtkScalarType, useHalfFloatType);\n    }\n\n    return model.openGLDataType;\n  };\n\n  publicAPI.getShiftAndScale = function () {\n    var shift = 0.0;\n    var scale = 1.0; // for all float type internal formats\n\n    switch (model.openGLDataType) {\n      case model.context.BYTE:\n        scale = 127.5;\n        shift = scale - 128.0;\n        break;\n\n      case model.context.UNSIGNED_BYTE:\n        scale = 255.0;\n        shift = 0.0;\n        break;\n\n      case model.context.SHORT:\n        scale = 32767.5;\n        shift = scale - 32768.0;\n        break;\n\n      case model.context.UNSIGNED_SHORT:\n        scale = 65536.0;\n        shift = 0.0;\n        break;\n\n      case model.context.INT:\n        scale = 2147483647.5;\n        shift = scale - 2147483648.0;\n        break;\n\n      case model.context.UNSIGNED_INT:\n        scale = 4294967295.0;\n        shift = 0.0;\n        break;\n\n      case model.context.FLOAT:\n    }\n\n    return {\n      shift: shift,\n      scale: scale\n    };\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLFilterMode = function (emode) {\n    switch (emode) {\n      case Filter.NEAREST:\n        return model.context.NEAREST;\n\n      case Filter.LINEAR:\n        return model.context.LINEAR;\n\n      case Filter.NEAREST_MIPMAP_NEAREST:\n        return model.context.NEAREST_MIPMAP_NEAREST;\n\n      case Filter.NEAREST_MIPMAP_LINEAR:\n        return model.context.NEAREST_MIPMAP_LINEAR;\n\n      case Filter.LINEAR_MIPMAP_NEAREST:\n        return model.context.LINEAR_MIPMAP_NEAREST;\n\n      case Filter.LINEAR_MIPMAP_LINEAR:\n        return model.context.LINEAR_MIPMAP_LINEAR;\n\n      default:\n        return model.context.NEAREST;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getOpenGLWrapMode = function (vtktype) {\n    switch (vtktype) {\n      case Wrap.CLAMP_TO_EDGE:\n        return model.context.CLAMP_TO_EDGE;\n\n      case Wrap.REPEAT:\n        return model.context.REPEAT;\n\n      case Wrap.MIRRORED_REPEAT:\n        return model.context.MIRRORED_REPEAT;\n\n      default:\n        return model.context.CLAMP_TO_EDGE;\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  function updateArrayDataType(dataType, data) {\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var pixData = [];\n    var pixCount = model.width * model.height * model.components;\n\n    if (depth) {\n      pixCount *= model.depth;\n    } // if the opengl data type is float\n    // then the data array must be float\n\n\n    if (dataType !== VtkDataTypes.FLOAT && model.openGLDataType === model.context.FLOAT) {\n      for (var idx = 0; idx < data.length; idx++) {\n        if (data[idx]) {\n          var dataArrayToCopy = data[idx].length > pixCount ? data[idx].subarray(0, pixCount) : data[idx];\n          pixData.push(new Float32Array(dataArrayToCopy));\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // if the opengl data type is ubyte\n    // then the data array must be u8, we currently simply truncate the data\n\n\n    if (dataType !== VtkDataTypes.UNSIGNED_CHAR && model.openGLDataType === model.context.UNSIGNED_BYTE) {\n      for (var _idx = 0; _idx < data.length; _idx++) {\n        if (data[_idx]) {\n          var _dataArrayToCopy = data[_idx].length > pixCount ? data[_idx].subarray(0, pixCount) : data[_idx];\n\n          pixData.push(new Uint8Array(_dataArrayToCopy));\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // if the opengl data type is half float\n    // then the data array must be u16\n\n\n    var halfFloatExt = model.context.getExtension('OES_texture_half_float');\n    var halfFloat = model._openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n\n    if (halfFloat) {\n      for (var _idx2 = 0; _idx2 < data.length; _idx2++) {\n        if (data[_idx2]) {\n          var newArray = new Uint16Array(pixCount);\n\n          for (var i = 0; i < pixCount; i++) {\n            newArray[i] = HalfFloat.toHalf(data[_idx2][i]);\n          }\n\n          pixData.push(newArray);\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // The output has to be filled\n\n\n    if (pixData.length === 0) {\n      for (var _i = 0; _i < data.length; _i++) {\n        pixData.push(data[_i]);\n      }\n    }\n\n    return pixData;\n  } //----------------------------------------------------------------------------\n\n\n  function scaleTextureToHighestPowerOfTwo(data) {\n    if (model._openGLRenderWindow.getWebgl2()) {\n      // No need if webGL2\n      return data;\n    }\n\n    var pixData = [];\n    var width = model.width;\n    var height = model.height;\n    var numComps = model.components;\n\n    if (data && (!isPowerOfTwo(width) || !isPowerOfTwo(height))) {\n      // Scale up the texture to the next highest power of two dimensions.\n      var halfFloat = model.context.getExtension('OES_texture_half_float');\n      var newWidth = nearestPowerOfTwo(width);\n      var newHeight = nearestPowerOfTwo(height);\n      var pixCount = newWidth * newHeight * model.components;\n\n      for (var idx = 0; idx < data.length; idx++) {\n        if (data[idx] !== null) {\n          var newArray = null;\n          var jFactor = height / newHeight;\n          var iFactor = width / newWidth;\n          var usingHalf = false;\n\n          if (model.openGLDataType === model.context.FLOAT) {\n            newArray = new Float32Array(pixCount);\n          } else if (halfFloat && model.openGLDataType === halfFloat.HALF_FLOAT_OES) {\n            newArray = new Uint16Array(pixCount);\n            usingHalf = true;\n          } else {\n            newArray = new Uint8Array(pixCount);\n          }\n\n          for (var j = 0; j < newHeight; j++) {\n            var joff = j * newWidth * numComps;\n            var jidx = j * jFactor;\n            var jlow = Math.floor(jidx);\n            var jhi = Math.ceil(jidx);\n\n            if (jhi >= height) {\n              jhi = height - 1;\n            }\n\n            var jmix = jidx - jlow;\n            var jmix1 = 1.0 - jmix;\n            jlow = jlow * width * numComps;\n            jhi = jhi * width * numComps;\n\n            for (var i = 0; i < newWidth; i++) {\n              var ioff = i * numComps;\n              var iidx = i * iFactor;\n              var ilow = Math.floor(iidx);\n              var ihi = Math.ceil(iidx);\n\n              if (ihi >= width) {\n                ihi = width - 1;\n              }\n\n              var imix = iidx - ilow;\n              ilow *= numComps;\n              ihi *= numComps;\n\n              for (var c = 0; c < numComps; c++) {\n                if (usingHalf) {\n                  newArray[joff + ioff + c] = HalfFloat.toHalf(HalfFloat.fromHalf(data[idx][jlow + ilow + c]) * jmix1 * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jlow + ihi + c]) * jmix1 * imix + HalfFloat.fromHalf(data[idx][jhi + ilow + c]) * jmix * (1.0 - imix) + HalfFloat.fromHalf(data[idx][jhi + ihi + c]) * jmix * imix);\n                } else {\n                  newArray[joff + ioff + c] = data[idx][jlow + ilow + c] * jmix1 * (1.0 - imix) + data[idx][jlow + ihi + c] * jmix1 * imix + data[idx][jhi + ilow + c] * jmix * (1.0 - imix) + data[idx][jhi + ihi + c] * jmix * imix;\n                }\n              }\n            }\n          }\n\n          pixData.push(newArray);\n          model.width = newWidth;\n          model.height = newHeight;\n        } else {\n          pixData.push(null);\n        }\n      }\n    } // The output has to be filled\n\n\n    if (pixData.length === 0) {\n      for (var _i2 = 0; _i2 < data.length; _i2++) {\n        pixData.push(data[_i2]);\n      }\n    }\n\n    return pixData;\n  } //----------------------------------------------------------------------------\n\n\n  publicAPI.create2DFromRaw = function (width, height, numComps, dataType, data) {\n    var flip = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Create an array of texture with one texture\n\n    var dataArray = [data];\n    var pixData = updateArrayDataType(dataType, dataArray);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.\n\n    model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, flip);\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, scaledData[0]);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    } // always reset the flip\n\n\n    if (flip) {\n      model.context.pixelStorei(model.context.UNPACK_FLIP_Y_WEBGL, false);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createCubeFromRaw = function (width, height, numComps, dataType, data) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_CUBE_MAP;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    model.maxLevel = data.length / 6 - 1;\n    publicAPI.createTexture();\n    publicAPI.bind();\n    var pixData = updateArrayDataType(dataType, data);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // invert the data because opengl is messed up with cube maps\n    // and uses the old renderman standard with Y going down\n    // even though it is completely at odds with OpenGL standards\n\n    var invertedData = [];\n    var widthLevel = model.width;\n    var heightLevel = model.height;\n\n    for (var i = 0; i < scaledData.length; i++) {\n      if (i % 6 === 0 && i !== 0) {\n        widthLevel /= 2;\n        heightLevel /= 2;\n      }\n\n      invertedData[i] = newTypedArray(dataType, heightLevel * widthLevel * model.components);\n\n      for (var y = 0; y < heightLevel; ++y) {\n        var row1 = y * widthLevel * model.components;\n        var row2 = (heightLevel - y - 1) * widthLevel * model.components;\n        invertedData[i].set(scaledData[i].slice(row2, row2 + widthLevel * model.components), row1);\n      }\n    } // Source texture data from the PBO.\n\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // We get the 6 images\n\n    for (var _i3 = 0; _i3 < 6; _i3++) {\n      // For each mipmap level\n      var j = 0;\n      var w = model.width;\n      var h = model.height;\n\n      while (w >= 1 && h >= 1) {\n        // In webgl 1, all levels need to be defined. So if the latest level size is\n        // 8x8, we have to add 3 more null textures (4x4, 2x2, 1x1)\n        // In webgl 2, the attribute maxLevel will be use.\n        var tempData = null;\n\n        if (j <= model.maxLevel) {\n          tempData = invertedData[6 * j + _i3];\n        }\n\n        model.context.texImage2D(model.context.TEXTURE_CUBE_MAP_POSITIVE_X + _i3, j, model.internalFormat, w, h, 0, model.format, model.openGLDataType, tempData);\n        j++;\n        w /= 2;\n        h /= 2;\n      }\n    } // generateMipmap must not be called here because we manually upload all levels\n    // if it is called, all levels will be overwritten\n\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.createDepthFromRaw = function (width, height, dataType, data) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(dataType);\n    model.format = model.context.DEPTH_COMPONENT;\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT) {\n        model.internalFormat = model.context.DEPTH_COMPONENT32F;\n      } else {\n        model.internalFormat = model.context.DEPTH_COMPONENT16;\n      }\n    } else {\n      model.internalFormat = model.context.DEPTH_COMPONENT;\n    }\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 1;\n    model.width = width;\n    model.height = height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, data);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.create2DFromImage = function (image) {\n    // Now determine the texture parameters using the arguments.\n    publicAPI.getOpenGLDataType(VtkDataTypes.UNSIGNED_CHAR);\n    publicAPI.getInternalFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n    publicAPI.getFormat(VtkDataTypes.UNSIGNED_CHAR, 4);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = 4;\n    model.width = image.width;\n    model.height = image.height;\n    model.depth = 1;\n    model.numberOfDimensions = 2;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1); // Scale up the texture to the next highest power of two dimensions (if needed) and flip y.\n\n    var needNearestPowerOfTwo = !isPowerOfTwo(image.width) || !isPowerOfTwo(image.height);\n    var canvas = document.createElement('canvas');\n    canvas.width = needNearestPowerOfTwo ? nearestPowerOfTwo(image.width) : image.width;\n    canvas.height = needNearestPowerOfTwo ? nearestPowerOfTwo(image.height) : image.height;\n    var ctx = canvas.getContext('2d');\n    ctx.translate(0, canvas.height);\n    ctx.scale(1, -1);\n    ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n    var safeImage = canvas;\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.format, model.openGLDataType, safeImage);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  function computeScaleOffsets(numComps, numPixelsIn, data) {\n    // compute min and max values per component\n    var min = [];\n    var max = [];\n\n    for (var c = 0; c < numComps; ++c) {\n      min[c] = data[c];\n      max[c] = data[c];\n    }\n\n    var count = 0;\n\n    for (var i = 0; i < numPixelsIn; ++i) {\n      for (var _c = 0; _c < numComps; ++_c) {\n        if (data[count] < min[_c]) {\n          min[_c] = data[count];\n        }\n\n        if (data[count] > max[_c]) {\n          max[_c] = data[count];\n        }\n\n        count++;\n      }\n    }\n\n    var offset = [];\n    var scale = [];\n\n    for (var _c2 = 0; _c2 < numComps; ++_c2) {\n      if (min[_c2] === max[_c2]) {\n        max[_c2] = min[_c2] + 1.0;\n      }\n\n      offset[_c2] = min[_c2];\n      scale[_c2] = max[_c2] - min[_c2];\n    }\n\n    return {\n      scale: scale,\n      offset: offset\n    };\n  } // HalfFloat only represents numbers between [-2048, 2048] exactly accurate,\n  // for numbers outside of this range there is a precision limitation\n\n\n  function hasExactHalfFloat(offset, scale) {\n    // Per Component\n    for (var c = 0; c < offset.length; c++) {\n      var min = offset[c];\n      var max = scale[c] + min;\n\n      if (min < -2048 || min > 2048 || max < -2048 || max > 2048) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function checkUseHalfFloat(dataType, offset, scale, preferSizeOverAccuracy) {\n    var useHalfFloatType = true;\n    publicAPI.getOpenGLDataType(dataType, useHalfFloatType);\n    var halfFloatExt = model.context.getExtension('OES_texture_half_float');\n    var useHalfFloat = model._openGLRenderWindow.getWebgl2() ? model.openGLDataType === model.context.HALF_FLOAT : halfFloatExt && model.openGLDataType === halfFloatExt.HALF_FLOAT_OES;\n\n    if (!useHalfFloat) {\n      return false;\n    } // Don't consider halfFloat and convert back to Float when the range of data does not generate an accurate halfFloat\n    // AND it is not preferable to have a smaller texture than an exact texture.\n\n\n    if (!hasExactHalfFloat(offset, scale) && !preferSizeOverAccuracy) {\n      return false;\n    }\n\n    return true;\n  } //----------------------------------------------------------------------------\n\n\n  publicAPI.create3DFromRaw = function (width, height, depth, numComps, dataType, data) {\n    // Permit OpenGLDataType to be half float, if applicable, for 3D\n    var useHalfFloatType = true;\n    publicAPI.getOpenGLDataType(dataType, useHalfFloatType); // Now determine the texture parameters using the arguments.\n\n    publicAPI.getInternalFormat(dataType, numComps);\n    publicAPI.getFormat(dataType, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    }\n\n    model.target = model.context.TEXTURE_3D;\n    model.components = numComps;\n    model.width = width;\n    model.height = height;\n    model.depth = depth;\n    model.numberOfDimensions = 3;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // Create an array of texture with one texture\n\n    var dataArray = [data];\n    var is3DArray = true;\n    var pixData = updateArrayDataType(dataType, dataArray, is3DArray);\n    var scaledData = scaleTextureToHighestPowerOfTwo(pixData); // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n\n    model.context.texImage3D(model.target, 0, model.internalFormat, model.width, model.height, model.depth, 0, model.format, model.openGLDataType, scaledData[0]);\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  }; //----------------------------------------------------------------------------\n  // This method simulates a 3D texture using 2D\n\n\n  publicAPI.create3DFilterableFromRaw = function (width, height, depth, numComps, dataType, data) {\n    var preferSizeOverAccuracy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var numPixelsIn = width * height * depth; // initialize offset/scale\n\n    var offset = [];\n    var scale = [];\n\n    for (var c = 0; c < numComps; ++c) {\n      offset[c] = 0.0;\n      scale[c] = 1.0;\n    } // store the information, we will need it later\n    // offset and scale are the offset and scale required to get\n    // the texture value back to data values ala\n    // data = texture * scale + offset\n    // and texture = (data - offset)/scale\n\n\n    model.volumeInfo = {\n      scale: scale,\n      offset: offset,\n      width: width,\n      height: height,\n      depth: depth\n    }; // Check if we can accurately use halfFloat or whether it is preferred to have a smaller size texture\n    // compute min and max values\n\n    var _computeScaleOffsets = computeScaleOffsets(numComps, numPixelsIn, data),\n        computedOffset = _computeScaleOffsets.offset,\n        computedScale = _computeScaleOffsets.scale;\n\n    model.volumeInfo.dataComputedScale = computedScale;\n    model.volumeInfo.dataComputedOffset = computedOffset;\n    var useHalfFloat = checkUseHalfFloat(dataType, computedOffset, computedScale, preferSizeOverAccuracy); // WebGL2 path, we have 3d textures etc\n\n    if (model._openGLRenderWindow.getWebgl2()) {\n      if (dataType === VtkDataTypes.FLOAT || useHalfFloat && (dataType === VtkDataTypes.SHORT || dataType === VtkDataTypes.UNSIGNED_SHORT)) {\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\n      }\n\n      if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n        for (var _c3 = 0; _c3 < numComps; ++_c3) {\n          model.volumeInfo.scale[_c3] = 255.0;\n        }\n\n        return publicAPI.create3DFromRaw(width, height, depth, numComps, dataType, data);\n      } // otherwise convert to float\n\n\n      var _newArray = new Float32Array(numPixelsIn * numComps); // compute min and max values\n\n\n      model.volumeInfo.offset = computedOffset;\n      model.volumeInfo.scale = computedScale;\n      var count = 0;\n      var scaleInverse = computedScale.map(function (s) {\n        return 1 / s;\n      });\n\n      for (var i = 0; i < numPixelsIn; i++) {\n        for (var nc = 0; nc < numComps; nc++) {\n          _newArray[count] = (data[count] - computedOffset[nc]) * scaleInverse[nc];\n          count++;\n        }\n      }\n\n      return publicAPI.create3DFromRaw(width, height, depth, numComps, VtkDataTypes.FLOAT, _newArray);\n    } // not webgl2, deal with webgl1, no 3d textures\n    // and maybe no float textures\n    // compute min and max values\n\n\n    var res = computeScaleOffsets(numComps, numPixelsIn, data);\n\n    var volCopyData = function volCopyData(outArray, outIdx, inValue, smin, smax) {\n      outArray[outIdx] = inValue;\n    };\n\n    var dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR; // unsigned char gets used as is\n\n    if (dataType === VtkDataTypes.UNSIGNED_CHAR) {\n      for (var _c4 = 0; _c4 < numComps; ++_c4) {\n        res.offset[_c4] = 0.0;\n        res.scale[_c4] = 255.0;\n      }\n    } else if (model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n      // use float textures scaled to 0.0 to 1.0\n      dataTypeToUse = VtkDataTypes.FLOAT;\n\n      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {\n        outArray[outIdx] = (inValue - soffset) / sscale;\n      };\n    } else {\n      // worst case, scale data to uchar\n      dataTypeToUse = VtkDataTypes.UNSIGNED_CHAR;\n\n      volCopyData = function volCopyData(outArray, outIdx, inValue, soffset, sscale) {\n        outArray[outIdx] = 255.0 * (inValue - soffset) / sscale;\n      };\n    } // Now determine the texture parameters using the arguments.\n\n\n    publicAPI.getOpenGLDataType(dataTypeToUse);\n    publicAPI.getInternalFormat(dataTypeToUse, numComps);\n    publicAPI.getFormat(dataTypeToUse, numComps);\n\n    if (!model.internalFormat || !model.format || !model.openGLDataType) {\n      vtkErrorMacro('Failed to determine texture parameters.');\n      return false;\n    } // have to pack this 3D texture into pot 2D texture\n\n\n    model.target = model.context.TEXTURE_2D;\n    model.components = numComps;\n    model.depth = 1;\n    model.numberOfDimensions = 2; // MAX_TEXTURE_SIZE gives the max dimensions that can be supported by the GPU,\n    // but it doesn't mean it will fit in memory. If we have to use a float data type\n    // or 4 components, there are good chances that the texture size will blow up\n    // and could not fit in the GPU memory. Use a smaller texture size in that case,\n    // which will force a downsampling of the dataset.\n    // That problem does not occur when using webGL2 since we can pack the data in\n    // denser textures based on our data type.\n    // TODO: try to fit in the biggest supported texture, catch the gl error if it\n    // does not fix (OUT_OF_MEMORY), then attempt with smaller texture\n\n    var maxTexDim = model.context.getParameter(model.context.MAX_TEXTURE_SIZE);\n\n    if (maxTexDim > 4096 && (dataTypeToUse === VtkDataTypes.FLOAT || numComps >= 3)) {\n      maxTexDim = 4096;\n    } // compute estimate for XY subsample\n\n\n    var xstride = 1;\n    var ystride = 1;\n\n    if (numPixelsIn > maxTexDim * maxTexDim) {\n      xstride = Math.ceil(Math.sqrt(numPixelsIn / (maxTexDim * maxTexDim)));\n      ystride = xstride;\n    }\n\n    var targetWidth = Math.sqrt(numPixelsIn) / xstride;\n    targetWidth = nearestPowerOfTwo(targetWidth); // determine X reps\n\n    var xreps = Math.floor(targetWidth * xstride / width);\n    var yreps = Math.ceil(depth / xreps);\n    var targetHeight = nearestPowerOfTwo(height * yreps / ystride);\n    model.width = targetWidth;\n    model.height = targetHeight;\n\n    model._openGLRenderWindow.activateTexture(publicAPI);\n\n    publicAPI.createTexture();\n    publicAPI.bind(); // store the information, we will need it later\n\n    model.volumeInfo.xreps = xreps;\n    model.volumeInfo.yreps = yreps;\n    model.volumeInfo.xstride = xstride;\n    model.volumeInfo.ystride = ystride;\n    model.volumeInfo.offset = res.offset;\n    model.volumeInfo.scale = res.scale; // OK stuff the data into the 2d TEXTURE\n    // first allocate the new texture\n\n    var newArray;\n    var pixCount = targetWidth * targetHeight * numComps;\n\n    if (dataTypeToUse === VtkDataTypes.FLOAT) {\n      newArray = new Float32Array(pixCount);\n    } else {\n      newArray = new Uint8Array(pixCount);\n    } // then stuff the data into it, nothing fancy right now\n    // for stride\n\n\n    var outIdx = 0;\n    var tileWidth = Math.floor(width / xstride);\n    var tileHeight = Math.floor(height / ystride);\n\n    for (var yRep = 0; yRep < yreps; yRep++) {\n      var xrepsThisRow = Math.min(xreps, depth - yRep * xreps);\n      var outXContIncr = numComps * (model.width - xrepsThisRow * Math.floor(width / xstride));\n\n      for (var tileY = 0; tileY < tileHeight; tileY++) {\n        for (var xRep = 0; xRep < xrepsThisRow; xRep++) {\n          var inOffset = numComps * ((yRep * xreps + xRep) * width * height + ystride * tileY * width);\n\n          for (var tileX = 0; tileX < tileWidth; tileX++) {\n            // copy value\n            for (var _nc = 0; _nc < numComps; _nc++) {\n              volCopyData(newArray, outIdx, data[inOffset + xstride * tileX * numComps + _nc], res.offset[_nc], res.scale[_nc]);\n              outIdx++;\n            }\n          }\n        }\n\n        outIdx += outXContIncr;\n      }\n    } // Source texture data from the PBO.\n    // model.context.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n\n    model.context.pixelStorei(model.context.UNPACK_ALIGNMENT, 1);\n    model.context.texImage2D(model.target, 0, model.internalFormat, model.width, model.height, 0, model.format, model.openGLDataType, newArray);\n    publicAPI.deactivate();\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.getMaximumTextureSize = function (ctx) {\n    if (ctx && ctx.isCurrent()) {\n      return ctx.getIntegerv(ctx.MAX_TEXTURE_SIZE);\n    }\n\n    return -1;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  _openGLRenderWindow: null,\n  context: null,\n  handle: 0,\n  sendParametersTime: null,\n  textureBuildTime: null,\n  numberOfDimensions: 0,\n  target: 0,\n  format: 0,\n  openGLDataType: 0,\n  components: 0,\n  width: 0,\n  height: 0,\n  depth: 0,\n  autoParameters: true,\n  wrapS: Wrap.CLAMP_TO_EDGE,\n  wrapT: Wrap.CLAMP_TO_EDGE,\n  wrapR: Wrap.CLAMP_TO_EDGE,\n  minificationFilter: Filter.NEAREST,\n  magnificationFilter: Filter.NEAREST,\n  minLOD: -1000.0,\n  maxLOD: 1000.0,\n  baseLevel: 0,\n  maxLevel: 1000,\n  generateMipmap: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.sendParametersTime = {};\n  obj(model.sendParametersTime, {\n    mtime: 0\n  });\n  model.textureBuildTime = {};\n  obj(model.textureBuildTime, {\n    mtime: 0\n  }); // Build VTK API\n\n  set(publicAPI, model, ['format', 'openGLDataType']);\n  setGet(publicAPI, model, ['keyMatrixTime', 'minificationFilter', 'magnificationFilter', 'wrapS', 'wrapT', 'wrapR', 'generateMipmap']);\n  get(publicAPI, model, ['width', 'height', 'volumeInfo', 'components', 'handle', 'target']); // Object methods\n\n  vtkOpenGLTexture(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkOpenGLTexture'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLTexture$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants); // Register ourself to OpenGL backend if imported\n\nregisterOverride('vtkTexture', newInstance);\n\nexport { vtkOpenGLTexture$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // export const SHADER_TYPES = ['Vertex', 'Fragment', 'Geometry', 'Unknown'];\n// ----------------------------------------------------------------------------\n// vtkShader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShader');\n\n  publicAPI.compile = function () {\n    var stype = model.context.VERTEX_SHADER;\n\n    if (!model.source || !model.source.length || model.shaderType === 'Unknown') {\n      return false;\n    } // Ensure we delete the previous shader if necessary.\n\n\n    if (model.handle !== 0) {\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n    }\n\n    switch (model.shaderType) {\n      // case vtkShader::Geometry:\n      //   type = GL_GEOMETRY_SHADER;\n      //   break;\n      case 'Fragment':\n        stype = model.context.FRAGMENT_SHADER;\n        break;\n\n      case 'Vertex':\n      default:\n        stype = model.context.VERTEX_SHADER;\n        break;\n    }\n\n    model.handle = model.context.createShader(stype);\n    model.context.shaderSource(model.handle, model.source);\n    model.context.compileShader(model.handle);\n    var isCompiled = model.context.getShaderParameter(model.handle, model.context.COMPILE_STATUS);\n\n    if (!isCompiled) {\n      var lastError = model.context.getShaderInfoLog(model.handle);\n      vtkErrorMacro(\"Error compiling shader '\".concat(model.source, \"': \").concat(lastError));\n      model.context.deleteShader(model.handle);\n      model.handle = 0;\n      return false;\n    } // The shader compiled, store its handle and return success.\n\n\n    return true;\n  };\n\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n    model.dirty = true;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  shaderType: 'Unknown',\n  source: '',\n  error: '',\n  handle: 0,\n  dirty: false,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['shaderType', 'source', 'error', 'handle', 'context']); // Object methods\n\n  vtkShader(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShader'); // ----------------------------------------------------------------------------\n\nvar vtkShader$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkShader$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkShader from './Shader.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\n\nfunction substitute(source, search, replace) {\n  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  var replaced = false;\n\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n\n  var gflag = '';\n\n  if (all) {\n    gflag = 'g';\n  }\n\n  var regex = new RegExp(search, gflag);\n  var resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n} // ----------------------------------------------------------------------------\n// vtkShaderProgram methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkShaderProgram(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderProgram');\n\n  publicAPI.compileShader = function () {\n    if (!model.vertexShader.compile()) {\n      vtkErrorMacro(model.vertexShader.getSource().split('\\n').map(function (line, index) {\n        return \"\".concat(index, \": \").concat(line);\n      }).join('\\n'));\n      vtkErrorMacro(model.vertexShader.getError());\n      return 0;\n    }\n\n    if (!model.fragmentShader.compile()) {\n      vtkErrorMacro(model.fragmentShader.getSource().split('\\n').map(function (line, index) {\n        return \"\".concat(index, \": \").concat(line);\n      }).join('\\n'));\n      vtkErrorMacro(model.fragmentShader.getError());\n      return 0;\n    } // skip geometry for now\n\n\n    if (!publicAPI.attachShader(model.vertexShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n\n    if (!publicAPI.attachShader(model.fragmentShader)) {\n      vtkErrorMacro(model.error);\n      return 0;\n    }\n\n    if (!publicAPI.link()) {\n      vtkErrorMacro(\"Links failed: \".concat(model.error));\n      return 0;\n    }\n\n    publicAPI.setCompiled(true);\n    return 1;\n  };\n\n  publicAPI.cleanup = function () {\n    if (model.shaderType === 'Unknown' || model.handle === 0) {\n      return;\n    }\n\n    model.context.deleteShader(model.handle);\n    model.handle = 0;\n  };\n\n  publicAPI.bind = function () {\n    if (!model.linked && !publicAPI.link()) {\n      return false;\n    }\n\n    model.context.useProgram(model.handle);\n    publicAPI.setBound(true);\n    return true;\n  };\n\n  publicAPI.isBound = function () {\n    return !!model.bound;\n  };\n\n  publicAPI.release = function () {\n    model.context.useProgram(null);\n    publicAPI.setBound(false);\n  };\n\n  publicAPI.setContext = function (ctx) {\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.link = function () {\n    if (model.inked) {\n      return true;\n    }\n\n    if (model.handle === 0) {\n      model.error = 'Program has not been initialized, and/or does not have shaders.';\n      return false;\n    } // clear out the list of uniforms used\n\n\n    model.uniformLocs = {};\n    model.context.linkProgram(model.handle);\n    var isCompiled = model.context.getProgramParameter(model.handle, model.context.LINK_STATUS);\n\n    if (!isCompiled) {\n      var lastError = model.context.getProgramInfoLog(model.handle);\n      vtkErrorMacro(\"Error linking shader \".concat(lastError));\n      model.handle = 0;\n      return false;\n    }\n\n    publicAPI.setLinked(true);\n    model.attributeLocs = {};\n    return true;\n  };\n\n  publicAPI.setUniformMatrix = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    var f32 = new Float32Array(v);\n    model.context.uniformMatrix4fv(location, false, f32);\n    return true;\n  };\n\n  publicAPI.setUniformMatrix3x3 = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    var f32 = new Float32Array(v);\n    model.context.uniformMatrix3fv(location, false, f32);\n    return true;\n  };\n\n  publicAPI.setUniformf = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1f(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformfv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformi = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1i(location, v);\n    return true;\n  };\n\n  publicAPI.setUniformiv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform1iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2f = function (name, v1, v2) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform2f(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform2fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform2i = function (name, v1, v2) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (v2 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform2i(location, v1, v2);\n    return true;\n  };\n\n  publicAPI.setUniform2iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform2iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3f = function (name, a1, a2, a3) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (a3 === undefined) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3f(location, a1, a2, a3);\n    return true;\n  };\n\n  publicAPI.setUniform3fArray = function (name, a) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    if (!Array.isArray(a) || a.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3f(location, a[0], a[1], a[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform3fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform3i = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 3) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform3i(location, array[0], array[1], array[2]);\n    return true;\n  };\n\n  publicAPI.setUniform3iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform3iv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4f = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform4f(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4fv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform4fv(location, v);\n    return true;\n  };\n\n  publicAPI.setUniform4i = function (name) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    var array = args; // allow an array passed as a single argument\n\n    if (array.length === 1 && Array.isArray(array[0])) {\n      array = array[0];\n    }\n\n    if (array.length !== 4) {\n      throw new RangeError('Invalid number of values for array');\n    }\n\n    model.context.uniform4i(location, array[0], array[1], array[2], array[3]);\n    return true;\n  };\n\n  publicAPI.setUniform4iv = function (name, v) {\n    var location = publicAPI.findUniform(name);\n\n    if (location === -1) {\n      model.error = \"Could not set uniform \".concat(name, \" . No such uniform.\");\n      return false;\n    }\n\n    model.context.uniform4iv(location, v);\n    return true;\n  };\n\n  publicAPI.findUniform = function (name) {\n    if (!name || !model.linked) {\n      return -1;\n    } // see if we have cached the result\n\n\n    var loc = model.uniformLocs[name];\n\n    if (loc !== undefined) {\n      return loc;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n\n    if (loc === null) {\n      model.error = \"Uniform \".concat(name, \" not found in current shader program.\");\n      model.uniformLocs[name] = -1;\n      return -1;\n    }\n\n    model.uniformLocs[name] = loc;\n    return loc;\n  };\n\n  publicAPI.isUniformUsed = function (name) {\n    if (!name) {\n      return false;\n    } // see if we have cached the result\n\n\n    var loc = model.uniformLocs[name];\n\n    if (loc !== undefined) {\n      return loc !== null;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n\n    loc = model.context.getUniformLocation(model.handle, name);\n    model.uniformLocs[name] = loc;\n\n    if (loc === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  publicAPI.isAttributeUsed = function (name) {\n    if (!name) {\n      return false;\n    } // see if we have cached the result\n\n\n    if (name in model.attributeLocs) {\n      return true;\n    }\n\n    if (!model.linked) {\n      vtkErrorMacro('attempt to find uniform when the shader program is not linked');\n      return false;\n    }\n\n    var loc = model.context.getAttribLocation(model.handle, name);\n\n    if (loc === -1) {\n      return false;\n    }\n\n    model.attributeLocs[name] = loc;\n    return true;\n  };\n\n  publicAPI.attachShader = function (shader) {\n    if (shader.getHandle() === 0) {\n      model.error = 'Shader object was not initialized, cannot attach it.';\n      return false;\n    }\n\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n\n    if (model.handle === 0) {\n      var thandle = model.context.createProgram();\n\n      if (thandle === 0) {\n        model.error = 'Could not create shader program.';\n        return false;\n      }\n\n      model.handle = thandle;\n      model.linked = false;\n    }\n\n    if (shader.getShaderType() === 'Vertex') {\n      if (model.vertexShaderHandle !== 0) {\n        model.comntext.detachShader(model.handle, model.vertexShaderHandle);\n      }\n\n      model.vertexShaderHandle = shader.getHandle();\n    }\n\n    if (shader.getShaderType() === 'Fragment') {\n      if (model.fragmentShaderHandle !== 0) {\n        model.context.detachShader(model.handle, model.fragmentShaderHandle);\n      }\n\n      model.fragmentShaderHandle = shader.getHandle();\n    }\n\n    model.context.attachShader(model.handle, shader.getHandle());\n    publicAPI.setLinked(false);\n    return true;\n  };\n\n  publicAPI.detachShader = function (shader) {\n    if (shader.getHandle() === 0) {\n      model.error = 'shader object was not initialized, cannot attach it.';\n      return false;\n    }\n\n    if (shader.getShaderType() === 'Unknown') {\n      model.error = 'Shader object is of type Unknown and cannot be used.';\n      return false;\n    }\n\n    if (model.handle === 0) {\n      model.error = 'This shader program has not been initialized yet.';\n    }\n\n    switch (shader.getShaderType()) {\n      case 'Vertex':\n        if (model.vertexShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.vertexShaderHandle = 0;\n        model.linked = false;\n        return true;\n\n      case 'Fragment':\n        if (model.fragmentShaderHandle !== shader.getHandle()) {\n          model.error = 'The supplied shader was not attached to this program.';\n          return false;\n        }\n\n        model.context.detachShader(model.handle, shader.getHandle());\n        model.fragmentShaderHandle = 0;\n        model.linked = false;\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  publicAPI.setContext = function (ctx) {\n    model.context = ctx;\n    model.vertexShader.setContext(ctx);\n    model.fragmentShader.setContext(ctx);\n    model.geometryShader.setContext(ctx);\n  };\n\n  publicAPI.setLastCameraMTime = function (mtime) {\n    model.lastCameraMTime = mtime;\n  }; // publicAPI.enableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.enableVertexAttribArray(location);\n  //   return true;\n  // };\n  // publicAPI.disableAttributeArray = (name) => {\n  //   const location = publicAPI.findAttributeArray(name);\n  //   if (location === -1) {\n  //     model.error = `Could not enable attribute ${name} No such attribute.`;\n  //     return false;\n  //   }\n  //   model.context.disableVertexAttribArray(location);\n  //   return true;\n  // };\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  vertexShaderHandle: 0,\n  fragmentShaderHandle: 0,\n  geometryShaderHandle: 0,\n  vertexShader: null,\n  fragmentShader: null,\n  geometryShader: null,\n  linked: false,\n  bound: false,\n  compiled: false,\n  error: '',\n  handle: 0,\n  numberOfOutputs: 0,\n  attributesLocs: null,\n  uniformLocs: null,\n  md5Hash: 0,\n  context: null,\n  lastCameraMTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Instantiate internal objects\n\n  model.attributesLocs = {};\n  model.uniformLocs = {};\n  model.vertexShader = vtkShader.newInstance();\n  model.vertexShader.setShaderType('Vertex');\n  model.fragmentShader = vtkShader.newInstance();\n  model.fragmentShader.setShaderType('Fragment');\n  model.geometryShader = vtkShader.newInstance();\n  model.geometryShader.setShaderType('Geometry'); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['error', 'handle', 'compiled', 'bound', 'md5Hash', 'vertexShader', 'fragmentShader', 'geometryShader', 'linked']); // Object methods\n\n  vtkShaderProgram(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkShaderProgram'); // ----------------------------------------------------------------------------\n\nvar vtkShaderProgram$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  substitute: substitute\n};\n\nexport { vtkShaderProgram$1 as default };\n", "var ObjectType = {\n  ARRAY_BUFFER: 0,\n  ELEMENT_ARRAY_BUFFER: 1,\n  TEXTURE_BUFFER: 2\n};\nvar Constants = {\n  ObjectType: ObjectType\n};\n\nexport { ObjectType, Constants as default };\n", "import macro from '../../macros.js';\nimport { ObjectType } from './BufferObject/Constants.js';\n\n// vtkOpenGLVertexArrayObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLVertexArrayObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLVertexArrayObject'); // Public API methods\n\n  publicAPI.exposedMethod = function () {// This is a publicly exposed method of this object\n  };\n\n  publicAPI.initialize = function () {\n    model.instancingExtension = null;\n\n    if (!model._openGLRenderWindow.getWebgl2()) {\n      model.instancingExtension = model.context.getExtension('ANGLE_instanced_arrays');\n    }\n\n    if (!model.forceEmulation && model._openGLRenderWindow && model._openGLRenderWindow.getWebgl2()) {\n      model.extension = null;\n      model.supported = true;\n      model.handleVAO = model.context.createVertexArray();\n    } else {\n      model.extension = model.context.getExtension('OES_vertex_array_object'); // Start setting up VAO\n\n      if (!model.forceEmulation && model.extension) {\n        model.supported = true;\n        model.handleVAO = model.extension.createVertexArrayOES();\n      } else {\n        model.supported = false;\n      }\n    }\n  };\n\n  publicAPI.isReady = function () {\n    return (// We either probed and allocated a VAO, or are falling back as the current\n      // hardware does not support VAOs.\n      model.handleVAO !== 0 || model.supported === false\n    );\n  };\n\n  publicAPI.bind = function () {\n    // Either simply bind the VAO, or emulate behavior by binding all attributes.\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.bindVertexArray(model.handleVAO);\n      }\n    } else if (publicAPI.isReady()) {\n      var gl = model.context;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n\n          for (var i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 1);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.release = function () {\n    // Either simply release the VAO, or emulate behavior by releasing all attributes.\n    if (publicAPI.isReady() && model.supported) {\n      if (model.extension) {\n        model.extension.bindVertexArrayOES(null);\n      } else {\n        model.context.bindVertexArray(null);\n      }\n    } else if (publicAPI.isReady()) {\n      var gl = model.context;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n        model.context.bindBuffer(gl.ARRAY_BUFFER, buff.buffer);\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n          var matrixCount = attrIt.isMatrix ? attrIt.size : 1;\n\n          for (var i = 0; i < matrixCount; ++i) {\n            gl.enableVertexAttribArray(attrIt.index + i);\n            gl.vertexAttribPointer(attrIt.index + i, attrIt.size, attrIt.type, attrIt.normalize, attrIt.stride, attrIt.offset + attrIt.stride * i / attrIt.size);\n\n            if (attrIt.divisor > 0) {\n              if (model.instancingExtension) {\n                model.instancingExtension.vertexAttribDivisorANGLE(attrIt.index + i, 0);\n              } else {\n                gl.vertexAttribDivisor(attrIt.index + i, 0);\n              }\n            }\n\n            gl.disableVertexAttribArray(attrIt.index + i);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.shaderProgramChanged = function () {\n    publicAPI.release();\n\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n\n    model.handleVAO = 0;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    publicAPI.shaderProgramChanged();\n\n    if (model.handleVAO) {\n      if (model.extension) {\n        model.extension.deleteVertexArrayOES(model.handleVAO);\n      } else {\n        model.context.deleteVertexArray(model.handleVAO);\n      }\n    }\n\n    model.handleVAO = 0;\n    model.supported = true;\n    model.handleProgram = 0;\n  };\n\n  publicAPI.addAttributeArray = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize) {\n    return publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, 0, false);\n  };\n\n  publicAPI.addAttributeArrayWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, isMatrix) {\n    if (!program) {\n      return false;\n    } // Check the program is bound, and the buffer is valid.\n\n\n    if (!program.isBound() || buffer.getHandle() === 0 || buffer.getType() !== ObjectType.ARRAY_BUFFER) {\n      return false;\n    } // Perform initialization if necessary, ensure program matches VAOs.\n\n\n    if (model.handleProgram === 0) {\n      model.handleProgram = program.getHandle();\n    }\n\n    if (!publicAPI.isReady()) {\n      publicAPI.initialize();\n    }\n\n    if (!publicAPI.isReady() || model.handleProgram !== program.getHandle()) {\n      return false;\n    }\n\n    var gl = model.context;\n    var attribs = {};\n    attribs.name = name;\n    attribs.index = gl.getAttribLocation(model.handleProgram, name);\n    attribs.offset = offset;\n    attribs.stride = stride;\n    attribs.type = elementType;\n    attribs.size = elementTupleSize;\n    attribs.normalize = normalize;\n    attribs.isMatrix = isMatrix;\n    attribs.divisor = divisor;\n\n    if (attribs.Index === -1) {\n      return false;\n    } // Always make the call as even the first use wants the attrib pointer setting\n    // up when we are emulating.\n\n\n    buffer.bind();\n    gl.enableVertexAttribArray(attribs.index);\n    gl.vertexAttribPointer(attribs.index, attribs.size, attribs.type, attribs.normalize, attribs.stride, attribs.offset);\n\n    if (divisor > 0) {\n      if (model.instancingExtension) {\n        model.instancingExtension.vertexAttribDivisorANGLE(attribs.index, 1);\n      } else {\n        gl.vertexAttribDivisor(attribs.index, 1);\n      }\n    }\n\n    attribs.buffer = buffer.getHandle(); // If vertex array objects are not supported then build up our list.\n\n    if (!model.supported) {\n      // find the buffer\n      var buffFound = false;\n\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n\n        if (buff.buffer === attribs.buffer) {\n          buffFound = true;\n          var found = false;\n\n          for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n            var attrIt = buff.attributes[iatt];\n\n            if (attrIt.name === name) {\n              found = true;\n              buff.attributes[iatt] = attribs;\n            }\n          }\n\n          if (!found) {\n            buff.attributes.push(attribs);\n          }\n        }\n      }\n\n      if (!buffFound) {\n        model.buffers.push({\n          buffer: attribs.buffer,\n          attributes: [attribs]\n        });\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.addAttributeMatrixWithDivisor = function (program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor) {\n    // bind the first row of values\n    var result = publicAPI.addAttributeArrayWithDivisor(program, buffer, name, offset, stride, elementType, elementTupleSize, normalize, divisor, true);\n\n    if (!result) {\n      return result;\n    }\n\n    var gl = model.context;\n    var index = gl.getAttribLocation(model.handleProgram, name);\n\n    for (var i = 1; i < elementTupleSize; i++) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, elementTupleSize, elementType, normalize, stride, offset + stride * i / elementTupleSize);\n\n      if (divisor > 0) {\n        if (model.instancingExtension) {\n          model.instancingExtension.vertexAttribDivisorANGLE(index + i, 1);\n        } else {\n          gl.vertexAttribDivisor(index + i, 1);\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.removeAttributeArray = function (name) {\n    if (!publicAPI.isReady() || model.handleProgram === 0) {\n      return false;\n    } // If we don't have real VAOs find the entry and remove it too.\n\n\n    if (!model.supported) {\n      for (var ibuff = 0; ibuff < model.buffers.length; ++ibuff) {\n        var buff = model.buffers[ibuff];\n\n        for (var iatt = 0; iatt < buff.attributes.length; ++iatt) {\n          var attrIt = buff.attributes[iatt];\n\n          if (attrIt.name === name) {\n            buff.attributes.splice(iatt, 1);\n\n            if (!buff.attributes.length) {\n              model.buffers.splice(ibuff, 1);\n            }\n\n            return true;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  forceEmulation: false,\n  handleVAO: 0,\n  handleProgram: 0,\n  supported: true,\n  buffers: null,\n  context: null // _openGLRenderWindow: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects initialization\n\n  model.buffers = []; // Object methods\n\n  macro.obj(publicAPI, model); // Create get-only macros\n\n  macro.get(publicAPI, model, ['supported']); // Create get-set macros\n\n  macro.setGet(publicAPI, model, ['forceEmulation']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkOpenGLVertexArrayObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLVertexArrayObject'); // ----------------------------------------------------------------------------\n\nvar vtkVertexArrayObject = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVertexArrayObject as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferObject/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar ObjectType = Constants.ObjectType; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {}; // ----------------------------------------------------------------------------\n// vtkOpenGLBufferObject methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLBufferObject'); // Class-specific private functions\n\n  function convertType(type) {\n    switch (type) {\n      case ObjectType.ELEMENT_ARRAY_BUFFER:\n        return model.context.ELEMENT_ARRAY_BUFFER;\n\n      case ObjectType.TEXTURE_BUFFER:\n        if ('TEXTURE_BUFFER' in model.context) {\n          return model.context.TEXTURE_BUFFER;\n        }\n\n      /* eslint-disable no-fallthrough */\n      // Intentional fallthrough in case there is no TEXTURE_BUFFER in WebGL\n\n      case ObjectType.ARRAY_BUFFER:\n      default:\n        return model.context.ARRAY_BUFFER;\n\n      /* eslint-enable no-fallthrough */\n    }\n  }\n\n  var internalType = null;\n  var internalHandle = null;\n  var dirty = true;\n  var error = ''; // Public API methods\n\n  publicAPI.getType = function () {\n    return internalType;\n  };\n\n  publicAPI.setType = function (value) {\n    internalType = value;\n  };\n\n  publicAPI.getHandle = function () {\n    return internalHandle;\n  };\n\n  publicAPI.isReady = function () {\n    return dirty === false;\n  };\n\n  publicAPI.generateBuffer = function (type) {\n    var objectTypeGL = convertType(type);\n\n    if (internalHandle === null) {\n      internalHandle = model.context.createBuffer();\n      internalType = type;\n    }\n\n    return convertType(internalType) === objectTypeGL;\n  };\n\n  publicAPI.upload = function (data, type) {\n    // buffer, size, type\n    var alreadyGenerated = publicAPI.generateBuffer(type);\n\n    if (!alreadyGenerated) {\n      error = 'Trying to upload array buffer to incompatible buffer.';\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    model.context.bufferData(convertType(internalType), data, model.context.STATIC_DRAW);\n    dirty = false;\n    return true;\n  };\n\n  publicAPI.bind = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), internalHandle);\n    return true;\n  };\n\n  publicAPI.release = function () {\n    if (!internalHandle) {\n      return false;\n    }\n\n    model.context.bindBuffer(convertType(internalType), null);\n    return true;\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (internalHandle !== null) {\n      model.context.bindBuffer(convertType(internalType), null);\n      model.context.deleteBuffer(internalHandle);\n      internalHandle = null;\n    }\n  };\n\n  publicAPI.setOpenGLRenderWindow = function (rw) {\n    if (model._openGLRenderWindow === rw) {\n      return;\n    }\n\n    publicAPI.releaseGraphicsResources();\n    model._openGLRenderWindow = rw;\n    model.context = null;\n\n    if (rw) {\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  publicAPI.getError = function () {\n    return error;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  objectType: ObjectType.ARRAY_BUFFER,\n  // _openGLRenderWindow: null,\n  context: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['_openGLRenderWindow']);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']);\n  vtkOpenGLBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkBufferObject = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkBufferObject as default, extend, newInstance };\n", "import { vec3, mat4, quat } from 'gl-matrix';\nimport macro from '../../macros.js';\nimport vtkBufferObject from './BufferObject.js';\nimport { ObjectType } from './BufferObject/Constants.js';\nimport { Representation } from '../Core/Property/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// Static functions\n// ----------------------------------------------------------------------------\n\nfunction computeInverseShiftAndScaleMatrix(coordShift, coordScale) {\n  var inverseScale = new Float64Array(3);\n  vec3.inverse(inverseScale, coordScale);\n  var matrix = new Float64Array(16);\n  mat4.fromRotationTranslationScale(matrix, quat.create(), coordShift, inverseScale);\n  return matrix;\n}\n\nfunction shouldApplyCoordShiftAndScale(coordShift, coordScale) {\n  if (coordShift === null || coordScale === null) {\n    return false;\n  }\n\n  return !(vec3.exactEquals(coordShift, [0, 0, 0]) && vec3.exactEquals(coordScale, [1, 1, 1]));\n} // ----------------------------------------------------------------------------\n// vtkOpenGLCellArrayBufferObject methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLCellArrayBufferObject(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCellArrayBufferObject');\n  publicAPI.setType(ObjectType.ARRAY_BUFFER);\n\n  publicAPI.createVBO = function (cellArray, inRep, outRep, options) {\n    var selectionMaps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n    if (!cellArray.getData() || !cellArray.getData().length) {\n      model.elementCount = 0;\n      return 0;\n    } // Figure out how big each block will be, currently 6 or 7 floats.\n\n\n    model.blockSize = 3;\n    model.vertexOffset = 0;\n    model.normalOffset = 0;\n    model.tCoordOffset = 0;\n    model.tCoordComponents = 0;\n    model.colorComponents = 0;\n    model.colorOffset = 0;\n    model.customData = [];\n    var pointData = options.points.getData();\n    var normalData = null;\n    var tcoordData = null;\n    var colorData = null;\n    var colorComponents = options.colors ? options.colors.getNumberOfComponents() : 0;\n    var textureComponents = options.tcoords ? options.tcoords.getNumberOfComponents() : 0; // the values of 4 below are because floats are 4 bytes\n\n    if (options.normals) {\n      model.normalOffset = 4 * model.blockSize;\n      model.blockSize += 3;\n      normalData = options.normals.getData();\n    }\n\n    if (options.customAttributes) {\n      options.customAttributes.forEach(function (a) {\n        if (a) {\n          model.customData.push({\n            data: a.getData(),\n            offset: 4 * model.blockSize,\n            components: a.getNumberOfComponents(),\n            name: a.getName()\n          });\n          model.blockSize += a.getNumberOfComponents();\n        }\n      });\n    }\n\n    if (options.tcoords) {\n      model.tCoordOffset = 4 * model.blockSize;\n      model.tCoordComponents = textureComponents;\n      model.blockSize += textureComponents;\n      tcoordData = options.tcoords.getData();\n    }\n\n    if (options.colors) {\n      model.colorComponents = options.colors.getNumberOfComponents();\n      model.colorOffset = 0;\n      colorData = options.colors.getData();\n\n      if (!model.colorBO) {\n        model.colorBO = vtkBufferObject.newInstance();\n      }\n\n      model.colorBO.setOpenGLRenderWindow(model._openGLRenderWindow);\n    } else {\n      model.colorBO = null;\n    }\n\n    model.stride = 4 * model.blockSize;\n    var pointIdx = 0;\n    var normalIdx = 0;\n    var tcoordIdx = 0;\n    var colorIdx = 0;\n    var custIdx = 0;\n    var cellCount = 0;\n    var addAPoint;\n    var cellBuilders = {\n      // easy, every input point becomes an output point\n      anythingToPoints: function anythingToPoints(numPoints, cellPts, offset) {\n        for (var i = 0; i < numPoints; ++i) {\n          addAPoint(cellPts[offset + i]);\n        }\n      },\n      linesToWireframe: function linesToWireframe(numPoints, cellPts, offset) {\n        // for lines we add a bunch of segments\n        for (var i = 0; i < numPoints - 1; ++i) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1]);\n        }\n      },\n      polysToWireframe: function polysToWireframe(numPoints, cellPts, offset) {\n        // for polys we add a bunch of segments and close it\n        if (numPoints > 2) {\n          for (var i = 0; i < numPoints; ++i) {\n            addAPoint(cellPts[offset + i]);\n            addAPoint(cellPts[offset + (i + 1) % numPoints]);\n          }\n        }\n      },\n      stripsToWireframe: function stripsToWireframe(numPoints, cellPts, offset) {\n        if (numPoints > 2) {\n          // for strips we add a bunch of segments and close it\n          for (var i = 0; i < numPoints - 1; ++i) {\n            addAPoint(cellPts[offset + i]);\n            addAPoint(cellPts[offset + i + 1]);\n          }\n\n          for (var _i = 0; _i < numPoints - 2; _i++) {\n            addAPoint(cellPts[offset + _i]);\n            addAPoint(cellPts[offset + _i + 2]);\n          }\n        }\n      },\n      polysToSurface: function polysToSurface(npts, cellPts, offset) {\n        for (var i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + 0]);\n          addAPoint(cellPts[offset + i + 1]);\n          addAPoint(cellPts[offset + i + 2]);\n        }\n      },\n      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {\n        for (var i = 0; i < npts - 2; i++) {\n          addAPoint(cellPts[offset + i]);\n          addAPoint(cellPts[offset + i + 1 + i % 2]);\n          addAPoint(cellPts[offset + i + 1 + (i + 1) % 2]);\n        }\n      }\n    };\n    var cellCounters = {\n      // easy, every input point becomes an output point\n      anythingToPoints: function anythingToPoints(numPoints, cellPts) {\n        return numPoints;\n      },\n      linesToWireframe: function linesToWireframe(numPoints, cellPts) {\n        if (numPoints > 1) {\n          return (numPoints - 1) * 2;\n        }\n\n        return 0;\n      },\n      polysToWireframe: function polysToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 2;\n        }\n\n        return 0;\n      },\n      stripsToWireframe: function stripsToWireframe(numPoints, cellPts) {\n        if (numPoints > 2) {\n          return numPoints * 4 - 6;\n        }\n\n        return 0;\n      },\n      polysToSurface: function polysToSurface(npts, cellPts) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n\n        return 0;\n      },\n      stripsToSurface: function stripsToSurface(npts, cellPts, offset) {\n        if (npts > 2) {\n          return (npts - 2) * 3;\n        }\n\n        return 0;\n      }\n    };\n    var func = null;\n    var countFunc = null;\n\n    if (outRep === Representation.POINTS || inRep === 'verts') {\n      func = cellBuilders.anythingToPoints;\n      countFunc = cellCounters.anythingToPoints;\n    } else if (outRep === Representation.WIREFRAME || inRep === 'lines') {\n      func = cellBuilders[\"\".concat(inRep, \"ToWireframe\")];\n      countFunc = cellCounters[\"\".concat(inRep, \"ToWireframe\")];\n    } else {\n      func = cellBuilders[\"\".concat(inRep, \"ToSurface\")];\n      countFunc = cellCounters[\"\".concat(inRep, \"ToSurface\")];\n    }\n\n    var array = cellArray.getData();\n    var size = array.length;\n    var caboCount = 0;\n\n    for (var index = 0; index < size;) {\n      caboCount += countFunc(array[index], array);\n      index += array[index] + 1;\n    }\n\n    var packedUCVBO = null;\n    var packedVBO = new Float32Array(caboCount * model.blockSize);\n\n    if (colorData) {\n      packedUCVBO = new Uint8Array(caboCount * 4);\n    }\n\n    var vboidx = 0;\n    var ucidx = 0; // Find out if shift scale should be used\n    // Compute squares of diagonal size and distance from the origin\n\n    var diagSq = 0.0;\n    var distSq = 0.0;\n\n    for (var i = 0; i < 3; ++i) {\n      var range = options.points.getRange(i);\n      var delta = range[1] - range[0];\n      diagSq += delta * delta;\n      var distShift = 0.5 * (range[1] + range[0]);\n      distSq += distShift * distShift;\n    }\n\n    var useShiftAndScale = diagSq > 0 && (Math.abs(distSq) / diagSq > 1.0e6 || // If data is far from the origin relative to its size\n    Math.abs(Math.log10(diagSq)) > 3.0 || // If the size is huge when not far from the origin\n    diagSq === 0 && distSq > 1.0e6); // If data is a point, but far from the origin\n\n    if (useShiftAndScale) {\n      // Compute shift and scale vectors\n      var coordShift = new Float64Array(3);\n      var coordScale = new Float64Array(3);\n\n      for (var _i2 = 0; _i2 < 3; ++_i2) {\n        var _range = options.points.getRange(_i2);\n\n        var _delta = _range[1] - _range[0];\n\n        coordShift[_i2] = 0.5 * (_range[1] + _range[0]);\n        coordScale[_i2] = _delta > 0 ? 1.0 / _delta : 1.0;\n      }\n\n      publicAPI.setCoordShiftAndScale(coordShift, coordScale);\n    } else if (model.coordShiftAndScaleEnabled === true) {\n      // Make sure to reset\n      publicAPI.setCoordShiftAndScale(null, null);\n    } // Initialize the structures used to keep track of point ids and cell ids for selectors\n\n\n    if (selectionMaps) {\n      if (!selectionMaps.points && !selectionMaps.cells) {\n        selectionMaps.points = new Int32Array(caboCount);\n        selectionMaps.cells = new Int32Array(caboCount);\n      } else {\n        var newPoints = new Int32Array(caboCount + selectionMaps.points.length);\n        newPoints.set(selectionMaps.points);\n        selectionMaps.points = newPoints;\n        var newCells = new Int32Array(caboCount + selectionMaps.points.length);\n        newCells.set(selectionMaps.cells);\n        selectionMaps.cells = newCells;\n      }\n    }\n\n    var pointCount = options.vertexOffset;\n\n    addAPoint = function addAPointFunc(i) {\n      // Keep track of original point and cell ids, for selection\n      if (selectionMaps) {\n        selectionMaps.points[pointCount] = i;\n        selectionMaps.cells[pointCount] = cellCount;\n      }\n\n      ++pointCount; // Vertices\n\n      pointIdx = i * 3;\n\n      if (!model.coordShiftAndScaleEnabled) {\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n        packedVBO[vboidx++] = pointData[pointIdx++];\n      } else {\n        // Apply shift and scale\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[0]) * model.coordScale[0];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[1]) * model.coordScale[1];\n        packedVBO[vboidx++] = (pointData[pointIdx++] - model.coordShift[2]) * model.coordScale[2];\n      }\n\n      if (normalData !== null) {\n        if (options.haveCellNormals) {\n          normalIdx = (cellCount + options.cellOffset) * 3;\n        } else {\n          normalIdx = i * 3;\n        }\n\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n        packedVBO[vboidx++] = normalData[normalIdx++];\n      }\n\n      model.customData.forEach(function (attr) {\n        custIdx = i * attr.components;\n\n        for (var j = 0; j < attr.components; ++j) {\n          packedVBO[vboidx++] = attr.data[custIdx++];\n        }\n      });\n\n      if (tcoordData !== null) {\n        tcoordIdx = i * textureComponents;\n\n        for (var j = 0; j < textureComponents; ++j) {\n          packedVBO[vboidx++] = tcoordData[tcoordIdx++];\n        }\n      }\n\n      if (colorData !== null) {\n        if (options.haveCellScalars) {\n          colorIdx = (cellCount + options.cellOffset) * colorComponents;\n        } else {\n          colorIdx = i * colorComponents;\n        }\n\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorData[colorIdx++];\n        packedUCVBO[ucidx++] = colorComponents === 4 ? colorData[colorIdx++] : 255;\n      }\n    };\n\n    for (var _index = 0; _index < size;) {\n      func(array[_index], array, _index + 1);\n      _index += array[_index] + 1;\n      cellCount++;\n    }\n\n    model.elementCount = caboCount;\n    publicAPI.upload(packedVBO, ObjectType.ARRAY_BUFFER);\n\n    if (model.colorBO) {\n      model.colorBOStride = 4;\n      model.colorBO.upload(packedUCVBO, ObjectType.ARRAY_BUFFER);\n    }\n\n    return cellCount;\n  };\n\n  publicAPI.setCoordShiftAndScale = function (coordShift, coordScale) {\n    if (coordShift !== null && (coordShift.constructor !== Float64Array || coordShift.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordShift, expected vec3 or null');\n      return;\n    }\n\n    if (coordScale !== null && (coordScale.constructor !== Float64Array || coordScale.length !== 3)) {\n      vtkErrorMacro('Wrong type for coordScale, expected vec3 or null');\n      return;\n    }\n\n    if (model.coordShift === null || coordShift === null || !vec3.equals(coordShift, model.coordShift)) {\n      model.coordShift = coordShift;\n    }\n\n    if (model.coordScale === null || coordScale === null || !vec3.equals(coordScale, model.coordScale)) {\n      model.coordScale = coordScale;\n    }\n\n    model.coordShiftAndScaleEnabled = shouldApplyCoordShiftAndScale(model.coordShift, model.coordScale);\n\n    if (model.coordShiftAndScaleEnabled) {\n      model.inverseShiftAndScaleMatrix = computeInverseShiftAndScaleMatrix(model.coordShift, model.coordScale);\n    } else {\n      model.inverseShiftAndScaleMatrix = null;\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  elementCount: 0,\n  stride: 0,\n  colorBOStride: 0,\n  vertexOffset: 0,\n  normalOffset: 0,\n  tCoordOffset: 0,\n  tCoordComponents: 0,\n  colorOffset: 0,\n  colorComponents: 0,\n  tcoordBO: null,\n  customData: [],\n  coordShift: null,\n  coordScale: null,\n  coordShiftAndScaleEnabled: false,\n  inverseShiftAndScaleMatrix: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkBufferObject.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['colorBO', 'elementCount', 'stride', 'colorBOStride', 'vertexOffset', 'normalOffset', 'tCoordOffset', 'tCoordComponents', 'colorOffset', 'colorComponents', 'customData']);\n  macro.get(publicAPI, model, ['coordShift', 'coordScale', 'coordShiftAndScaleEnabled', 'inverseShiftAndScaleMatrix']); // Object specific methods\n\n  vtkOpenGLCellArrayBufferObject(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkCellArrayBufferObject = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCellArrayBufferObject as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkCellArrayBufferObject from './CellArrayBufferObject.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\nimport { Representation } from '../Core/Property/Constants.js';\n\nvar primTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Tris: 2,\n  TriStrips: 3,\n  TrisEdges: 4,\n  TriStripsEdges: 5,\n  End: 6\n}; // ----------------------------------------------------------------------------\n// vtkOpenGLHelper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLHelper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHelper');\n\n  publicAPI.setOpenGLRenderWindow = function (win) {\n    model.context = win.getContext();\n    model.program.setContext(model.context);\n    model.VAO.setOpenGLRenderWindow(win);\n    model.CABO.setOpenGLRenderWindow(win);\n  };\n\n  publicAPI.releaseGraphicsResources = function (oglwin) {\n    model.VAO.releaseGraphicsResources();\n    model.CABO.releaseGraphicsResources();\n    model.CABO.setElementCount(0);\n  };\n\n  publicAPI.drawArrays = function (ren, actor, rep, oglMapper) {\n    // Are there any entries\n    if (model.CABO.getElementCount()) {\n      // are we drawing edges\n      var mode = publicAPI.getOpenGLMode(rep);\n      var wideLines = publicAPI.haveWideLines(ren, actor);\n      var gl = model.context;\n      var depthMask = gl.getParameter(gl.DEPTH_WRITEMASK);\n\n      if (model.pointPicking) {\n        gl.depthMask(false);\n      }\n\n      var drawingLines = mode === gl.LINES;\n\n      if (drawingLines && wideLines) {\n        publicAPI.updateShaders(ren, actor, oglMapper);\n        gl.drawArraysInstanced(mode, 0, model.CABO.getElementCount(), 2 * Math.ceil(actor.getProperty().getLineWidth()));\n      } else {\n        gl.lineWidth(actor.getProperty().getLineWidth());\n        publicAPI.updateShaders(ren, actor, oglMapper);\n        gl.drawArrays(mode, 0, model.CABO.getElementCount()); // reset the line width\n\n        gl.lineWidth(1);\n      }\n\n      var stride = (mode === gl.POINTS ? 1 : 0) || (mode === gl.LINES ? 2 : 3);\n\n      if (model.pointPicking) {\n        gl.depthMask(depthMask);\n      }\n\n      return model.CABO.getElementCount() / stride;\n    }\n\n    return 0;\n  };\n\n  publicAPI.getOpenGLMode = function (rep) {\n    if (model.pointPicking) {\n      return model.context.POINTS;\n    }\n\n    var type = model.primitiveType;\n\n    if (rep === Representation.POINTS || type === primTypes.Points) {\n      return model.context.POINTS;\n    }\n\n    if (rep === Representation.WIREFRAME || type === primTypes.Lines || type === primTypes.TrisEdges || type === primTypes.TriStripsEdges) {\n      return model.context.LINES;\n    }\n\n    return model.context.TRIANGLES;\n  };\n\n  publicAPI.haveWideLines = function (ren, actor) {\n    if (actor.getProperty().getLineWidth() > 1.0) {\n      // we have wide lines, but the OpenGL implementation may\n      // actually support them, check the range to see if we\n      // really need have to implement our own wide lines\n      if (model.CABO.getOpenGLRenderWindow()) {\n        if (model.CABO.getOpenGLRenderWindow().getHardwareMaximumLineWidth() >= actor.getProperty().getLineWidth()) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getNeedToRebuildShaders = function (ren, actor, oglMapper) {\n    // has something changed that would require us to recreate the shader?\n    // candidates are\n    // property modified (representation interpolation and lighting)\n    // input modified\n    // mapper modified (lighting complexity)\n    if (oglMapper.getNeedToRebuildShaders(publicAPI, ren, actor) || publicAPI.getProgram() === 0 || publicAPI.getShaderSourceTime().getMTime() < oglMapper.getMTime() || publicAPI.getShaderSourceTime().getMTime() < actor.getMTime()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.updateShaders = function (ren, actor, oglMapper) {\n    // has something changed that would require us to recreate the shader?\n    if (publicAPI.getNeedToRebuildShaders(ren, actor, oglMapper)) {\n      var shaders = {\n        Vertex: null,\n        Fragment: null,\n        Geometry: null\n      };\n      oglMapper.buildShaders(shaders, ren, actor); // compile and bind the program if needed\n\n      var newShader = model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgramArray(shaders.Vertex, shaders.Fragment, shaders.Geometry); // if the shader changed reinitialize the VAO\n\n      if (newShader !== publicAPI.getProgram()) {\n        publicAPI.setProgram(newShader); // reset the VAO as the shader has changed\n\n        publicAPI.getVAO().releaseGraphicsResources();\n      }\n\n      publicAPI.getShaderSourceTime().modified();\n    } else {\n      model.CABO.getOpenGLRenderWindow().getShaderCache().readyShaderProgram(publicAPI.getProgram());\n    }\n\n    publicAPI.getVAO().bind();\n    oglMapper.setMapperShaderParameters(publicAPI, ren, actor);\n    oglMapper.setPropertyShaderParameters(publicAPI, ren, actor);\n    oglMapper.setCameraShaderParameters(publicAPI, ren, actor);\n    oglMapper.setLightingShaderParameters(publicAPI, ren, actor);\n    oglMapper.invokeShaderCallbacks(publicAPI, ren, actor);\n  };\n\n  publicAPI.setMapperShaderParameters = function (ren, actor, size) {\n    if (publicAPI.haveWideLines(ren, actor)) {\n      publicAPI.getProgram().setUniform2f('viewportSize', size.usize, size.vsize);\n      var lineWidth = parseFloat(actor.getProperty().getLineWidth());\n      var halfLineWidth = lineWidth / 2.0;\n      publicAPI.getProgram().setUniformf('lineWidthStepSize', lineWidth / Math.ceil(lineWidth));\n      publicAPI.getProgram().setUniformf('halfLineWidth', halfLineWidth);\n    }\n\n    if (model.primitiveType === primTypes.Points || actor.getProperty().getRepresentation() === Representation.POINTS) {\n      publicAPI.getProgram().setUniformf('pointSize', actor.getProperty().getPointSize());\n    } else if (model.pointPicking) {\n      publicAPI.getProgram().setUniformf('pointSize', publicAPI.getPointPickingPrimitiveSize());\n    }\n  };\n\n  publicAPI.replaceShaderPositionVC = function (shaders, ren, actor) {\n    var VSSource = shaders.Vertex; // Always set point size in case we need picking\n\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform float pointSize;']).result;\n    VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', '  gl_PointSize = pointSize;'], false).result; // for lines, make sure we add the width code\n\n    if (publicAPI.getOpenGLMode(actor.getProperty().getRepresentation()) === model.context.LINES && publicAPI.haveWideLines(ren, actor)) {\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Dec', ['//VTK::PositionVC::Dec', 'uniform vec2 viewportSize;', 'uniform float lineWidthStepSize;', 'uniform float halfLineWidth;']).result;\n      VSSource = vtkShaderProgram.substitute(VSSource, '//VTK::PositionVC::Impl', ['//VTK::PositionVC::Impl', ' if (halfLineWidth > 0.0)', '   {', '   float offset = float(gl_InstanceID / 2) * lineWidthStepSize - halfLineWidth;', '   vec4 tmpPos = gl_Position;', '   vec3 tmpPos2 = tmpPos.xyz / tmpPos.w;', '   tmpPos2.x = tmpPos2.x + 2.0 * mod(float(gl_InstanceID), 2.0) * offset / viewportSize[0];', '   tmpPos2.y = tmpPos2.y + 2.0 * mod(float(gl_InstanceID + 1), 2.0) * offset / viewportSize[1];', '   gl_Position = vec4(tmpPos2.xyz * tmpPos.w, tmpPos.w);', '   }']).result;\n    }\n\n    shaders.Vertex = VSSource;\n  };\n\n  publicAPI.getPointPickingPrimitiveSize = function () {\n    if (model.primitiveType === primTypes.Points) {\n      return 2;\n    }\n\n    if (model.primitiveType === primTypes.Lines) {\n      return 4;\n    }\n\n    return 6;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  program: null,\n  shaderSourceTime: null,\n  VAO: null,\n  attributeUpdateTime: null,\n  CABO: null,\n  primitiveType: 0,\n  pointPicking: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  model.shaderSourceTime = {};\n  macro.obj(model.shaderSourceTime);\n  model.attributeUpdateTime = {};\n  macro.obj(model.attributeUpdateTime);\n  macro.setGet(publicAPI, model, ['program', 'shaderSourceTime', 'VAO', 'attributeUpdateTime', 'CABO', 'primitiveType', 'pointPicking']);\n  model.program = vtkShaderProgram.newInstance();\n  model.VAO = vtkVertexArrayObject.newInstance();\n  model.CABO = vtkCellArrayBufferObject.newInstance(); // Object methods\n\n  vtkOpenGLHelper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkHelper = {\n  newInstance: newInstance,\n  extend: extend,\n  primTypes: primTypes\n};\n\nexport { vtkHelper as default, extend, newInstance, primTypes };\n", "import macro from '../../macros.js';\n\n// vtkWebGPUShaderModule methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderModule(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderModule');\n\n  publicAPI.initialize = function (device, shaderDesc) {\n    model.device = device; // console.log(shaderDesc.getCode());\n\n    model.handle = model.device.getHandle().createShaderModule({\n      code: shaderDesc.getCode()\n    });\n  }; // publicAPI.setLastCameraMTime = (mtime) => {\n  //   model.lastCameraMTime = mtime;\n  // };\n\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['lastCameraMTime']);\n  macro.setGet(publicAPI, model, ['device', 'handle']); // Object methods\n\n  vtkWebGPUShaderModule(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderModule'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderModule$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUShaderModule$1 as default };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderModule from './ShaderModule.js';\n\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\n\nfunction substitute(source, search, replace) {\n  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  var replaced = false;\n\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n\n  var gflag = '';\n\n  if (all) {\n    gflag = 'g';\n  }\n\n  var regex = new RegExp(search, gflag);\n  var resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n} // ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n\n  publicAPI.getShaderModule = function (shaderDesc) {\n    // has it already been created?\n    var sType = shaderDesc.getType();\n    var sHash = shaderDesc.getHash();\n\n    var keys = model._shaderModules.keys();\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    } // console.log(JSON.stringify(shaderDesc));\n\n\n    var sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n\n    model._shaderModules.set(shaderDesc, sm);\n\n    return sm;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects\n\n  model._shaderModules = new Map(); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']); // Object methods\n\n  vtkWebGPUShaderCache(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderCache$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  substitute: substitute\n};\n\nexport { vtkWebGPUShaderCache$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n// vtkWebGPUBindGroup methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBindGroup(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBindGroup');\n\n  publicAPI.setBindables = function (bindables) {\n    // is there a difference between the old and new list?\n    if (model.bindables.length === bindables.length) {\n      var allMatch = true;\n\n      for (var i = 0; i < model.bindables.length; i++) {\n        if (model.bindables[i] !== bindables[i]) {\n          allMatch = false;\n        }\n      }\n\n      if (allMatch) {\n        return;\n      }\n    } // there is a difference\n\n\n    model.bindables = bindables;\n    publicAPI.modified();\n  };\n\n  publicAPI.getBindGroupLayout = function (device) {\n    var entries = [];\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      var entry = model.bindables[i].getBindGroupLayoutEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n\n    return device.getBindGroupLayout({\n      entries: entries\n    });\n  };\n\n  publicAPI.getBindGroup = function (device) {\n    // check mtime\n    var mtime = publicAPI.getMTime();\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      var tm = model.bindables[i].getBindGroupTime().getMTime();\n      mtime = tm > mtime ? tm : mtime;\n    }\n\n    if (mtime < model.bindGroupTime.getMTime()) {\n      return model.bindGroup;\n    }\n\n    var entries = [];\n\n    for (var _i = 0; _i < model.bindables.length; _i++) {\n      var entry = model.bindables[_i].getBindGroupEntry();\n\n      entry.binding = _i;\n      entries.push(entry);\n    }\n\n    model.bindGroup = device.getHandle().createBindGroup({\n      layout: publicAPI.getBindGroupLayout(device),\n      entries: entries,\n      label: model.label\n    });\n    model.bindGroupTime.modified();\n    return model.bindGroup;\n  };\n\n  publicAPI.getShaderCode = function (pipeline) {\n    var lines = [];\n    var bgroup = pipeline.getBindGroupLayoutCount(model.label);\n\n    for (var i = 0; i < model.bindables.length; i++) {\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\n    }\n\n    return lines.join('\\n');\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  model.bindables = [];\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['label', 'device', 'arrayInformation']);\n  vtkWebGPUBindGroup(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBindGroup$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUBindGroup$1 as default, extend, newInstance };\n", "import { vtkErrorMacro } from '../../macros.js';\n\n// vtkWebGPUDevice static functions\n//\n// WebGPU uses types in a many places and calls, and often those types\n// need to be associated with byte sizes, alignments, native arrays etc.\n// The folowing methods are designed to help vtk.js introspect those types.\n// WebGPU currently tends to use multiple type formats:\n//  - buffer types such as float32x4\n//  - shader types suchs as vec4<f32>\n//  - texture types such as rgba32float\n// ----------------------------------------------------------------------------\n// see https://gpuweb.github.io/gpuweb/#texture-formats\n// for possible formats, there are a lot of them\n\nvar textureDetails = {\n  // 8-bit formats\n  r8unorm: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8snorm: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  r8uint: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  r8sint: {\n    numComponents: 1,\n    nativeType: Int8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 16-bit formats\n  r16uint: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  r16sint: {\n    numComponents: 1,\n    nativeType: Int16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  r16float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rg8unorm: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8snorm: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rg8uint: {\n    numComponents: 2,\n    nativeType: Uint8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rg8sint: {\n    numComponents: 2,\n    nativeType: Int8Array,\n    stride: 2,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  // 32-bit formats\n  r32uint: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  r32sint: {\n    numComponents: 1,\n    nativeType: Int32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  r32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rg16uint: {\n    numComponents: 2,\n    nativeType: Uint16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rg16sint: {\n    numComponents: 2,\n    nativeType: Int16Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rg16float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  rgba8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'rgba8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8snorm: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  rgba8uint: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  rgba8sint: {\n    numComponents: 4,\n    nativeType: Int8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'sint'\n  },\n  bgra8unorm: {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  'bgra8unorm-srgb': {\n    numComponents: 4,\n    nativeType: Uint8Array,\n    stride: 4,\n    elementSize: 1,\n    sampleType: 'float'\n  },\n  // Packed 32-bit formats\n  rgb9e5ufloat: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rgb10a2unorm: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  rg11b10ufloat: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 4,\n    sampleType: 'float'\n  },\n  // 64-bit formats\n  rg32uint: {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rg32sint: {\n    numComponents: 2,\n    nativeType: Int32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rg32float: {\n    numComponents: 2,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  rgba16uint: {\n    numComponents: 4,\n    nativeType: Uint16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'uint'\n  },\n  rgba16sint: {\n    numComponents: 4,\n    nativeType: Int16Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'sint'\n  },\n  rgba16float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 8,\n    elementSize: 2,\n    sampleType: 'float'\n  },\n  // 128-bit formats\n  rgba32uint: {\n    numComponents: 4,\n    nativeType: Uint32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'uint'\n  },\n  rgba32sint: {\n    numComponents: 4,\n    nativeType: Int32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'sint'\n  },\n  rgba32float: {\n    numComponents: 4,\n    nativeType: Float32Array,\n    stride: 16,\n    elementSize: 4,\n    sampleType: 'unfilterable-float'\n  },\n  // Depth and stencil formats\n  stencil8: {\n    numComponents: 1,\n    nativeType: Uint8Array,\n    stride: 1,\n    elementSize: 1,\n    sampleType: 'uint'\n  },\n  depth16unorm: {\n    numComponents: 1,\n    nativeType: Uint16Array,\n    stride: 2,\n    elementSize: 2,\n    sampleType: 'depth'\n  },\n  depth24plus: {\n    numComponents: 1,\n    nativeType: Uint32Array,\n    stride: 4,\n    elementSize: 3,\n    sampleType: 'depth'\n  },\n  'depth24plus-stencil8': {\n    numComponents: 2,\n    nativeType: Uint32Array,\n    stride: 4,\n    sampleType: 'mixed'\n  },\n  depth32float: {\n    numComponents: 1,\n    nativeType: Float32Array,\n    stride: 4,\n    elementSize: 4,\n    sampleType: 'depth'\n  }\n};\n\nfunction getDetailsFromTextureFormat(format) {\n  if (!format || format.length < 6) return 0;\n\n  if (format in textureDetails === true) {\n    return textureDetails[format];\n  }\n\n  vtkErrorMacro(\"unknown format \".concat(format));\n  return null;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getByteStrideFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // options are x2, x3, x4 or nothing\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n\n  var sizeStart = numComp === 1 ? format.length - 1 : format.length - 3; // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n\n  var num = Number(format[sizeStart]);\n\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return 0;\n  }\n\n  var typeSize = 5 - num / 2;\n  return numComp * typeSize;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getNumberOfComponentsFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // options are x2, x3, x4 or nothing\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n\n  return numComp;\n} // see https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat\n// for possible formats\n\n\nfunction getNativeTypeFromBufferFormat(format) {\n  if (!format || format.length < 5) return 0; // raw types are Uint Int or Float as follows\n\n  var result;\n\n  if (format[0] === 'f') {\n    result = 'Float';\n  } else if (format[0] === 's') {\n    result = 'Int';\n  } else if (format[0] === 'u') {\n    result = 'Uint';\n  } else {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  } // options are 8, 16, 32 resulting in 8, 6, 2 as the last char\n  // plugged into the formula below gives 1, 2, 4 respectively\n\n\n  var base = format.split('x')[0];\n  var num = Number(base[base.length - 1]);\n\n  if (Number.isNaN(num)) {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  }\n\n  result += 8 * (5 - num / 2);\n  result += 'Array';\n  return result;\n}\n\nfunction getShaderTypeFromBufferFormat(format) {\n  var dataType;\n\n  if (format[0] === 'f' || format[1] === 'n') {\n    dataType = 'f32';\n  } else if (format[0] === 's' && format[1] === 'i') {\n    dataType = 'i32';\n  } else if (format[0] === 'u' && format[1] === 'i') {\n    dataType = 'u32';\n  } else {\n    vtkErrorMacro(\"unknown format \".concat(format));\n    return undefined;\n  } // options are x2, x3, x4 or nothing\n\n\n  var numComp = 1;\n\n  if (format[format.length - 2] === 'x') {\n    numComp = Number(format[format.length - 1]);\n  }\n\n  if (numComp === 4) return \"vec4<\".concat(dataType, \">\");\n  if (numComp === 3) return \"vec3<\".concat(dataType, \">\");\n  if (numComp === 2) return \"vec2<\".concat(dataType, \">\");\n  return dataType;\n}\n\nfunction getByteStrideFromShaderFormat(format) {\n  if (!format) return 0;\n  var numComp = 1;\n\n  if (format.substring(0, 3) === 'vec') {\n    numComp = Number(format[3]);\n  } else if (format.substring(0, 3) === 'mat') {\n    numComp = format[3] * format[5];\n  }\n\n  var typeSize = 4;\n  return numComp * typeSize;\n}\n\nfunction getNativeTypeFromShaderFormat(format) {\n  if (!format) return undefined;\n  if (format.includes('f32')) return 'Float32Array';\n  if (format.includes('i32')) return 'Int32Array';\n  if (format.includes('u32')) return 'Uint32Array';\n  vtkErrorMacro(\"unknown format \".concat(format));\n  return undefined;\n}\n\nvar vtkWebGPUTypes = {\n  getDetailsFromTextureFormat: getDetailsFromTextureFormat,\n  getByteStrideFromBufferFormat: getByteStrideFromBufferFormat,\n  getNumberOfComponentsFromBufferFormat: getNumberOfComponentsFromBufferFormat,\n  getNativeTypeFromBufferFormat: getNativeTypeFromBufferFormat,\n  getShaderTypeFromBufferFormat: getShaderTypeFromBufferFormat,\n  getByteStrideFromShaderFormat: getByteStrideFromShaderFormat,\n  getNativeTypeFromShaderFormat: getNativeTypeFromShaderFormat\n};\n\nexport { vtkWebGPUTypes as default };\n", "import { newInstance as newInstance$1, obj, get, setGet } from '../../macros.js';\n\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n\n  publicAPI.getShaderDescriptions = function () {\n    return model.shaderDescriptions;\n  };\n\n  publicAPI.initialize = function (device, hash) {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash; // add in bind group layouts\n\n    var bindGroupLayouts = [];\n\n    for (var i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts: bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n\n    for (var _i = 0; _i < model.shaderDescriptions.length; _i++) {\n      var sd = model.shaderDescriptions[_i];\n      var sm = device.getShaderModule(sd);\n\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n\n  publicAPI.getShaderDescription = function (stype) {\n    for (var i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n\n    return null;\n  };\n\n  publicAPI.addBindGroupLayout = function (bindGroup) {\n    if (!bindGroup) {\n      return;\n    }\n\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n\n  publicAPI.getBindGroupLayout = function (idx) {\n    return model.layouts[idx].layout;\n  };\n\n  publicAPI.getBindGroupLayoutCount = function (llabel) {\n    for (var i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n\n    return 0;\n  };\n\n  publicAPI.bindVertexInput = function (renderEncoder, vInput) {\n    vInput.bindBuffers(renderEncoder);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUPipeline(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUPipeline'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUPipeline$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n\n  publicAPI.hasOutput = function (name) {\n    return model.outputNames.includes(name);\n  };\n\n  publicAPI.addOutput = function (type, name) {\n    var interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n\n  publicAPI.addBuiltinOutput = function (type, name) {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n\n  publicAPI.addBuiltinInput = function (type, name) {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  }; // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n\n\n  publicAPI.replaceShaderCode = function (priorStage, vertexInput) {\n    var inputImpl = [];\n    var iodec = [];\n\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n\n    if (priorStage || model.builtinInputNames.length) {\n      var inputStruct = [];\n      inputStruct.push(\"struct \".concat(model.type, \"Input\\n{\"));\n\n      if (priorStage) {\n        var inputNames = priorStage.getOutputNamesByReference();\n        var inputTypes = priorStage.getOutputTypesByReference();\n        var inputInterpolations = priorStage.getOutputInterpolationsByReference();\n\n        for (var i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(\"  @location(\".concat(i, \") @interpolate(\").concat(inputInterpolations[i], \") \").concat(inputNames[i], \" : \").concat(inputTypes[i], \",\"));\n          } else {\n            inputStruct.push(\"  @location(\".concat(i, \") \").concat(inputNames[i], \" : \").concat(inputTypes[i], \",\"));\n          }\n        }\n      }\n\n      for (var _i = 0; _i < model.builtinInputNames.length; _i++) {\n        inputStruct.push(\"  \".concat(model.builtinInputNames[_i], \" : \").concat(model.builtinInputTypes[_i], \",\"));\n      }\n\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(\"input: \".concat(model.type, \"Input\"));\n      }\n    }\n\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      var outputStruct = [\"struct \".concat(model.type, \"Output\\n{\")];\n\n      for (var _i2 = 0; _i2 < model.outputNames.length; _i2++) {\n        if (model.outputInterpolations[_i2] !== undefined) {\n          outputStruct.push(\"  @location(\".concat(_i2, \") @interpolate(\").concat(model.outputInterpolations[_i2], \") \").concat(model.outputNames[_i2], \" : \").concat(model.outputTypes[_i2], \",\"));\n        } else {\n          outputStruct.push(\"  @location(\".concat(_i2, \") \").concat(model.outputNames[_i2], \" : \").concat(model.outputTypes[_i2], \",\"));\n        }\n      }\n\n      for (var _i3 = 0; _i3 < model.builtinOutputNames.length; _i3++) {\n        outputStruct.push(\"  \".concat(model.builtinOutputNames[_i3], \" : \").concat(model.builtinOutputTypes[_i3], \",\"));\n      }\n\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [\"-> \".concat(model.type, \"Output\")]).result;\n    }\n\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = []; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']); // Object methods\n\n  vtkWebGPUShaderDescription(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderDescription$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUShaderDescription$1 as default, extend, newInstance };\n", "import { newInstance as newInstance$1, obj, setGet } from '../../macros.js';\nimport vtkWebGPUTypes from './Types.js';\n\nfunction arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!b.includes(a[i])) return false;\n  }\n\n  return true;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUVertexInput methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUVertexInput(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVertexInput');\n\n  publicAPI.addBuffer = function (buffer, inames) {\n    var stepMode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'vertex';\n    var names = inames;\n\n    if (!Array.isArray(names)) {\n      names = [names];\n    } // only add if it is a new setting\n\n\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (arraysEqual(model.inputs[i].names, names)) {\n        if (model.inputs[i].buffer === buffer) {\n          return;\n        }\n\n        model.inputs[i].buffer = buffer;\n        return;\n      }\n    } // when adding a new entry, make sure we sort the array\n    // as the order is important to the shader and must always\n    // be the same, so alphabetical is an easy option\n\n\n    model.inputs.push({\n      buffer: buffer,\n      stepMode: stepMode,\n      names: names\n    });\n    model.inputs = model.inputs.sort(function (v1, v2) {\n      if (v1.names[0] < v2.names[0]) {\n        return -1;\n      }\n\n      if (v1.names[0] > v2.names[0]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  publicAPI.removeBufferIfPresent = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        model.inputs.splice(i, 1);\n      }\n    }\n  };\n\n  publicAPI.getBuffer = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer;\n      }\n    }\n\n    return null;\n  };\n\n  publicAPI.hasAttribute = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  publicAPI.getAttributeTime = function (name) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      if (model.inputs[i].names.includes(name)) {\n        return model.inputs[i].buffer.getSourceTime();\n      }\n    }\n\n    return 0;\n  };\n\n  publicAPI.getShaderCode = function () {\n    var result = '';\n    var nameCount = 0;\n\n    for (var i = 0; i < model.inputs.length; i++) {\n      for (var nm = 0; nm < model.inputs[i].names.length; nm++) {\n        var arrayInfo = model.inputs[i].buffer.getArrayInformation()[nm];\n        var type = vtkWebGPUTypes.getShaderTypeFromBufferFormat(arrayInfo.format);\n\n        if (nameCount > 0) {\n          result += ',\\n';\n        }\n\n        result = \"\".concat(result, \"  @location(\").concat(nameCount, \") \").concat(model.inputs[i].names[nm], \" : \").concat(type);\n        nameCount++;\n      }\n    }\n\n    return result;\n  };\n\n  publicAPI.getVertexInputInformation = function () {\n    var info = {};\n\n    if (model.inputs.length) {\n      var vertexBuffers = [];\n      var nameCount = 0;\n\n      for (var i = 0; i < model.inputs.length; i++) {\n        var buf = model.inputs[i].buffer;\n        var buffer = {\n          arrayStride: buf.getStrideInBytes(),\n          stepMode: model.inputs[i].stepMode,\n          attributes: []\n        };\n        var arrayInfo = buf.getArrayInformation();\n\n        for (var nm = 0; nm < model.inputs[i].names.length; nm++) {\n          buffer.attributes.push({\n            shaderLocation: nameCount,\n            offset: arrayInfo[nm].offset,\n            format: arrayInfo[nm].format\n          });\n          nameCount++;\n        }\n\n        vertexBuffers.push(buffer);\n      }\n\n      info.buffers = vertexBuffers;\n    }\n\n    return info;\n  };\n\n  publicAPI.bindBuffers = function (renderEncoder) {\n    for (var i = 0; i < model.inputs.length; i++) {\n      renderEncoder.setVertexBuffer(i, model.inputs[i].buffer.getHandle());\n    }\n\n    if (model.indexBuffer) {\n      renderEncoder.setIndexBuffer(model.indexBuffer.getHandle(), model.indexBuffer.getArrayInformation()[0].format);\n    }\n  };\n\n  publicAPI.getReady = function () {};\n\n  publicAPI.releaseGraphicsResources = function () {\n    if (model.created) {\n      model.inputs = [];\n      model.bindingDescriptions = [];\n      model.attributeDescriptions = [];\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  inputs: null,\n  bindingDescriptions: false,\n  attributeDescriptions: null,\n  indexBuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.bindingDescriptions = [];\n  model.attributeDescriptions = [];\n  model.inputs = [];\n  setGet(publicAPI, model, ['created', 'device', 'handle', 'indexBuffer']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUVertexInput(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUVertexInput'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUVertexInput$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUVertexInput$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport vtkWebGPUBindGroup from './BindGroup.js';\nimport vtkWebGPUPipeline from './Pipeline.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUShaderDescription from './ShaderDescription.js';\nimport vtkWebGPUVertexInput from './VertexInput.js';\n\nvar vtkWebGPUSimpleMapperVS = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Color::Dec\\n\\n//VTK::Normal::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Select::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@vertex\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output : vertexOutput;\\n\\n  // var vertex: vec4<f32> = vertexBC;\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Select::Impl\\n\\n  //VTK::Position::Impl\\n\\n  return output;\\n}\\n\";\nvar vtkWebGPUSimpleMapperFS = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Color::Dec\\n\\n//VTK::Normal::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Select::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output : fragmentOutput;\\n\\n  //VTK::Color::Impl\\n\\n  //VTK::Normal::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::Select::Impl\\n\\n  // var computedColor:vec4<f32> = vec4<f32>(1.0,0.5,0.5,1.0);\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\"; // ----------------------------------------------------------------------------\n// vtkWebGPUSimpleMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUSimpleMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUSimpleMapper');\n\n  publicAPI.generateShaderDescriptions = function (hash, pipeline, vertexInput) {\n    // create the shader descriptions\n    var vDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'vertex',\n      hash: hash,\n      code: model.vertexShaderTemplate\n    });\n    var fDesc = vtkWebGPUShaderDescription.newInstance({\n      type: 'fragment',\n      hash: hash,\n      code: model.fragmentShaderTemplate\n    }); // add them to the pipeline\n\n    var sdrs = pipeline.getShaderDescriptions();\n    sdrs.push(vDesc);\n    sdrs.push(fDesc); // look for replacements to invoke\n\n    var scode = model.vertexShaderTemplate + model.fragmentShaderTemplate; // eslint-disable-next-line prefer-regex-literals\n\n    var re = new RegExp('//VTK::[^:]*::', 'g');\n    var unique = scode.match(re).filter(function (v, i, a) {\n      return a.indexOf(v) === i;\n    });\n    var fnames = unique.map(function (v) {\n      return \"replaceShader\".concat(v.substring(7, v.length - 2));\n    }); // now invoke shader replacement functions\n\n    for (var i = 0; i < fnames.length; i++) {\n      var fname = fnames[i];\n\n      if (fname !== 'replaceShaderIOStructs' && model.shaderReplacements.has(fname)) {\n        model.shaderReplacements.get(fname)(hash, pipeline, vertexInput);\n      }\n    } // always replace the IOStructs last as other replacement funcs may\n    // add inputs or outputs\n\n\n    publicAPI.replaceShaderIOStructs(hash, pipeline, vertexInput); // console.log(vDesc.getCode());\n    // console.log(fDesc.getCode());\n  };\n\n  publicAPI.replaceShaderIOStructs = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.replaceShaderCode(null, vertexInput);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.replaceShaderCode(vDesc);\n  };\n\n  publicAPI.replaceShaderRenderEncoder = function (hash, pipeline, vertexInput) {\n    model.renderEncoder.replaceShaderCode(pipeline);\n  };\n\n  model.shaderReplacements.set('replaceShaderRenderEncoder', publicAPI.replaceShaderRenderEncoder);\n\n  publicAPI.replaceShaderRenderer = function (hash, pipeline, vertexInput) {\n    if (!model.WebGPURenderer) {\n      return;\n    }\n\n    var ubocode = model.WebGPURenderer.getBindGroup().getShaderCode(pipeline);\n    var vDesc = pipeline.getShaderDescription('vertex');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Renderer::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderRenderer', publicAPI.replaceShaderRenderer);\n\n  publicAPI.replaceShaderMapper = function (hash, pipeline, vertexInput) {\n    var ubocode = model.bindGroup.getShaderCode(pipeline);\n    var vDesc = pipeline.getShaderDescription('vertex');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addBuiltinInput('bool', '@builtin(front_facing) frontFacing');\n    code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Mapper::Dec', [ubocode]).result;\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderMapper', publicAPI.replaceShaderMapper);\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['    output.Position = rendererUBO.SCPCMatrix*vertexBC;']).result;\n    vDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.replaceShaderTCoord = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addOutput('vec2<f32>', 'tcoordVS');\n  };\n\n  model.shaderReplacements.set('replaceShaderTCoord', publicAPI.replaceShaderTCoord);\n\n  publicAPI.addTextureView = function (view) {\n    // is it already there?\n    if (model.textureViews.includes(view)) {\n      return;\n    }\n\n    model.textureViews.push(view);\n  }; // do everything required for this mapper to be rerady to draw\n  // but do not bind or do the actual draw commands as the pipeline\n  // is not neccessarily bound yet\n\n\n  publicAPI.prepareToDraw = function (renderEncoder) {\n    model.renderEncoder = renderEncoder; // do anything needed to get our input data up to date\n\n    publicAPI.updateInput(); // make sure buffers are created and up to date\n\n    publicAPI.updateBuffers(); // update bindings and bind groups/layouts\n    // does not acutally bind them, that is done in draw(...)\n\n    publicAPI.updateBindings(); // update the pipeline, includes computing the hash, and if needed\n    // creating the pipeline, shader code etc\n\n    publicAPI.updatePipeline();\n  };\n\n  publicAPI.updateInput = function () {};\n\n  publicAPI.updateBuffers = function () {};\n\n  publicAPI.updateBindings = function () {\n    // bindings can change without a pipeline change\n    // as long as their layout remains the same.\n    // That is why this is done even when the pipeline\n    // hash doesn't change.\n    model.bindGroup.setBindables(publicAPI.getBindables());\n  };\n\n  publicAPI.computePipelineHash = function () {};\n\n  publicAPI.registerDrawCallback = function (encoder) {\n    encoder.registerDrawCallback(model.pipeline, publicAPI.draw);\n  };\n\n  publicAPI.prepareAndDraw = function (encoder) {\n    publicAPI.prepareToDraw(encoder);\n    encoder.setPipeline(model.pipeline);\n    publicAPI.draw(encoder);\n  }; // do the rest of the calls required to draw this mapper\n  // at this point the command encouder and pipeline are\n  // created and bound\n\n\n  publicAPI.draw = function (renderEncoder) {\n    var pipeline = renderEncoder.getBoundPipeline(); // bind the mapper bind group\n\n    renderEncoder.activateBindGroup(model.bindGroup);\n\n    if (model.WebGPURenderer) {\n      model.WebGPURenderer.bindUBO(renderEncoder);\n    } // bind the vertex input\n\n\n    pipeline.bindVertexInput(renderEncoder, model.vertexInput);\n    var indexBuffer = model.vertexInput.getIndexBuffer();\n\n    if (indexBuffer) {\n      renderEncoder.drawIndexed(indexBuffer.getIndexCount(), model.numberOfInstances, 0, 0, 0);\n    } else {\n      renderEncoder.draw(model.numberOfVertices, model.numberOfInstances, 0, 0);\n    }\n  };\n\n  publicAPI.getBindables = function () {\n    var bindables = _toConsumableArray(model.additionalBindables);\n\n    if (model.UBO) {\n      bindables.push(model.UBO);\n    }\n\n    if (model.SSBO) {\n      bindables.push(model.SSBO);\n    } // add texture BindGroupLayouts\n\n\n    for (var t = 0; t < model.textureViews.length; t++) {\n      bindables.push(model.textureViews[t]);\n      var samp = model.textureViews[t].getSampler();\n\n      if (samp) {\n        bindables.push(samp);\n      }\n    }\n\n    return bindables;\n  };\n\n  publicAPI.updatePipeline = function () {\n    publicAPI.computePipelineHash();\n    model.pipeline = model.device.getPipeline(model.pipelineHash); // build the pipeline if needed\n\n    if (!model.pipeline) {\n      model.pipeline = vtkWebGPUPipeline.newInstance();\n      model.pipeline.setDevice(model.device);\n\n      if (model.WebGPURenderer) {\n        model.pipeline.addBindGroupLayout(model.WebGPURenderer.getBindGroup());\n      }\n\n      model.pipeline.addBindGroupLayout(model.bindGroup);\n      publicAPI.generateShaderDescriptions(model.pipelineHash, model.pipeline, model.vertexInput);\n      model.pipeline.setTopology(model.topology);\n      model.pipeline.setRenderEncoder(model.renderEncoder);\n      model.pipeline.setVertexState(model.vertexInput.getVertexInputInformation());\n      model.device.createPipeline(model.pipelineHash, model.pipeline);\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  additionalBindables: undefined,\n  bindGroup: null,\n  device: null,\n  fragmentShaderTemplate: null,\n  numberOfInstances: 1,\n  numberOfVertices: 0,\n  pipelineHash: null,\n  shaderReplacements: null,\n  SSBO: null,\n  textureViews: null,\n  topology: 'triangle-list',\n  UBO: null,\n  vertexShaderTemplate: null,\n  WebGPURenderer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.textureViews = [];\n  model.vertexInput = vtkWebGPUVertexInput.newInstance();\n  model.bindGroup = vtkWebGPUBindGroup.newInstance({\n    label: 'mapperBG'\n  });\n  model.additionalBindables = [];\n  model.fragmentShaderTemplate = model.fragmentShaderTemplate || vtkWebGPUSimpleMapperFS;\n  model.vertexShaderTemplate = model.vertexShaderTemplate || vtkWebGPUSimpleMapperVS;\n  model.shaderReplacements = new Map(); // Build VTK API\n\n  macro.get(publicAPI, model, ['pipeline', 'vertexInput']);\n  macro.setGet(publicAPI, model, ['additionalBindables', 'device', 'fragmentShaderTemplate', 'interpolate', 'numberOfInstances', 'numberOfVertices', 'pipelineHash', 'shaderReplacements', 'SSBO', 'textureViews', 'topology', 'UBO', 'vertexShaderTemplate', 'WebGPURenderer']); // Object methods\n\n  vtkWebGPUSimpleMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUSimpleMapper'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUSimpleMapper$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUSimpleMapper$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUSimpleMapper from './SimpleMapper.js';\n\n// vtkWebGPUFullScreenQuad methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUFullScreenQuad(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUFullScreenQuad');\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    vDesc.addOutput('vec4<f32>', 'vertexVC');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);', 'output.vertexVC = vec4<f32>(vertexBC, 1);']).result;\n    vDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.updateBuffers = function () {\n    var buff = model.device.getBufferManager().getFullScreenQuadBuffer();\n    model.vertexInput.addBuffer(buff, ['vertexBC']);\n    model.numberOfVertices = 6;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUSimpleMapper.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUFullScreenQuad(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUFullScreenQuad'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUFullScreenQuad$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUFullScreenQuad$1 as default, extend, newInstance };\n", "var BufferUsage = {\n  Verts: 0,\n  Lines: 1,\n  Triangles: 2,\n  Strips: 3,\n  LinesFromStrips: 4,\n  LinesFromTriangles: 5,\n  Points: 6,\n  UniformArray: 7,\n  PointArray: 8,\n  NormalsFromPoints: 9,\n  Texture: 10,\n  RawVertex: 11,\n  Storage: 12,\n  Index: 13\n};\nvar PrimitiveTypes = {\n  Start: 0,\n  Points: 0,\n  Lines: 1,\n  Triangles: 2,\n  TriangleStrips: 3,\n  TriangleEdges: 4,\n  TriangleStripEdges: 5,\n  End: 6\n};\nvar Constants = {\n  BufferUsage: BufferUsage,\n  PrimitiveTypes: PrimitiveTypes\n};\n\nexport { BufferUsage, PrimitiveTypes, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './BufferManager/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\n\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  var byteCount = srcArrayBuffer.byteLength;\n  var srcBuffer = device.createBuffer({\n    size: byteCount,\n\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  var arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n\n  srcBuffer.unmap();\n  var encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  var commandBuffer = encoder.finish();\n  var queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n\n  publicAPI.create = function (sizeInBytes, usage) {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage: usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n\n  publicAPI.write = function (data) {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n\n  publicAPI.createAndWrite = function (data, usage) {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage: usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n\n    model.handle.unmap();\n  }; // simple forwarders\n\n\n  var _loop = function _loop(i) {\n    publicAPI[forwarded[i]] = function () {\n      var _model$handle;\n\n      return (_model$handle = model.handle)[forwarded[i]].apply(_model$handle, arguments);\n    };\n  };\n\n  for (var i = 0; i < forwarded.length; i++) {\n    _loop(i);\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBuffer$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkWebGPUBuffer$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport macro from '../../macros.js';\nimport Constants from './BufferManager/Constants.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkWebGPUBuffer from './Buffer.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Representation = vtkProperty.Representation;\nvar PrimitiveTypes = Constants.PrimitiveTypes; // Simulate a small map of pointId to flatId for a cell. The original code\n// used a map and was 2.6x slower (4.7 to 1.9 seconds). Using two fixed\n// length arrays with a count is so much faster even with the required for\n// loops and if statements. This only works as we know the usage is\n// restricted to clear(), set() get() and has() so the count is always\n// incrmenting except for clear where it goes back to 0. Performance\n// improvement is probably due to this appoach not hitting the heap but wow\n// it is so much faster. Code that adds to these vectors checks against 9 to\n// make sure there is room. Switching to test against vec.length -1 results\n// in a small performance hit, so if you change 10, search for 9 in this\n// small class and change those as well.\n\nvar _LimitedMap = /*#__PURE__*/function () {\n  function _LimitedMap() {\n    _classCallCheck(this, _LimitedMap);\n\n    this.keys = new Uint32Array(10);\n    this.values = new Uint32Array(10);\n    this.count = 0;\n  }\n\n  _createClass(_LimitedMap, [{\n    key: \"clear\",\n    value: function clear() {\n      this.count = 0;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      for (var i = 0; i < this.count; i++) {\n        if (this.keys[i] === key) {\n          return true;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      for (var i = 0; i < this.count; i++) {\n        if (this.keys[i] === key) {\n          return this.values[i];\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (this.count < 9) {\n        this.keys[this.count] = key;\n        this.values[this.count++] = value;\n      }\n    }\n  }]);\n\n  return _LimitedMap;\n}();\n\nfunction getPrimitiveName(primType) {\n  switch (primType) {\n    case PrimitiveTypes.Points:\n      return 'points';\n\n    case PrimitiveTypes.Lines:\n      return 'lines';\n\n    case PrimitiveTypes.Triangles:\n    case PrimitiveTypes.TriangleEdges:\n      return 'polys';\n\n    case PrimitiveTypes.TriangleStripEdges:\n    case PrimitiveTypes.TriangleStrips:\n      return 'strips';\n\n    default:\n      return '';\n  }\n}\n\nfunction _getOrAddFlatId(state, ptId, cellId) {\n  var flatId = state.pointIdToFlatId[ptId];\n\n  if (flatId < 0) {\n    flatId = state.flatId;\n    state.pointIdToFlatId[ptId] = flatId;\n    state.flatIdToPointId[state.flatId] = ptId;\n    state.flatIdToCellId[state.flatId] = cellId;\n    state.flatId++;\n  }\n\n  return flatId;\n}\n\nfunction fillCell(ptIds, cellId, state) {\n  var numPtIds = ptIds.length; // are any points already marked for this cell? If so use that as the provoking point\n\n  for (var ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    var _ptId = ptIds[ptIdx];\n\n    if (state.cellProvokedMap.has(_ptId)) {\n      state.ibo[state.iboId++] = state.cellProvokedMap.get(_ptId); // insert remaining ptIds (they do not need to provoke)\n\n      for (var ptIdx2 = ptIdx + 1; ptIdx2 < ptIdx + numPtIds; ptIdx2++) {\n        _ptId = ptIds[ptIdx2 % numPtIds];\n\n        var _flatId = _getOrAddFlatId(state, _ptId, cellId); // add to ibo\n\n\n        state.ibo[state.iboId++] = _flatId;\n      } // all done now\n\n\n      return;\n    }\n  } // else have any of the points not been used yet? (not in provokedPointIds)\n\n\n  for (var _ptIdx = 0; _ptIdx < numPtIds; _ptIdx++) {\n    var _ptId2 = ptIds[_ptIdx];\n\n    if (!state.provokedPointIds[_ptId2]) {\n      var _flatId2 = _getOrAddFlatId(state, _ptId2, cellId); // mark provoking and add to ibo\n\n\n      state.provokedPointIds[_ptId2] = 1;\n      state.cellProvokedMap.set(_ptId2, _flatId2); // when provoking always set the cellId as an original non-provoking value\n      // will have been stored and we need to overwrite that\n\n      state.flatIdToCellId[_flatId2] = cellId;\n      state.ibo[state.iboId++] = _flatId2; // insert remaining ptIds (they do not need to provoke)\n\n      for (var _ptIdx2 = _ptIdx + 1; _ptIdx2 < _ptIdx + numPtIds; _ptIdx2++) {\n        _ptId2 = ptIds[_ptIdx2 % numPtIds];\n        _flatId2 = _getOrAddFlatId(state, _ptId2, cellId); // add to ibo\n\n        state.ibo[state.iboId++] = _flatId2;\n      } // all done now\n\n\n      return;\n    }\n  } // if we got here then none of the ptIds could be used to provoke\n  // so just duplicate the first one\n\n\n  var ptId = ptIds[0];\n  var flatId = state.flatId;\n  state.cellProvokedMap.set(ptId, flatId);\n  state.flatIdToPointId[state.flatId] = ptId;\n  state.flatIdToCellId[state.flatId] = cellId;\n  state.flatId++; // add to ibo\n\n  state.ibo[state.iboId++] = flatId; // insert remaining ptIds (they do not need to provoke)\n\n  for (var _ptIdx3 = 1; _ptIdx3 < numPtIds; _ptIdx3++) {\n    ptId = ptIds[_ptIdx3];\n    flatId = _getOrAddFlatId(state, ptId, cellId); // add to ibo\n\n    state.ibo[state.iboId++] = flatId;\n  }\n}\n\nfunction countCell(ptIds, cellId, state) {\n  var numPtIds = ptIds.length;\n  state.iboSize += numPtIds; // are any points already marked for this cell? If so use that as the provoking point\n\n  for (var ptIdx = 0; ptIdx < numPtIds; ptIdx++) {\n    var ptId = ptIds[ptIdx];\n\n    if (state.cellProvokedMap.has(ptId)) {\n      return;\n    }\n  } // else have any of the points not been used yet? (not in provokedPointIds)\n\n\n  for (var _ptIdx4 = 0; _ptIdx4 < numPtIds; _ptIdx4++) {\n    var _ptId3 = ptIds[_ptIdx4];\n\n    if (!state.provokedPointIds[_ptId3]) {\n      state.provokedPointIds[_ptId3] = 1;\n      state.cellProvokedMap.set(_ptId3, 1);\n      return;\n    }\n  } // if we got here then none of the ptIds could be used to provoke\n\n\n  state.cellProvokedMap.set(ptIds[0], 1);\n  state.extraPoints++;\n}\n\nvar processCell;\n\nvar _single = new Uint32Array(1);\n\nvar _double = new Uint32Array(2);\n\nvar _triple = new Uint32Array(3);\n\nvar _indexCellBuilders = {\n  // easy, every input point becomes an output point\n  anythingToPoints: function anythingToPoints(numPoints, cellPts, offset, cellId, state) {\n    for (var i = 0; i < numPoints; ++i) {\n      _single[0] = cellPts[offset + i];\n      processCell(_single, cellId, state);\n    }\n  },\n  linesToWireframe: function linesToWireframe(numPoints, cellPts, offset, cellId, state) {\n    // for lines we add a bunch of segments\n    for (var i = 0; i < numPoints - 1; ++i) {\n      _double[0] = cellPts[offset + i];\n      _double[1] = cellPts[offset + i + 1];\n      processCell(_double, cellId, state);\n    }\n  },\n  polysToWireframe: function polysToWireframe(numPoints, cellPts, offset, cellId, state) {\n    // for polys we add a bunch of segments and close it\n    if (numPoints > 2) {\n      for (var i = 0; i < numPoints; ++i) {\n        _double[0] = cellPts[offset + i];\n        _double[1] = cellPts[offset + (i + 1) % numPoints];\n        processCell(_double, cellId, state);\n      }\n    }\n  },\n  stripsToWireframe: function stripsToWireframe(numPoints, cellPts, offset, cellId, state) {\n    if (numPoints > 2) {\n      // for strips we add a bunch of segments and close it\n      for (var i = 0; i < numPoints - 1; ++i) {\n        _double[0] = cellPts[offset + i];\n        _double[1] = cellPts[offset + i + 1];\n        processCell(_double, cellId, state);\n      }\n\n      for (var _i = 0; _i < numPoints - 2; _i++) {\n        _double[0] = cellPts[offset + _i];\n        _double[1] = cellPts[offset + _i + 2];\n        processCell(_double, cellId, state);\n      }\n    }\n  },\n  polysToSurface: function polysToSurface(npts, cellPts, offset, cellId, state) {\n    for (var i = 0; i < npts - 2; i++) {\n      _triple[0] = cellPts[offset];\n      _triple[1] = cellPts[offset + i + 1];\n      _triple[2] = cellPts[offset + i + 2];\n      processCell(_triple, cellId, state);\n    }\n  },\n  stripsToSurface: function stripsToSurface(npts, cellPts, offset, cellId, state) {\n    for (var i = 0; i < npts - 2; i++) {\n      _triple[0] = cellPts[offset + i];\n      _triple[1] = cellPts[offset + i + 1 + i % 2];\n      _triple[2] = cellPts[offset + i + 1 + (i + 1) % 2];\n      processCell(_triple, cellId, state);\n    }\n  }\n}; // ----------------------------------------------------------------------------\n// vtkWebGPUIndexBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUIndexBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUIndexBuffer');\n\n  publicAPI.buildIndexBuffer = function (req) {\n    var cellArray = req.cells;\n    var primitiveType = req.primitiveType;\n    var representation = req.representation;\n    var cellOffset = req.cellOffset;\n    var array = cellArray.getData();\n    var cellArraySize = array.length;\n    var inRepName = getPrimitiveName(primitiveType);\n    var numPts = req.numberOfPoints;\n    var state = {\n      provokedPointIds: new Uint8Array(numPts),\n      // size is good\n      extraPoints: 0,\n      iboSize: 0,\n      flatId: 0,\n      iboId: 0,\n      cellProvokedMap: new _LimitedMap()\n    };\n    var func = null;\n\n    if (representation === Representation.POINTS || primitiveType === PrimitiveTypes.Points) {\n      func = _indexCellBuilders.anythingToPoints;\n    } else if (representation === Representation.WIREFRAME || primitiveType === PrimitiveTypes.Lines) {\n      func = _indexCellBuilders[\"\".concat(inRepName, \"ToWireframe\")];\n    } else {\n      func = _indexCellBuilders[\"\".concat(inRepName, \"ToSurface\")];\n    } // first we count how many extra provoking points we need\n\n\n    processCell = countCell;\n    var cellId = cellOffset || 0;\n\n    for (var cellArrayIndex = 0; cellArrayIndex < cellArraySize;) {\n      state.cellProvokedMap.clear();\n      func(array[cellArrayIndex], array, cellArrayIndex + 1, cellId, state);\n      cellArrayIndex += array[cellArrayIndex] + 1;\n      cellId++;\n    } // then we allocate the remaining structures\n    // (we pick the best size to save space and transfer costs)\n\n\n    if (numPts <= 0xffff) {\n      state.flatIdToPointId = new Uint16Array(numPts + state.extraPoints);\n    } else {\n      state.flatIdToPointId = new Uint32Array(numPts + state.extraPoints);\n    }\n\n    if (numPts + state.extraPoints < 0x8fff) {\n      state.pointIdToFlatId = new Int16Array(numPts);\n    } else {\n      state.pointIdToFlatId = new Int32Array(numPts);\n    }\n\n    if (numPts + state.extraPoints <= 0xffff) {\n      state.ibo = new Uint16Array(state.iboSize);\n      req.format = 'uint16';\n    } else {\n      state.ibo = new Uint32Array(state.iboSize);\n      req.format = 'uint32';\n    }\n\n    if (cellId <= 0xffff) {\n      state.flatIdToCellId = new Uint16Array(numPts + state.extraPoints);\n    } else {\n      state.flatIdToCellId = new Uint32Array(numPts + state.extraPoints);\n    }\n\n    state.pointIdToFlatId.fill(-1);\n    state.provokedPointIds.fill(0); // and fill them in\n\n    processCell = fillCell;\n    cellId = cellOffset || 0;\n\n    for (var _cellArrayIndex = 0; _cellArrayIndex < cellArraySize;) {\n      state.cellProvokedMap.clear();\n      func(array[_cellArrayIndex], array, _cellArrayIndex + 1, cellId, state);\n      _cellArrayIndex += array[_cellArrayIndex] + 1;\n      cellId++;\n    }\n\n    delete state.provokedPointIds;\n    delete state.pointIdToFlatId; // store the results we need\n\n    req.nativeArray = state.ibo;\n    model.flatIdToPointId = state.flatIdToPointId;\n    model.flatIdToCellId = state.flatIdToCellId;\n    model.flatSize = state.flatId;\n    model.indexCount = state.iboId;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  flatIdToPointId: null,\n  flatIdToCellId: null,\n  flatSize: 0,\n  indexCount: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUBuffer.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['flatIdToPointId', 'flatIdToCellId', 'flatSize', 'indexCount']);\n  vtkWebGPUIndexBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUIndexBuffer$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkWebGPUIndexBuffer$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { newInstance as newInstance$1, obj, setGet, vtkErrorMacro as vtkErrorMacro$1, newTypedArray } from '../../macros.js';\nimport { k as cross, m as normalize } from '../../Common/Core/Math/index.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUIndexBuffer from './IndexBuffer.js';\nimport vtkWebGPUTypes from './Types.js';\nimport Constants from './BufferManager/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar BufferUsage = Constants.BufferUsage;\nvar vtkErrorMacro = vtkErrorMacro$1;\nvar VtkDataTypes = vtkDataArray.VtkDataTypes; // the webgpu constants all show up as undefined\n\n/* eslint-disable no-undef */\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nvar STATIC = {};\n\nfunction _getFormatForDataArray(dataArray) {\n  var format;\n\n  switch (dataArray.getDataType()) {\n    case VtkDataTypes.UNSIGNED_CHAR:\n      format = 'uint8';\n      break;\n\n    case VtkDataTypes.FLOAT:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_INT:\n      format = 'uint32';\n      break;\n\n    case VtkDataTypes.INT:\n      format = 'sint32';\n      break;\n\n    case VtkDataTypes.DOUBLE:\n      format = 'float32';\n      break;\n\n    case VtkDataTypes.UNSIGNED_SHORT:\n      format = 'uint16';\n      break;\n\n    case VtkDataTypes.SHORT:\n      format = 'sin16';\n      break;\n\n    default:\n      format = 'float32';\n      break;\n  }\n\n  switch (dataArray.getNumberOfComponents()) {\n    case 2:\n      format += 'x2';\n      break;\n\n    case 3:\n      // only 32bit types support x3\n      if (!format.includes('32')) {\n        vtkErrorMacro(\"unsupported x3 type for \".concat(format));\n      }\n\n      format += 'x3';\n      break;\n\n    case 4:\n      format += 'x4';\n      break;\n  }\n\n  return format;\n}\n\nfunction packArray(indexBuffer, inArrayData, numComp, outputType, options) {\n  var result = {};\n  var flatSize = indexBuffer.getFlatSize();\n\n  if (!flatSize) {\n    return result;\n  } // setup shift and scale\n\n\n  var shift = [0.0, 0.0, 0.0, 0.0];\n\n  if (options.shift) {\n    if (options.shift.length) {\n      shift = options.shift;\n    } else {\n      shift.fill(options.shift);\n    }\n  }\n\n  var scale = [1.0, 1.0, 1.0, 1.0];\n\n  if (options.scale) {\n    if (options.scale.length) {\n      scale = options.scale;\n    } else {\n      scale.fill(options.scale);\n    }\n  }\n\n  var packExtra = Object.prototype.hasOwnProperty.call(options, 'packExtra') ? options.packExtra : false;\n  var addAPoint;\n  var vboidx = 0;\n  var stride = numComp + (packExtra ? 1 : 0);\n  var packedVBO = newTypedArray(outputType, flatSize * stride); // pick the right function based on point versus cell data\n\n  var flatIdMap = indexBuffer.getFlatIdToPointId();\n\n  if (options.cellData) {\n    flatIdMap = indexBuffer.getFlatIdToCellId();\n  } // add data based on number of components\n\n\n  if (numComp === 1) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n    };\n  } else if (numComp === 2) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n    };\n  } else if (numComp === 3 && !packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n    };\n  } else if (numComp === 3 && packExtra) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * 1.0 + shift[3];\n    };\n  } else if (numComp === 4) {\n    addAPoint = function addAPointFunc(i) {\n      packedVBO[vboidx++] = scale[0] * inArrayData[i] + shift[0];\n      packedVBO[vboidx++] = scale[1] * inArrayData[i + 1] + shift[1];\n      packedVBO[vboidx++] = scale[2] * inArrayData[i + 2] + shift[2];\n      packedVBO[vboidx++] = scale[3] * inArrayData[i + 3] + shift[3];\n    };\n  } // for each entry in the flat array process it\n\n\n  for (var index = 0; index < flatSize; index++) {\n    var inArrayId = numComp * flatIdMap[index];\n    addAPoint(inArrayId);\n  }\n\n  result.nativeArray = packedVBO;\n  return result;\n}\n\nfunction getNormal(pointData, i0, i1, i2) {\n  var v1 = [pointData[i2 * 3] - pointData[i1 * 3], pointData[i2 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i2 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var v2 = [pointData[i0 * 3] - pointData[i1 * 3], pointData[i0 * 3 + 1] - pointData[i1 * 3 + 1], pointData[i0 * 3 + 2] - pointData[i1 * 3 + 2]];\n  var result = [];\n  cross(v1, v2, result);\n  normalize(result);\n  return result;\n}\n\nfunction generateNormals(cellArray, pointArray) {\n  var pointData = pointArray.getData();\n  var cellArrayData = cellArray.getData();\n\n  if (!cellArrayData || !pointData) {\n    return null;\n  } // return a cellArray of normals\n\n\n  var packedVBO = new Int8Array(cellArray.getNumberOfCells() * 4);\n  var size = cellArrayData.length;\n  var vboidx = 0;\n\n  for (var index = 0; index < size;) {\n    var normal = getNormal(pointData, cellArrayData[index + 1], cellArrayData[index + 2], cellArrayData[index + 3]);\n    packedVBO[vboidx++] = 127 * normal[0];\n    packedVBO[vboidx++] = 127 * normal[1];\n    packedVBO[vboidx++] = 127 * normal[2];\n    packedVBO[vboidx++] = 127;\n    index += cellArrayData[index] + 1;\n  }\n\n  return packedVBO;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUBufferManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBufferManager');\n\n  function _createBuffer(req) {\n    // if a dataArray is provided set the nativeArray\n    if (req.dataArray && !req.nativeArray) {\n      req.nativeArray = req.dataArray.getData();\n    }\n\n    var buffer;\n    var gpuUsage; // handle index buffers\n\n    if (req.usage === BufferUsage.Index) {\n      // todo change to FlattenedIndex to be more clear\n      buffer = vtkWebGPUIndexBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n      /* eslint-disable no-bitwise */\n\n      gpuUsage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.buildIndexBuffer(req);\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setArrayInformation([{\n        format: req.format\n      }]);\n    } // create one if not done already\n\n\n    if (!buffer) {\n      buffer = vtkWebGPUBuffer.newInstance({\n        label: req.label\n      });\n      buffer.setDevice(model.device);\n    } // handle uniform buffers\n\n\n    if (req.usage === BufferUsage.UniformArray) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle storage buffers\n\n\n    if (req.usage === BufferUsage.Storage) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // handle textures\n\n\n    if (req.usage === BufferUsage.Texture) {\n      /* eslint-disable no-bitwise */\n      gpuUsage = GPUBufferUsage.COPY_SRC;\n      /* eslint-enable no-bitwise */\n\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n    } // all of the below types that have gpuUsage = VERTEX require format\n    // to be provided.\n    // handle point data\n\n\n    if (req.usage === BufferUsage.PointArray) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      var arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n      var result = packArray(req.indexBuffer, req.dataArray.getData(), req.dataArray.getNumberOfComponents(), arrayType, {\n        packExtra: req.packExtra,\n        shift: req.shift,\n        scale: req.scale,\n        cellData: req.cellData,\n        cellOffset: req.cellOffset\n      });\n      buffer.createAndWrite(result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: req.cellData ? 'flat' : 'perspective'\n      }]);\n    } // handle normals from points, snorm8x4\n\n\n    if (req.usage === BufferUsage.NormalsFromPoints) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n\n      var _arrayType = vtkWebGPUTypes.getNativeTypeFromBufferFormat(req.format);\n\n      var normals = generateNormals(req.cells, req.dataArray);\n\n      var _result = packArray(req.indexBuffer, normals, 4, _arrayType, {\n        cellData: true\n      });\n\n      buffer.createAndWrite(_result.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format,\n        interpolation: 'flat'\n      }]);\n    }\n\n    if (req.usage === BufferUsage.RawVertex) {\n      gpuUsage = GPUBufferUsage.VERTEX;\n      buffer.createAndWrite(req.nativeArray, gpuUsage);\n      buffer.setStrideInBytes(vtkWebGPUTypes.getByteStrideFromBufferFormat(req.format));\n      buffer.setArrayInformation([{\n        offset: 0,\n        format: req.format\n      }]);\n    }\n\n    buffer.setSourceTime(req.time);\n    return buffer;\n  } // is the buffer already present?\n\n\n  publicAPI.hasBuffer = function (hash) {\n    return model.device.hasCachedObject(hash);\n  };\n\n  publicAPI.getBuffer = function (req) {\n    // if we have a source the get/create/cache the buffer\n    if (req.hash) {\n      return model.device.getCachedObject(req.hash, _createBuffer, req);\n    }\n\n    return _createBuffer(req);\n  };\n\n  publicAPI.getBufferForPointArray = function (dataArray, indexBuffer) {\n    var format = _getFormatForDataArray(dataArray);\n\n    var buffRequest = {\n      hash: \"\".concat(dataArray.getMTime(), \"I\").concat(indexBuffer.getMTime()).concat(format),\n      usage: BufferUsage.PointArray,\n      format: format,\n      dataArray: dataArray,\n      indexBuffer: indexBuffer\n    };\n    return publicAPI.getBuffer(buffRequest);\n  };\n\n  publicAPI.getFullScreenQuadBuffer = function () {\n    if (model.fullScreenQuadBuffer) {\n      return model.fullScreenQuadBuffer;\n    }\n\n    model.fullScreenQuadBuffer = vtkWebGPUBuffer.newInstance();\n    model.fullScreenQuadBuffer.setDevice(model.device); // prettier-ignore\n\n    var array = new Float32Array([-1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0]);\n    model.fullScreenQuadBuffer.createAndWrite(array, GPUBufferUsage.VERTEX);\n    model.fullScreenQuadBuffer.setStrideInBytes(12);\n    model.fullScreenQuadBuffer.setArrayInformation([{\n      offset: 0,\n      format: 'float32x3'\n    }]);\n    return model.fullScreenQuadBuffer;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  fullScreenQuadBuffer: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['device']);\n  vtkWebGPUBufferManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUBufferManager$1 = _objectSpread(_objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, STATIC), Constants);\n\nexport { STATIC, vtkWebGPUBufferManager$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\n/* eslint-disable no-bitwise */\n// ----------------------------------------------------------------------------\n// vtkWebGPUSampler methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUSampler(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUSampler');\n\n  publicAPI.create = function (device) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    model.device = device;\n    model.options.addressModeU = options.addressModeU ? options.addressModeU : 'clamp-to-edge';\n    model.options.addressModeV = options.addressModeV ? options.addressModeV : 'clamp-to-edge';\n    model.options.addressModeW = options.addressModeW ? options.addressModeW : 'clamp-to-edge';\n    model.options.magFilter = options.magFilter ? options.magFilter : 'nearest';\n    model.options.minFilter = options.minFilter ? options.minFilter : 'nearest';\n    model.options.mipmapFilter = options.mipmapFilter ? options.mipmapFilter : 'nearest';\n    model.options.label = model.label;\n    model.handle = model.device.getHandle().createSampler(model.options);\n    model.bindGroupTime.modified();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    var result = \"@binding(\".concat(binding, \") @group(\").concat(group, \") var \").concat(model.label, \": sampler;\");\n    return result;\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: model.handle\n    };\n    return foo;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null,\n  options: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  model.options = {};\n  model.bindGroupLayoutEntry = {\n    /* eslint-disable no-undef */\n    visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\n\n    /* eslint-enable no-undef */\n    sampler: {// type: 'filtering',\n    }\n  };\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'options']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label']);\n  vtkWebGPUSampler(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUSampler$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUSampler$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nvar BufferUsage = vtkWebGPUBufferManager.BufferUsage;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkWebGPUUniformBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUUniformBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUUniformBuffer');\n\n  publicAPI.addEntry = function (name, type) {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(\"entry named \".concat(name, \" already exists\"));\n      return;\n    }\n\n    model.sortDirty = true;\n\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n\n    model.bufferEntries.push({\n      name: name,\n      type: type,\n      sizeInBytes: vtkWebGPUTypes.getByteStrideFromShaderFormat(type),\n      offset: -1,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type),\n      packed: false\n    });\n  }; // UBOs have layout rules in terms of how memory is aligned so we\n  // have to be careful how we order the entries. For example a vec4<f32>\n  // must be aligned on a 16 byte offset, etc. See\n  // https://gpuweb.github.io/gpuweb/wgsl/#memory-layouts\n  // for more details. Right now you can create a situation that would fail\n  // in the future we could add dummy spacer entries where needed to\n  // handle alignment issues\n\n\n  publicAPI.sortBufferEntries = function () {\n    if (!model.sortDirty) {\n      return;\n    }\n\n    var currOffset = 0;\n    var newEntries = []; // compute the max alignment, this is required as WebGPU defines a UBO to have\n    // a size that is a multiple of the maxAlignment\n\n    var maxAlignment = 4;\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n\n      if (entry.sizeInBytes % 16 === 0) {\n        maxAlignment = Math.max(16, maxAlignment);\n      }\n\n      if (entry.sizeInBytes % 8 === 0) {\n        maxAlignment = Math.max(8, maxAlignment);\n      }\n    } // pack anything whose size is a multiple of 16 bytes first\n    // this includes a couple types that don't require 16 byte alignment\n    // such as mat2x2<f32> but that is OK\n\n\n    for (var _i = 0; _i < model.bufferEntries.length; _i++) {\n      var _entry = model.bufferEntries[_i];\n\n      if (_entry.packed === false && _entry.sizeInBytes % 16 === 0) {\n        _entry.packed = true;\n        _entry.offset = currOffset;\n        newEntries.push(_entry);\n        currOffset += _entry.sizeInBytes;\n      }\n    } // now it gets tough, we have the following common types (f32, i32, u32)\n    // - vec2<f32> 8 byte size, 8 byte alignment\n    // - vec3<f32> 12 byte size, 16 byte alignment\n    // - f32 4 byte size, 4 byte alignment\n    // try adding 12 byte, 4 byte pairs\n\n\n    for (var _i2 = 0; _i2 < model.bufferEntries.length; _i2++) {\n      var _entry2 = model.bufferEntries[_i2];\n\n      if (_entry2.packed === false && _entry2.sizeInBytes === 12) {\n        for (var i2 = 0; i2 < model.bufferEntries.length; i2++) {\n          var entry2 = model.bufferEntries[i2];\n\n          if (entry2.packed === false && entry2.sizeInBytes === 4) {\n            _entry2.packed = true;\n            _entry2.offset = currOffset;\n            newEntries.push(_entry2);\n            currOffset += _entry2.sizeInBytes;\n            entry2.packed = true;\n            entry2.offset = currOffset;\n            newEntries.push(entry2);\n            currOffset += entry2.sizeInBytes;\n            break;\n          }\n        }\n      }\n    } // try adding 8 byte, 8 byte pairs\n\n\n    for (var _i3 = 0; _i3 < model.bufferEntries.length; _i3++) {\n      var _entry3 = model.bufferEntries[_i3];\n\n      if (!_entry3.packed && _entry3.sizeInBytes % 8 === 0) {\n        for (var _i4 = _i3 + 1; _i4 < model.bufferEntries.length; _i4++) {\n          var _entry4 = model.bufferEntries[_i4];\n\n          if (!_entry4.packed && _entry4.sizeInBytes % 8 === 0) {\n            _entry3.packed = true;\n            _entry3.offset = currOffset;\n            newEntries.push(_entry3);\n            currOffset += _entry3.sizeInBytes;\n            _entry4.packed = true;\n            _entry4.offset = currOffset;\n            newEntries.push(_entry4);\n            currOffset += _entry4.sizeInBytes;\n            break;\n          }\n        }\n      }\n    } // try adding 8 byte, 4 byte 4 byte triplets\n\n\n    for (var _i5 = 0; _i5 < model.bufferEntries.length; _i5++) {\n      var _entry5 = model.bufferEntries[_i5];\n\n      if (!_entry5.packed && _entry5.sizeInBytes % 8 === 0) {\n        var found = false;\n\n        for (var _i6 = 0; !found && _i6 < model.bufferEntries.length; _i6++) {\n          var _entry6 = model.bufferEntries[_i6];\n\n          if (!_entry6.packed && _entry6.sizeInBytes === 4) {\n            for (var i3 = _i6 + 1; i3 < model.bufferEntries.length; i3++) {\n              var entry3 = model.bufferEntries[i3];\n\n              if (!entry3.packed && entry3.sizeInBytes === 4) {\n                _entry5.packed = true;\n                _entry5.offset = currOffset;\n                newEntries.push(_entry5);\n                currOffset += _entry5.sizeInBytes;\n                _entry6.packed = true;\n                _entry6.offset = currOffset;\n                newEntries.push(_entry6);\n                currOffset += _entry6.sizeInBytes;\n                entry3.packed = true;\n                entry3.offset = currOffset;\n                newEntries.push(entry3);\n                currOffset += entry3.sizeInBytes;\n                found = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n    } // Add anything remaining that is larger than 4 bytes and hope we get lucky.\n    // Likely if there is more than one item added here it will result\n    // in a failed UBO\n\n\n    for (var _i7 = 0; _i7 < model.bufferEntries.length; _i7++) {\n      var _entry7 = model.bufferEntries[_i7];\n\n      if (!_entry7.packed && _entry7.sizeInBytes > 4) {\n        _entry7.packed = true;\n        _entry7.offset = currOffset;\n        newEntries.push(_entry7);\n        currOffset += _entry7.sizeInBytes;\n      }\n    } // finally add remaining 4 byte items\n\n\n    for (var _i8 = 0; _i8 < model.bufferEntries.length; _i8++) {\n      var _entry8 = model.bufferEntries[_i8];\n\n      if (!_entry8.packed) {\n        _entry8.packed = true;\n        _entry8.offset = currOffset;\n        newEntries.push(_entry8);\n        currOffset += _entry8.sizeInBytes;\n      }\n    } // update entries and entryNames\n\n\n    model.bufferEntries = newEntries;\n\n    model._bufferEntryNames.clear();\n\n    for (var _i9 = 0; _i9 < model.bufferEntries.length; _i9++) {\n      model._bufferEntryNames.set(model.bufferEntries[_i9].name, _i9);\n    }\n\n    model.sizeInBytes = currOffset;\n    model.sizeInBytes = maxAlignment * Math.ceil(model.sizeInBytes / maxAlignment);\n    model.sortDirty = false;\n  };\n\n  publicAPI.sendIfNeeded = function (device) {\n    if (!model.UBO) {\n      var req = {\n        nativeArray: model.Float32Array,\n        usage: BufferUsage.UniformArray,\n        label: model.label\n      };\n      model.UBO = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n      model.sendDirty = false;\n    } // send data down if needed\n\n\n    if (model.sendDirty) {\n      device.getHandle().queue.writeBuffer(model.UBO.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes);\n      model.sendDirty = false;\n    } // always updated as mappers depend on this time\n    // it is more of a sentIfNeededTime\n\n\n    model.sendTime.modified();\n  };\n\n  publicAPI.createView = function (type) {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes);\n      }\n\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n\n  publicAPI.setValue = function (name, val) {\n    publicAPI.sortBufferEntries();\n\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n\n    if (entry.lastValue !== val) {\n      view[entry.offset / view.BYTES_PER_ELEMENT] = val;\n      model.sendDirty = true;\n    }\n\n    entry.lastValue = val;\n  };\n\n  publicAPI.setArray = function (name, arr) {\n    publicAPI.sortBufferEntries();\n\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var changed = false;\n\n    for (var i = 0; i < arr.length; i++) {\n      if (!entry.lastValue || entry.lastValue[i] !== arr[i]) {\n        view[entry.offset / view.BYTES_PER_ELEMENT + i] = arr[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      model.sendDirty = true;\n      entry.lastValue = _toConsumableArray(arr);\n    }\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: {\n        buffer: model.UBO.getHandle()\n      }\n    };\n    return foo;\n  };\n\n  publicAPI.getSendTime = function () {\n    return model.sendTime.getMTime();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    // sort the entries\n    publicAPI.sortBufferEntries();\n    var lines = [\"struct \".concat(model.label, \"Struct\\n{\")];\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n      lines.push(\"  \".concat(entry.name, \": \").concat(entry.type, \",\"));\n    }\n\n    lines.push(\"};\\n@binding(\".concat(binding, \") @group(\").concat(group, \") var<uniform> \").concat(model.label, \": \").concat(model.label, \"Struct;\"));\n    return lines.join('\\n');\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  bindGroupLayoutEntry: null,\n  bindGroupEntry: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Internal objects\n\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = []; // default UBO desc\n\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'uniform'\n    }\n  };\n  model.sendTime = {};\n  macro.obj(model.sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  model.sendDirty = true;\n  model.sortDirty = true;\n  macro.get(publicAPI, model, ['binding', 'bindGroupTime']);\n  macro.setGet(publicAPI, model, ['bindGroupLayoutEntry', 'device', 'label', 'sizeInBytes']); // Object methods\n\n  vtkWebGPUUniformBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUUniformBuffer'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUUniformBuffer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUUniformBuffer$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUTypes from './Types.js';\n\nvar BufferUsage = vtkWebGPUBufferManager.BufferUsage;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer - similar to the UniformBuffer class\n// but YOU are responsible for layout issues and alignment.\n// The order you add entries is the order they will be layed out\n// in memory. But you must follow layout rules.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkWebGPUStorageBuffer methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUStorageBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUStorageBuffer');\n\n  publicAPI.addEntry = function (name, type) {\n    if (model._bufferEntryNames.has(name)) {\n      vtkErrorMacro(\"entry named \".concat(name, \" already exists\"));\n      return;\n    }\n\n    model._bufferEntryNames.set(name, model.bufferEntries.length);\n\n    var sizeInBytes = vtkWebGPUTypes.getByteStrideFromShaderFormat(type);\n    model.bufferEntries.push({\n      name: name,\n      type: type,\n      sizeInBytes: sizeInBytes,\n      offset: model.sizeInBytes,\n      nativeType: vtkWebGPUTypes.getNativeTypeFromShaderFormat(type)\n    });\n    model.sizeInBytes += sizeInBytes;\n  };\n\n  publicAPI.send = function (device) {\n    if (!model._buffer) {\n      var req = {\n        nativeArray: model.Float32Array,\n        usage: BufferUsage.Storage,\n        label: model.label\n      };\n      model._buffer = device.getBufferManager().getBuffer(req);\n      model.bindGroupTime.modified();\n\n      model._sendTime.modified();\n\n      return;\n    }\n\n    device.getHandle().queue.writeBuffer(model._buffer.getHandle(), 0, model.arrayBuffer, 0, model.sizeInBytes * model.numberOfInstances);\n\n    model._sendTime.modified();\n  };\n\n  publicAPI.createView = function (type) {\n    if (type in model === false) {\n      if (!model.arrayBuffer) {\n        model.arrayBuffer = new ArrayBuffer(model.sizeInBytes * model.numberOfInstances);\n      }\n\n      model[type] = macro.newTypedArray(type, model.arrayBuffer);\n    }\n  };\n\n  publicAPI.setValue = function (name, instance, val) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    view[(entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT] = val;\n  };\n\n  publicAPI.setArray = function (name, instance, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var ioffset = (entry.offset + instance * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n    for (var i = 0; i < arr.length; i++) {\n      view[ioffset + i] = arr[i];\n    }\n  };\n\n  publicAPI.setAllInstancesFromArray = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = arr.length / model.numberOfInstances;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i];\n      }\n    }\n  };\n\n  publicAPI.setAllInstancesFromArrayColorToFloat = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = arr.length / model.numberOfInstances;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var i = 0; i < numComponents; i++) {\n        view[ioffset + i] = arr[inst * numComponents + i] / 255.0;\n      }\n    }\n  };\n\n  publicAPI.setAllInstancesFromArray3x3To4x4 = function (name, arr) {\n    var idx = model._bufferEntryNames.get(name);\n\n    if (idx === undefined) {\n      vtkErrorMacro(\"entry named \".concat(name, \" not found in UBO\"));\n      return;\n    }\n\n    var entry = model.bufferEntries[idx];\n    publicAPI.createView(entry.nativeType);\n    var view = model[entry.nativeType];\n    var numComponents = 9;\n\n    for (var inst = 0; inst < model.numberOfInstances; inst++) {\n      var ioffset = (entry.offset + inst * model.sizeInBytes) / view.BYTES_PER_ELEMENT;\n\n      for (var j = 0; j < 3; j++) {\n        for (var i = 0; i < 3; i++) {\n          view[ioffset + j * 4 + i] = arr[inst * numComponents + j * 3 + i];\n        }\n      }\n    }\n  };\n\n  publicAPI.getSendTime = function () {\n    return model._sendTime.getMTime();\n  };\n\n  publicAPI.getShaderCode = function (binding, group) {\n    var lines = [\"struct \".concat(model.label, \"StructEntry\\n{\")];\n\n    for (var i = 0; i < model.bufferEntries.length; i++) {\n      var entry = model.bufferEntries[i];\n      lines.push(\"  \".concat(entry.name, \": \").concat(entry.type, \",\"));\n    }\n\n    lines.push(\"\\n};\\nstruct \".concat(model.label, \"Struct\\n{\\n  values: array<\").concat(model.label, \"StructEntry>,\\n};\\n@binding(\").concat(binding, \") @group(\").concat(group, \") var<storage, read> \").concat(model.label, \": \").concat(model.label, \"Struct;\\n\"));\n    return lines.join('\\n');\n  };\n\n  publicAPI.getBindGroupEntry = function () {\n    var foo = {\n      resource: {\n        buffer: model._buffer.getHandle()\n      }\n    };\n    return foo;\n  };\n\n  publicAPI.clearData = function () {\n    model.numberOfInstances = 0;\n    model.sizeInBytes = 0;\n    model.bufferEntries = [];\n    model._bufferEntryNames = new Map();\n    model._buffer = null;\n    delete model.arrayBuffer;\n    delete model.Float32Array;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  bufferEntries: null,\n  bufferEntryNames: null,\n  sizeInBytes: 0,\n  label: null,\n  numberOfInstances: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model); // Internal objects\n\n  model._bufferEntryNames = new Map();\n  model.bufferEntries = [];\n  model._sendTime = {};\n  macro.obj(model._sendTime, {\n    mtime: 0\n  });\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  }); // default SSBO desc\n\n  model.bindGroupLayoutEntry = model.bindGroupLayoutEntry || {\n    buffer: {\n      type: 'read-only-storage'\n    }\n  };\n  macro.get(publicAPI, model, ['bindGroupTime']);\n  macro.setGet(publicAPI, model, ['device', 'bindGroupLayoutEntry', 'label', 'numberOfInstances', 'sizeInBytes']); // Object methods\n\n  vtkWebGPUStorageBuffer(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUStorageBuffer'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUStorageBuffer$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUStorageBuffer$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNodeFactory from '../SceneGraph/ViewNodeFactory.js';\n\nvar CLASS_MAPPING = Object.create(null);\nfunction registerOverride(className, fn) {\n  CLASS_MAPPING[className] = fn;\n} // ----------------------------------------------------------------------------\n// vtkWebGPUViewNodeFactory methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUViewNodeFactory');\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Static class mapping shared across instances\n\n  model.overrides = CLASS_MAPPING; // Inheritance\n\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkWebGPUViewNodeFactory(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUViewNodeFactory'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUViewNodeFactory$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUViewNodeFactory$1 as default, extend, newInstance, registerOverride };\n"],
  "mappings": "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",
  "names": ["vtkErrorMacro", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "vtkViewNodeFactory", "Wrap", "Filter", "vtkDebugMacro", "vtkErrorMacro", "vtkWarningMacro", "volCopyData", "outIdx", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "normalize", "DEFAULT_VALUES", "extend", "newInstance", "ownKeys", "_objectSpread", "ObjectType", "Constants", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "anythingToPoints", "i", "linesToWireframe", "polysToWireframe", "stripsToWireframe", "polysToSurface", "stripsToSurface", "j", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "substitute", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "i", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "ownKeys", "_objectSpread", "_loop", "i", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "ownKeys", "_objectSpread", "Representation", "PrimitiveTypes", "Constants", "_LimitedMap", "get", "set", "DEFAULT_VALUES", "extend", "newInstance", "ownKeys", "_objectSpread", "BufferUsage", "Constants", "vtkErrorMacro", "VtkDataTypes", "STATIC", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "BufferUsage", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "CLASS_MAPPING", "registerOverride", "DEFAULT_VALUES", "extend", "newInstance"]
}
