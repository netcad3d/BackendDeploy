{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Filters/Sources/CubeSource.js", "dep:@kitware_vtk__js_Filters_Sources_CubeSource"],
  "sourcesContent": ["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// vtkCubeSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCubeSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCubeSource');\n\n  function requestData(inData, outData) {\n    var _vtkMatrixBuilder$bui;\n\n    if (model.deleted) {\n      return;\n    }\n\n    var polyData = vtkPolyData.newInstance();\n    outData[0] = polyData;\n    var numberOfPolys = 6;\n    var numberOfPoints = 24; // Define points\n\n    var points = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n    polyData.getPoints().setData(points, 3);\n    var normals = macro.newTypedArray(model.pointType, numberOfPoints * 3);\n    var normalArray = vtkDataArray.newInstance({\n      name: 'Normals',\n      values: normals,\n      numberOfComponents: 3\n    });\n    polyData.getPointData().setNormals(normalArray);\n    var tcdim = 2;\n\n    if (model.generate3DTextureCoordinates === true) {\n      tcdim = 3;\n    }\n\n    var textureCoords = macro.newTypedArray(model.pointType, numberOfPoints * tcdim);\n    var tcoords = vtkDataArray.newInstance({\n      name: 'TextureCoordinates',\n      values: textureCoords,\n      numberOfComponents: tcdim\n    });\n    polyData.getPointData().setTCoords(tcoords);\n    var x = [0.0, 0.0, 0.0];\n    var n = [0.0, 0.0, 0.0];\n    var tc = [0.0, 0.0];\n    var pointIndex = 0;\n    x[0] = -model.xLength / 2.0;\n    n[0] = -1.0;\n    n[1] = 0.0;\n    n[2] = 0.0;\n\n    for (var i = 0; i < 2; i++) {\n      x[1] = -model.yLength / 2.0;\n\n      for (var j = 0; j < 2; j++) {\n        tc[1] = x[1] + 0.5;\n        x[2] = -model.zLength / 2.0;\n\n        for (var k = 0; k < 2; k++) {\n          tc[0] = (x[2] + 0.5) * (1 - 2 * i);\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * i - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * j - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * k - 1;\n          }\n\n          pointIndex++;\n          x[2] += model.zLength;\n        }\n\n        x[1] += model.yLength;\n      }\n\n      x[0] += model.xLength;\n      n[0] += 2.0;\n    }\n\n    x[1] = -model.yLength / 2.0;\n    n[1] = -1.0;\n    n[0] = 0.0;\n    n[2] = 0.0;\n\n    for (var _i = 0; _i < 2; _i++) {\n      x[0] = -model.xLength / 2.0;\n\n      for (var _j = 0; _j < 2; _j++) {\n        tc[0] = (x[0] + 0.5) * (2 * _i - 1);\n        x[2] = -model.zLength / 2.0;\n\n        for (var _k = 0; _k < 2; _k++) {\n          tc[1] = (x[2] + 0.5) * -1;\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * _j - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * _i - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * _k - 1;\n          }\n\n          pointIndex++;\n          x[2] += model.zLength;\n        }\n\n        x[0] += model.xLength;\n      }\n\n      x[1] += model.yLength;\n      n[1] += 2.0;\n    }\n\n    x[2] = -model.zLength / 2.0;\n    n[2] = -1.0;\n    n[0] = 0.0;\n    n[1] = 0.0;\n\n    for (var _i2 = 0; _i2 < 2; _i2++) {\n      x[1] = -model.yLength / 2.0;\n\n      for (var _j2 = 0; _j2 < 2; _j2++) {\n        tc[1] = x[1] + 0.5;\n        x[0] = -model.xLength / 2.0;\n\n        for (var _k2 = 0; _k2 < 2; _k2++) {\n          tc[0] = (x[0] + 0.5) * (2 * _i2 - 1);\n          points[pointIndex * 3] = x[0];\n          points[pointIndex * 3 + 1] = x[1];\n          points[pointIndex * 3 + 2] = x[2];\n          normals[pointIndex * 3] = n[0];\n          normals[pointIndex * 3 + 1] = n[1];\n          normals[pointIndex * 3 + 2] = n[2];\n\n          if (tcdim === 2) {\n            textureCoords[pointIndex * tcdim] = tc[0];\n            textureCoords[pointIndex * tcdim + 1] = tc[1];\n          } else {\n            textureCoords[pointIndex * tcdim] = 2 * _k2 - 1;\n            textureCoords[pointIndex * tcdim + 1] = 2 * _j2 - 1;\n            textureCoords[pointIndex * tcdim + 2] = 2 * _i2 - 1;\n          }\n\n          pointIndex++;\n          x[0] += model.xLength;\n        }\n\n        x[1] += model.yLength;\n      }\n\n      x[2] += model.zLength;\n      n[2] += 2.0;\n    } // Apply rotation to the points coordinates and normals\n\n\n    vtkMatrixBuilder.buildFromDegree().rotateX(model.rotations[0]).rotateY(model.rotations[1]).rotateZ(model.rotations[2]).apply(points).apply(normals); // Apply transformation to the points coordinates\n\n    (_vtkMatrixBuilder$bui = vtkMatrixBuilder.buildFromRadian()).translate.apply(_vtkMatrixBuilder$bui, _toConsumableArray(model.center)).apply(points); // Define quads\n\n\n    var polys = new Uint16Array(numberOfPolys * 5);\n    polyData.getPolys().setData(polys, 1);\n    var polyIndex = 0;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 0;\n    polys[polyIndex++] = 1;\n    polys[polyIndex++] = 3;\n    polys[polyIndex++] = 2;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 6;\n    polys[polyIndex++] = 7;\n    polys[polyIndex++] = 5;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 8;\n    polys[polyIndex++] = 10;\n    polys[polyIndex++] = 11;\n    polys[polyIndex++] = 9;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 12;\n    polys[polyIndex++] = 13;\n    polys[polyIndex++] = 15;\n    polys[polyIndex++] = 14;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 16;\n    polys[polyIndex++] = 18;\n    polys[polyIndex++] = 19;\n    polys[polyIndex++] = 17;\n    polys[polyIndex++] = 4;\n    polys[polyIndex++] = 20;\n    polys[polyIndex++] = 21;\n    polys[polyIndex++] = 23;\n    polys[polyIndex] = 22;\n  }\n\n  publicAPI.setBounds = function () {\n    var boundsArray = [];\n\n    if (Array.isArray(arguments.length <= 0 ? undefined : arguments[0])) {\n      boundsArray = arguments.length <= 0 ? undefined : arguments[0];\n    } else {\n      for (var i = 0; i < arguments.length; i++) {\n        boundsArray.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n      }\n    }\n\n    if (boundsArray.length !== 6) {\n      return;\n    }\n\n    model.xLength = boundsArray[1] - boundsArray[0];\n    model.yLength = boundsArray[3] - boundsArray[2];\n    model.zLength = boundsArray[5] - boundsArray[4];\n    model.center = [(boundsArray[0] + boundsArray[1]) / 2.0, (boundsArray[2] + boundsArray[3]) / 2.0, (boundsArray[4] + boundsArray[5]) / 2.0];\n  }; // Expose methods\n\n\n  publicAPI.requestData = requestData;\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  xLength: 1.0,\n  yLength: 1.0,\n  zLength: 1.0,\n  center: [0.0, 0.0, 0.0],\n  rotations: [0.0, 0.0, 0.0],\n  pointType: 'Float64Array',\n  generate3DTextureCoordinates: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['xLength', 'yLength', 'zLength', 'generate3DTextureCoordinates']);\n  macro.setGetArray(publicAPI, model, ['center', 'rotations'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkCubeSource(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkCubeSource'); // ----------------------------------------------------------------------------\n\nvar vtkCubeSource$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkCubeSource$1 as default, extend, newInstance };\n", "import d from \"./node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js\";export default d;\nexport * from \"./node_modules/@kitware/vtk.js/Filters/Sources/CubeSource.js\""],
  "mappings": "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",
  "names": []
}
