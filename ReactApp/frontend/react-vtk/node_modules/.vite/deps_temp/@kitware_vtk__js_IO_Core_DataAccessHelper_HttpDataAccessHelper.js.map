{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js", "dep:@kitware_vtk__js_IO_Core_DataAccessHelper_HttpDataAccessHelper"],
  "sourcesContent": ["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { decompressSync, strFromU8 } from 'fflate';\nimport macro from '../../../macros.js';\nimport Endian from '../../../Common/Core/Endian.js';\nimport { DataTypeByteSize } from '../../../Common/Core/DataArray/Constants.js';\nimport { registerType } from '../DataAccessHelper.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkDebugMacro = macro.vtkDebugMacro;\n/* eslint-disable prefer-promise-reject-errors */\n\nvar requestCount = 0;\n\nfunction openAsyncXHR(method, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n\n  if (options.headers) {\n    Object.entries(options.headers).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return xhr.setRequestHeader(key, value);\n    });\n  }\n\n  if (options.progressCallback) {\n    xhr.addEventListener('progress', options.progressCallback);\n  }\n\n  return xhr;\n}\n\nfunction fetchBinary(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(decompressSync(new Uint8Array(xhr.response)).buffer);\n          } else {\n            resolve(xhr.response);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = 'arraybuffer';\n    xhr.send();\n  });\n}\n\nfunction fetchArray(instance, baseURL, array) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (array.ref && !array.ref.pending) {\n    return new Promise(function (resolve, reject) {\n      var url = null;\n\n      if (array.ref.url) {\n        url = array.ref.url;\n      } else {\n        url = [baseURL, array.ref.basepath, options.compression ? \"\".concat(array.ref.id, \".gz\") : array.ref.id].join('/');\n      }\n\n      var xhr = openAsyncXHR('GET', url, options);\n\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState === 1) {\n          array.ref.pending = true;\n\n          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n            instance.invokeBusy(true);\n          }\n        }\n\n        if (xhr.readyState === 4) {\n          array.ref.pending = false;\n\n          if (xhr.status === 200 || xhr.status === 0) {\n            array.buffer = xhr.response;\n\n            if (options.compression) {\n              if (array.dataType === 'string' || array.dataType === 'JSON') {\n                array.buffer = strFromU8(decompressSync(new Uint8Array(array.buffer)));\n              } else {\n                array.buffer = decompressSync(new Uint8Array(array.buffer)).buffer;\n              }\n            }\n\n            if (array.ref.encode === 'JSON') {\n              array.values = JSON.parse(array.buffer);\n            } else {\n              if (Endian.ENDIANNESS !== array.ref.encode && Endian.ENDIANNESS) {\n                // Need to swap bytes\n                vtkDebugMacro(\"Swap bytes of \".concat(array.name));\n                Endian.swapBytes(array.buffer, DataTypeByteSize[array.dataType]);\n              }\n\n              array.values = macro.newTypedArray(array.dataType, array.buffer);\n            }\n\n            if (array.values.length !== array.size) {\n              vtkErrorMacro(\"Error in FetchArray: \".concat(array.name, \", does not have the proper array size. Got \").concat(array.values.length, \", instead of \").concat(array.size));\n            } // Done with the ref and work\n\n\n            delete array.ref;\n\n            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n              instance.invokeBusy(false);\n            }\n\n            if (instance !== null && instance !== void 0 && instance.modified) {\n              instance.modified();\n            }\n\n            resolve(array);\n          } else {\n            reject({\n              xhr: xhr,\n              e: e\n            });\n          }\n        }\n      }; // Make request\n\n\n      xhr.responseType = options.compression || array.dataType !== 'string' ? 'arraybuffer' : 'text';\n      xhr.send();\n    });\n  }\n\n  return Promise.resolve(array);\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchJSON(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(JSON.parse(strFromU8(decompressSync(new Uint8Array(xhr.response)))));\n          } else {\n            resolve(JSON.parse(xhr.responseText));\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchText(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options && options.compression && options.compression !== 'gz') {\n    vtkErrorMacro('Supported algorithms are: [gz]');\n    vtkErrorMacro(\"Unkown compression algorithm: \".concat(options.compression));\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          if (options.compression) {\n            resolve(strFromU8(decompressSync(new Uint8Array(xhr.response))));\n          } else {\n            resolve(xhr.responseText);\n          }\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = options.compression ? 'arraybuffer' : 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchImage(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n\n    if (options.crossOrigin) {\n      img.crossOrigin = options.crossOrigin;\n    }\n\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.onerror = reject;\n    img.src = url;\n  });\n}\n/* eslint-enable prefer-promise-reject-errors */\n// ----------------------------------------------------------------------------\n\n\nvar HttpDataAccessHelper = {\n  fetchArray: fetchArray,\n  fetchJSON: fetchJSON,\n  fetchText: fetchText,\n  fetchBinary: fetchBinary,\n  // Only for HTTP\n  fetchImage: fetchImage\n};\nregisterType('http', function (options) {\n  return HttpDataAccessHelper;\n});\n\nexport { HttpDataAccessHelper as default };\n", "import d from \"./node_modules/@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper.js\";export default d;"],
  "mappings": "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",
  "names": []
}
