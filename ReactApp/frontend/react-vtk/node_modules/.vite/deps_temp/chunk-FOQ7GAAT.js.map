{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/AbstractMapper.js"],
  "sourcesContent": ["import macro from '../../macros.js';\n\n// vtkAbstractMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkAbstractMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkAbstractMapper');\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.addClippingPlane = function (plane) {\n    if (!plane.isA('vtkPlane')) {\n      return false;\n    }\n\n    if (!model.clippingPlanes.includes(plane)) {\n      model.clippingPlanes.push(plane);\n      publicAPI.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getNumberOfClippingPlanes = function () {\n    return model.clippingPlanes.length;\n  };\n\n  publicAPI.removeAllClippingPlanes = function () {\n    model.clippingPlanes.length = 0;\n  };\n\n  publicAPI.removeClippingPlane = function (clippingPlane) {\n    var i = model.clippingPlanes.indexOf(clippingPlane);\n\n    if (i === -1) {\n      return false;\n    }\n\n    model.clippingPlanes.splice(i, 1);\n    publicAPI.modified();\n    return true;\n  };\n\n  publicAPI.getClippingPlanes = function () {\n    return model.clippingPlanes;\n  };\n\n  publicAPI.setClippingPlanes = function (planes) {\n    if (!planes) {\n      return;\n    }\n\n    if (!Array.isArray(planes)) {\n      publicAPI.addClippingPlane(planes);\n    } else {\n      var nbPlanes = planes.length;\n\n      for (var i = 0; i < nbPlanes && i < 6; i++) {\n        publicAPI.addClippingPlane(planes[i]);\n      }\n    }\n  };\n\n  publicAPI.getClippingPlaneInDataCoords = function (propMatrix, i, hnormal) {\n    var clipPlanes = model.clippingPlanes;\n    var mat = propMatrix;\n\n    if (clipPlanes) {\n      var n = clipPlanes.length;\n\n      if (i >= 0 && i < n) {\n        // Get the plane\n        var plane = clipPlanes[i];\n        var normal = plane.getNormal();\n        var origin = plane.getOrigin(); // Compute the plane equation\n\n        var v1 = normal[0];\n        var v2 = normal[1];\n        var v3 = normal[2];\n        var v4 = -(v1 * origin[0] + v2 * origin[1] + v3 * origin[2]); // Transform normal from world to data coords\n\n        hnormal[0] = v1 * mat[0] + v2 * mat[4] + v3 * mat[8] + v4 * mat[12];\n        hnormal[1] = v1 * mat[1] + v2 * mat[5] + v3 * mat[9] + v4 * mat[13];\n        hnormal[2] = v1 * mat[2] + v2 * mat[6] + v3 * mat[10] + v4 * mat[14];\n        hnormal[3] = v1 * mat[3] + v2 * mat[7] + v3 * mat[11] + v4 * mat[15];\n        return;\n      }\n    }\n\n    macro.vtkErrorMacro(\"Clipping plane index \".concat(i, \" is out of range.\"));\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  clippingPlanes: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.algo(publicAPI, model, 1, 0);\n\n  if (!model.clippingPlanes) {\n    model.clippingPlanes = [];\n  }\n\n  vtkAbstractMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar vtkAbstractMapper$1 = {\n  extend: extend\n};\n\nexport { vtkAbstractMapper$1 as default, extend };\n"],
  "mappings": ";;;;;AAKA,SAAS,kBAAkB,WAAW,OAAO;AAC3C,QAAM,eAAe,KAAK,mBAAmB;AAE7C,YAAU,SAAS,WAAY;AAC7B,cAAU,aAAa;AAAA,EACzB;AAEA,YAAU,mBAAmB,SAAU,OAAO;AAC5C,QAAI,CAAC,MAAM,IAAI,UAAU,GAAG;AAC1B,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,eAAe,SAAS,KAAK,GAAG;AACzC,YAAM,eAAe,KAAK,KAAK;AAC/B,gBAAU,SAAS;AACnB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEA,YAAU,4BAA4B,WAAY;AAChD,WAAO,MAAM,eAAe;AAAA,EAC9B;AAEA,YAAU,0BAA0B,WAAY;AAC9C,UAAM,eAAe,SAAS;AAAA,EAChC;AAEA,YAAU,sBAAsB,SAAU,eAAe;AACvD,QAAI,IAAI,MAAM,eAAe,QAAQ,aAAa;AAElD,QAAI,MAAM,IAAI;AACZ,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,OAAO,GAAG,CAAC;AAChC,cAAU,SAAS;AACnB,WAAO;AAAA,EACT;AAEA,YAAU,oBAAoB,WAAY;AACxC,WAAO,MAAM;AAAA,EACf;AAEA,YAAU,oBAAoB,SAAU,QAAQ;AAC9C,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AAEA,QAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAU,iBAAiB,MAAM;AAAA,IACnC,OAAO;AACL,UAAI,WAAW,OAAO;AAEtB,eAAS,IAAI,GAAG,IAAI,YAAY,IAAI,GAAG,KAAK;AAC1C,kBAAU,iBAAiB,OAAO,EAAE;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAEA,YAAU,+BAA+B,SAAU,YAAY,GAAG,SAAS;AACzE,QAAI,aAAa,MAAM;AACvB,QAAI,MAAM;AAEV,QAAI,YAAY;AACd,UAAI,IAAI,WAAW;AAEnB,UAAI,KAAK,KAAK,IAAI,GAAG;AAEnB,YAAI,QAAQ,WAAW;AACvB,YAAI,SAAS,MAAM,UAAU;AAC7B,YAAI,SAAS,MAAM,UAAU;AAE7B,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,EAAE,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK,KAAK,OAAO;AAEzD,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAChE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI;AAChE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,IAAI;AACjE,gBAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,MAAM,KAAK,IAAI;AACjE;AAAA,MACF;AAAA,IACF;AAEA,UAAM,cAAc,wBAAwB,OAAO,GAAG,mBAAmB,CAAC;AAAA,EAC5E;AACF;AAKA,IAAI,iBAAiB;AAAA,EACnB,gBAAgB,CAAC;AACnB;AAEA,SAAS,OAAO,WAAW,OAAO;AAChC,MAAI,gBAAgB,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,CAAC;AACzF,SAAO,OAAO,OAAO,gBAAgB,aAAa;AAElD,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,KAAK,WAAW,OAAO,GAAG,CAAC;AAEjC,MAAI,CAAC,MAAM,gBAAgB;AACzB,UAAM,iBAAiB,CAAC;AAAA,EAC1B;AAEA,oBAAkB,WAAW,KAAK;AACpC;AAEA,IAAI,sBAAsB;AAAA,EACxB;AACF;",
  "names": []
}
