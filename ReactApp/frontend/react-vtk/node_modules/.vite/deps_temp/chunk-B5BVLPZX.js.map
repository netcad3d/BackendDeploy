{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/IO/Core/DataAccessHelper/LiteHttpDataAccessHelper.js"],
  "sourcesContent": ["import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport macro from '../../../macros.js';\nimport Endian from '../../../Common/Core/Endian.js';\nimport { DataTypeByteSize } from '../../../Common/Core/DataArray/Constants.js';\nimport { has, registerType } from '../DataAccessHelper.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro,\n    vtkDebugMacro = macro.vtkDebugMacro;\n\nvar REJECT_COMPRESSION = function REJECT_COMPRESSION() {\n  vtkErrorMacro('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.');\n  return Promise.reject(new Error('LiteHttpDataAccessHelper does not support compression. Need to register HttpDataAccessHelper instead.'));\n};\n/* eslint-disable prefer-promise-reject-errors */\n\n\nvar requestCount = 0;\n\nfunction openAsyncXHR(method, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n\n  if (options.headers) {\n    Object.entries(options.headers).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return xhr.setRequestHeader(key, value);\n    });\n  }\n\n  if (options.progressCallback) {\n    xhr.addEventListener('progress', options.progressCallback);\n  }\n\n  return xhr;\n}\n\nfunction fetchBinary(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 0) {\n          resolve(xhr.response);\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = 'arraybuffer';\n    xhr.send();\n  });\n}\n\nfunction fetchArray(instance, baseURL, array) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (options && options.compression) {\n    return REJECT_COMPRESSION();\n  }\n\n  if (array.ref && !array.ref.pending) {\n    return new Promise(function (resolve, reject) {\n      var url = [baseURL, array.ref.basepath, array.ref.id].join('/');\n      var xhr = openAsyncXHR('GET', url, options);\n\n      xhr.onreadystatechange = function (e) {\n        if (xhr.readyState === 1) {\n          array.ref.pending = true;\n\n          if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n            instance.invokeBusy(true);\n          }\n        }\n\n        if (xhr.readyState === 4) {\n          array.ref.pending = false;\n\n          if (xhr.status === 200 || xhr.status === 0) {\n            array.buffer = xhr.response;\n\n            if (array.ref.encode === 'JSON') {\n              array.values = JSON.parse(array.buffer);\n            } else {\n              if (Endian.ENDIANNESS !== array.ref.encode && Endian.ENDIANNESS) {\n                // Need to swap bytes\n                vtkDebugMacro(\"Swap bytes of \".concat(array.name));\n                Endian.swapBytes(array.buffer, DataTypeByteSize[array.dataType]);\n              }\n\n              array.values = macro.newTypedArray(array.dataType, array.buffer);\n            }\n\n            if (array.values.length !== array.size) {\n              vtkErrorMacro(\"Error in FetchArray: \".concat(array.name, \", does not have the proper array size. Got \").concat(array.values.length, \", instead of \").concat(array.size));\n            } // Done with the ref and work\n\n\n            delete array.ref;\n\n            if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n              instance.invokeBusy(false);\n            }\n\n            if (instance !== null && instance !== void 0 && instance.modified) {\n              instance.modified();\n            }\n\n            resolve(array);\n          } else {\n            reject({\n              xhr: xhr,\n              e: e\n            });\n          }\n        }\n      }; // Make request\n\n\n      xhr.responseType = array.dataType !== 'string' ? 'arraybuffer' : 'text';\n      xhr.send();\n    });\n  }\n\n  return Promise.resolve(array);\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchJSON(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options && options.compression) {\n    return REJECT_COMPRESSION();\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          resolve(JSON.parse(xhr.responseText));\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchText(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options && options.compression) {\n    return REJECT_COMPRESSION();\n  }\n\n  return new Promise(function (resolve, reject) {\n    var xhr = openAsyncXHR('GET', url, options);\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState === 1) {\n        if (++requestCount === 1 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(true);\n        }\n      }\n\n      if (xhr.readyState === 4) {\n        if (--requestCount === 0 && instance !== null && instance !== void 0 && instance.invokeBusy) {\n          instance.invokeBusy(false);\n        }\n\n        if (xhr.status === 200 || xhr.status === 0) {\n          resolve(xhr.responseText);\n        } else {\n          reject({\n            xhr: xhr,\n            e: e\n          });\n        }\n      }\n    }; // Make request\n\n\n    xhr.responseType = 'text';\n    xhr.send();\n  });\n} // ----------------------------------------------------------------------------\n\n\nfunction fetchImage(instance, url) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n\n    if (options.crossOrigin) {\n      img.crossOrigin = options.crossOrigin;\n    }\n\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.onerror = reject;\n    img.src = url;\n  });\n}\n/* eslint-enable prefer-promise-reject-errors */\n// ----------------------------------------------------------------------------\n\n\nvar LiteHttpDataAccessHelper = {\n  fetchArray: fetchArray,\n  fetchJSON: fetchJSON,\n  fetchText: fetchText,\n  fetchBinary: fetchBinary,\n  // Only for HTTP\n  fetchImage: fetchImage\n}; // The lite version should never override a full feature one...\n\nif (!has('http')) {\n  registerType('http', function (options) {\n    return LiteHttpDataAccessHelper;\n  });\n}\n\nexport { LiteHttpDataAccessHelper as default };\n"],
  "mappings": "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",
  "names": ["REJECT_COMPRESSION"]
}
