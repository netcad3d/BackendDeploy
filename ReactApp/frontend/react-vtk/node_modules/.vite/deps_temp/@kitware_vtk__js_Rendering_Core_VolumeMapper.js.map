{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/VolumeMapper.js", "dep:@kitware_vtk__js_Rendering_Core_VolumeMapper"],
  "sourcesContent": ["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport { O as createUninitializedBounds, D as clampValue, K as floor } from '../../Common/Core/Math/index.js';\nimport Constants from './VolumeMapper/Constants.js';\nimport vtkAbstractMapper from './AbstractMapper.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar BlendMode = Constants.BlendMode,\n    FilterMode = Constants.FilterMode; // ----------------------------------------------------------------------------\n// vtkVolumeMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeMapper(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeMapper');\n\n  var superClass = _objectSpread({}, publicAPI);\n\n  publicAPI.getBounds = function () {\n    var input = publicAPI.getInputData();\n\n    if (!input) {\n      model.bounds = createUninitializedBounds();\n    } else {\n      if (!model.static) {\n        publicAPI.update();\n      }\n\n      model.bounds = input.getBounds();\n    }\n\n    return model.bounds;\n  };\n\n  publicAPI.update = function () {\n    publicAPI.getInputData();\n  };\n\n  publicAPI.setBlendModeToComposite = function () {\n    publicAPI.setBlendMode(BlendMode.COMPOSITE_BLEND);\n  };\n\n  publicAPI.setBlendModeToMaximumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MAXIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToMinimumIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.MINIMUM_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAverageIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.AVERAGE_INTENSITY_BLEND);\n  };\n\n  publicAPI.setBlendModeToAdditiveIntensity = function () {\n    publicAPI.setBlendMode(BlendMode.ADDITIVE_INTENSITY_BLEND);\n  };\n\n  publicAPI.getBlendModeAsString = function () {\n    return macro.enumToString(BlendMode, model.blendMode);\n  };\n\n  publicAPI.setAverageIPScalarRange = function (min, max) {\n    console.warn('setAverageIPScalarRange is deprecated use setIpScalarRange');\n    publicAPI.setIpScalarRange(min, max);\n  };\n\n  publicAPI.getFilterModeAsString = function () {\n    return macro.enumToString(FilterMode, model.filterMode);\n  };\n\n  publicAPI.setFilterModeToOff = function () {\n    publicAPI.setFilterMode(FilterMode.OFF);\n  };\n\n  publicAPI.setFilterModeToNormalized = function () {\n    publicAPI.setFilterMode(FilterMode.NORMALIZED);\n  };\n\n  publicAPI.setFilterModeToRaw = function () {\n    publicAPI.setFilterMode(FilterMode.RAW);\n  };\n\n  publicAPI.setGlobalIlluminationReach = function (gl) {\n    return superClass.setGlobalIlluminationReach(clampValue(gl, 0.0, 1.0));\n  };\n\n  publicAPI.setVolumetricScatteringBlending = function (vsb) {\n    return superClass.setVolumetricScatteringBlending(clampValue(vsb, 0.0, 1.0));\n  };\n\n  publicAPI.setVolumeShadowSamplingDistFactor = function (vsdf) {\n    return superClass.setVolumeShadowSamplingDistFactor(vsdf >= 1.0 ? vsdf : 1.0);\n  };\n\n  publicAPI.setAnisotropy = function (at) {\n    return superClass.setAnisotropy(clampValue(at, -0.99, 0.99));\n  };\n\n  publicAPI.setLAOKernelSize = function (ks) {\n    return superClass.setLAOKernelSize(floor(clampValue(ks, 1, 32)));\n  };\n\n  publicAPI.setLAOKernelRadius = function (kr) {\n    return superClass.setLAOKernelRadius(kr >= 1 ? kr : 1);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n// TODO: what values to use for averageIPScalarRange to get GLSL to use max / min values like [-Math.inf, Math.inf]?\n\n\nvar DEFAULT_VALUES = {\n  bounds: [1, -1, 1, -1, 1, -1],\n  sampleDistance: 1.0,\n  imageSampleDistance: 1.0,\n  maximumSamplesPerRay: 1000,\n  autoAdjustSampleDistances: true,\n  blendMode: BlendMode.COMPOSITE_BLEND,\n  ipScalarRange: [-1000000.0, 1000000.0],\n  filterMode: FilterMode.OFF,\n  // ignored by WebGL so no behavior change\n  preferSizeOverAccuracy: false,\n  // Whether to use halfFloat representation of float, when it is inaccurate\n  computeNormalFromOpacity: false,\n  // volume shadow parameters\n  volumetricScatteringBlending: 0.0,\n  globalIlluminationReach: 0.0,\n  volumeShadowSamplingDistFactor: 5.0,\n  anisotropy: 0.0,\n  // local ambient occlusion\n  localAmbientOcclusion: false,\n  LAOKernelSize: 15,\n  LAOKernelRadius: 7\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkAbstractMapper.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['sampleDistance', 'imageSampleDistance', 'maximumSamplesPerRay', 'autoAdjustSampleDistances', 'blendMode', 'filterMode', 'preferSizeOverAccuracy', 'computeNormalFromOpacity', 'volumetricScatteringBlending', 'globalIlluminationReach', 'volumeShadowSamplingDistFactor', 'anisotropy', 'localAmbientOcclusion', 'LAOKernelSize', 'LAOKernelRadius']);\n  macro.setGetArray(publicAPI, model, ['ipScalarRange'], 2);\n  macro.event(publicAPI, model, 'lightingActivated'); // Object methods\n\n  vtkVolumeMapper(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkVolumeMapper'); // ----------------------------------------------------------------------------\n\nvar vtkVolumeMapper$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkVolumeMapper$1 as default, extend, newInstance };\n", "import d from \"./node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js\";export default d;\nexport * from \"./node_modules/@kitware/vtk.js/Rendering/Core/VolumeMapper.js\""],
  "mappings": "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",
  "names": []
}
