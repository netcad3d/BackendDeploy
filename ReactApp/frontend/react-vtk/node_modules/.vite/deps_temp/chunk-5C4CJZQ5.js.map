{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Rendering/Core/RenderWindow.js"],
  "sourcesContent": ["import macro from '../../macros.js';\n\nvar DEFAULT_VIEW_API = navigator.gpu ? 'WebGPU' : 'WebGL';\nvar VIEW_CONSTRUCTORS = Object.create(null); // ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n} // ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow'); // Add renderer\n\n  publicAPI.addRenderer = function (renderer) {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer); // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeRenderer = function (renderer) {\n    model.renderers = model.renderers.filter(function (r) {\n      return r !== renderer;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.hasRenderer = function (ren) {\n    return model.renderers.indexOf(ren) !== -1;\n  }; // get an API specific view of this data\n\n\n  publicAPI.newAPISpecificView = function (name) {\n    var initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  }; // Add renderer\n\n\n  publicAPI.addView = function (view) {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n\n    view.setRenderable(publicAPI);\n    model.views.push(view);\n    publicAPI.modified();\n  }; // Remove renderer\n\n\n  publicAPI.removeView = function (view) {\n    model.views = model.views.filter(function (r) {\n      return r !== view;\n    });\n    publicAPI.modified();\n  };\n\n  publicAPI.hasView = function (view) {\n    return model.views.indexOf(view) !== -1;\n  }; // handle any pre render initializations\n\n\n  publicAPI.preRender = function () {\n    model.renderers.forEach(function (ren) {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n\n  publicAPI.render = function () {\n    publicAPI.preRender();\n\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model.views.forEach(function (view) {\n        return view.traverseAllPasses();\n      });\n    }\n  };\n\n  publicAPI.getStatistics = function () {\n    var results = {\n      propCount: 0,\n      invisiblePropCount: 0\n    };\n    model.renderers.forEach(function (ren) {\n      var props = ren.getViewProps();\n      props.forEach(function (prop) {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          var mpr = prop.getMapper && prop.getMapper();\n\n          if (mpr && mpr.getPrimitiveCount) {\n            var pcount = mpr.getPrimitiveCount();\n            Object.keys(pcount).forEach(function (keyName) {\n              if (!results[keyName]) {\n                results[keyName] = 0;\n              }\n\n              results[keyName] += pcount[keyName];\n            });\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(function (keyName) {\n      return \"\".concat(keyName, \": \").concat(results[keyName]);\n    }).join('\\n');\n    return results;\n  };\n\n  publicAPI.captureImages = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model.views.map(function (view) {\n      return view.captureNextImage ? view.captureNextImage(format, opts) : undefined;\n    }).filter(function (i) {\n      return !!i;\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', 'views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.event(publicAPI, model, 'completion'); // Object methods\n\n  vtkRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderWindow'); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance: newInstance,\n  extend: extend,\n  registerViewConstructor: registerViewConstructor,\n  listViewAPIs: listViewAPIs,\n  newAPISpecificView: newAPISpecificView\n};\n\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };\n"],
  "mappings": "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",
  "names": []
}
