{
  "version": 3,
  "sources": ["../../@kitware/vtk.js/Common/Core/MatrixBuilder.js"],
  "sourcesContent": ["import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport { mat4, vec3, glMatrix } from 'gl-matrix';\nimport { a as areMatricesEqual } from './Math/index.js';\n\nvar NoOp = function NoOp(v) {\n  return v;\n};\n\nvar IDENTITY = mat4.identity(new Float64Array(16));\nvar EPSILON = 1e-6;\n\nvar Transform = /*#__PURE__*/function () {\n  function Transform() {\n    var useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, Transform);\n\n    this.matrix = mat4.identity(new Float64Array(16));\n    this.tmp = new Float64Array(3);\n    this.angleConv = useDegree ? glMatrix.toRadian : NoOp;\n  }\n\n  _createClass(Transform, [{\n    key: \"rotateFromDirections\",\n    value: function rotateFromDirections(originDirection, targetDirection) {\n      var src = new Float64Array(3);\n      var dst = new Float64Array(3);\n      var transf = new Float64Array(16);\n      vec3.set(src, originDirection[0], originDirection[1], originDirection[2]);\n      vec3.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\n      vec3.normalize(src, src);\n      vec3.normalize(dst, dst);\n      var cosAlpha = vec3.dot(src, dst);\n\n      if (cosAlpha >= 1) {\n        return this;\n      }\n\n      vec3.cross(this.tmp, src, dst);\n\n      if (vec3.length(this.tmp) < EPSILON) {\n        // cross product is 0, so pick arbitrary axis perpendicular\n        // to originDirection.\n        vec3.cross(this.tmp, [1, 0, 0], originDirection);\n\n        if (vec3.length(this.tmp) < EPSILON) {\n          vec3.cross(this.tmp, [0, 1, 0], originDirection);\n        }\n      }\n\n      mat4.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\n      mat4.multiply(this.matrix, this.matrix, transf);\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle, axis) {\n      vec3.set.apply(vec3, [this.tmp].concat(_toConsumableArray(axis)));\n      vec3.normalize(this.tmp, this.tmp);\n      mat4.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\n      return this;\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(angle) {\n      mat4.rotateX(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(angle) {\n      mat4.rotateY(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(angle) {\n      mat4.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(x, y, z) {\n      vec3.set(this.tmp, x, y, z);\n      mat4.translate(this.matrix, this.matrix, this.tmp);\n      return this;\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(sx, sy, sz) {\n      vec3.set(this.tmp, sx, sy, sz);\n      mat4.scale(this.matrix, this.matrix, this.tmp);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(mat4x4) {\n      mat4.multiply(this.matrix, this.matrix, mat4x4);\n      return this;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      mat4.identity(this.matrix);\n      return this;\n    } //-----------\n\n  }, {\n    key: \"apply\",\n    value: function apply(typedArray) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n      if (areMatricesEqual(IDENTITY, this.matrix)) {\n        // Make sure we can chain apply...\n        return this;\n      }\n\n      var size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\n\n      for (var i = offset; i < size; i += 3) {\n        vec3.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\n        vec3.transformMat4(this.tmp, this.tmp, this.matrix);\n        typedArray[i] = this.tmp[0];\n        typedArray[i + 1] = this.tmp[1];\n        typedArray[i + 2] = this.tmp[2];\n      } // Make sure we can chain apply...\n\n\n      return this;\n    }\n  }, {\n    key: \"getMatrix\",\n    value: function getMatrix() {\n      return this.matrix;\n    }\n  }, {\n    key: \"setMatrix\",\n    value: function setMatrix(mat4x4) {\n      if (!!mat4x4 && mat4x4.length === 16) {\n        mat4.copy(this.matrix, mat4x4);\n      }\n\n      return this;\n    }\n  }]);\n\n  return Transform;\n}();\n\nfunction buildFromDegree() {\n  return new Transform(true);\n}\n\nfunction buildFromRadian() {\n  return new Transform(false);\n}\n\nvar vtkMatrixBuilder = {\n  buildFromDegree: buildFromDegree,\n  buildFromRadian: buildFromRadian\n};\n\nexport { vtkMatrixBuilder as default };\n"],
  "mappings": "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",
  "names": ["NoOp", "Transform"]
}
