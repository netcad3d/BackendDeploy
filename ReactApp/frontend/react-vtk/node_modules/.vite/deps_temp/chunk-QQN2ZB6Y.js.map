{
  "version": 3,
  "sources": ["../../regenerator-runtime/runtime.js", "../../@babel/runtime/regenerator/index.js", "../../spark-md5/spark-md5.js", "../../@babel/runtime/helpers/esm/asyncToGenerator.js", "../../@kitware/vtk.js/Rendering/OpenGL/RenderWindow.js", "../../@kitware/vtk.js/Rendering/SceneGraph/RenderPass.js", "../../@kitware/vtk.js/Rendering/OpenGL/OrderIndependentTranslucentPass.js", "../../@kitware/vtk.js/Rendering/OpenGL/ForwardPass.js", "../../@kitware/vtk.js/Rendering/OpenGL/HardwareSelector.js", "../../@kitware/vtk.js/Rendering/Core/HardwareSelector.js", "../../@kitware/vtk.js/Common/DataModel/SelectionNode/Constants.js", "../../@kitware/vtk.js/Common/DataModel/SelectionNode.js", "../../@kitware/vtk.js/Rendering/OpenGL/ShaderCache.js", "../../@kitware/vtk.js/Rendering/OpenGL/TextureUnitManager.js", "../../@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js", "../../@kitware/vtk.js/Rendering/OpenGL/RenderWindow/ContextProxy.js", "../../@kitware/vtk.js/Rendering/WebGPU/RenderWindow.js", "../../@kitware/vtk.js/Rendering/WebGPU/RenderEncoder.js", "../../@kitware/vtk.js/Rendering/WebGPU/OpaquePass.js", "../../@kitware/vtk.js/Rendering/WebGPU/OrderIndependentTranslucentPass.js", "../../@kitware/vtk.js/Rendering/WebGPU/VolumePassFSQ.js", "../../@kitware/vtk.js/Rendering/WebGPU/VolumePass.js", "../../@kitware/vtk.js/Rendering/WebGPU/ForwardPass.js", "../../@kitware/vtk.js/Rendering/WebGPU/TextureManager.js", "../../@kitware/vtk.js/Rendering/WebGPU/Device.js", "../../@kitware/vtk.js/Rendering/WebGPU/HardwareSelector.js", "../../@kitware/vtk.js/Rendering/WebGPU/HardwareSelectionPass.js"],
  "sourcesContent": ["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "module.exports = require(\"regenerator-runtime\");\n", "(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n", "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}", "import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkHardwareSelector from './HardwareSelector.js';\nimport vtkShaderCache from './ShaderCache.js';\nimport vtkTextureUnitManager from './TextureUnitManager.js';\nimport vtkViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport { createContextProxyHandler } from './RenderWindow/ContextProxy.js';\n\nvar vtkDebugMacro = macro.vtkDebugMacro,\n    vtkErrorMacro = macro.vtkErrorMacro;\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n};\nvar DEFAULT_RESET_FACTORS = {\n  vr: {\n    rescaleFactor: 1.0,\n    translateZ: -0.7 // 0.7 m forward from the camera\n\n  },\n  ar: {\n    rescaleFactor: 0.25,\n    // scale down AR for viewing comfort by default\n    translateZ: -0.5 // 0.5 m forward from the camera\n\n  }\n};\n\nfunction checkRenderTargetSupport(gl, format, type) {\n  // create temporary frame buffer and texture\n  var framebuffer = gl.createFramebuffer();\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, format, 2, 2, 0, format, type, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); // check frame buffer status\n\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER); // clean up\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return status === gl.FRAMEBUFFER_COMPLETE;\n} // ----------------------------------------------------------------------------\n// Monitor the usage of GL context across vtkOpenGLRenderWindow instances\n// ----------------------------------------------------------------------------\n\n\nvar GL_CONTEXT_COUNT = 0;\nvar GL_CONTEXT_LISTENERS = [];\n\nfunction createGLContext() {\n  GL_CONTEXT_COUNT++;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction deleteGLContext() {\n  GL_CONTEXT_COUNT--;\n  GL_CONTEXT_LISTENERS.forEach(function (cb) {\n    return cb(GL_CONTEXT_COUNT);\n  });\n}\n\nfunction pushMonitorGLContextCount(cb) {\n  GL_CONTEXT_LISTENERS.push(cb);\n}\nfunction popMonitorGLContextCount(cb) {\n  return GL_CONTEXT_LISTENERS.pop();\n} // ----------------------------------------------------------------------------\n// vtkOpenGLRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLRenderWindow');\n  var cachingContextHandler = createContextProxyHandler();\n\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // prevent default context lost handler\n\n\n  model.canvas.addEventListener('webglcontextlost', function (event) {\n    event.preventDefault();\n  }, false);\n  model.canvas.addEventListener('webglcontextrestored', publicAPI.restoreContext, false); // Cache the value here as calling it on each frame is expensive\n\n  var isImmersiveVrSupported = navigator.xr !== undefined && navigator.xr.isSessionSupported('immersive-vr'); // Auto update style\n\n  var previousSize = [0, 0];\n\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n      }\n    } // ImageStream size\n\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n\n    model.containerSize = null;\n  }\n\n  publicAPI.onModified(updateWindow); // Builds myself.\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n      model.children.forEach(function (child) {\n        child.setOpenGLRenderWindow(publicAPI);\n      });\n    }\n  };\n\n  publicAPI.initialize = function () {\n    if (!model.initialized) {\n      model.context = publicAPI.get3DContext();\n      model.textureUnitManager = vtkTextureUnitManager.newInstance();\n      model.textureUnitManager.setContext(model.context);\n      model.shaderCache.setContext(model.context); // initialize blending for transparency\n\n      var gl = model.context;\n      gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.depthFunc(gl.LEQUAL);\n      gl.enable(gl.BLEND);\n      model.initialized = true;\n    }\n  };\n\n  publicAPI.makeCurrent = function () {\n    model.context.makeCurrent();\n  };\n\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n          width = _model$el$getBounding.width,\n          height = _model$el$getBounding.height;\n\n      model.containerSize = [width, height];\n    }\n\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = function () {\n    if (model.activeFramebuffer) {\n      return model.activeFramebuffer.getSize();\n    }\n\n    return model.size;\n  };\n\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    var pixels = new Uint8Array((x2 - x1 + 1) * (y2 - y1 + 1) * 4);\n    model.context.readPixels(x1, y1, x2 - x1 + 1, y2 - y1 + 1, model.context.RGBA, model.context.UNSIGNED_BYTE, pixels);\n    return pixels;\n  };\n\n  publicAPI.get3DContext = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      preserveDrawingBuffer: false,\n      depth: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    };\n    var result = null; // Do we have webxr support\n\n    if (isImmersiveVrSupported) {\n      publicAPI.invokeHaveVRDisplay();\n    }\n\n    var webgl2Supported = typeof WebGL2RenderingContext !== 'undefined';\n    model.webgl2 = false;\n\n    if (model.defaultToWebgl2 && webgl2Supported) {\n      result = model.canvas.getContext('webgl2', options);\n\n      if (result) {\n        model.webgl2 = true;\n        vtkDebugMacro('using webgl2');\n      }\n    }\n\n    if (!result) {\n      vtkDebugMacro('using webgl1');\n      result = model.canvas.getContext('webgl', options) || model.canvas.getContext('experimental-webgl', options);\n    }\n\n    return new Proxy(result, cachingContextHandler);\n  }; // Request an XR session on the user device with WebXR,\n  // typically in response to a user request such as a button press\n\n\n  publicAPI.startXR = function (isAR) {\n    if (navigator.xr === undefined) {\n      throw new Error('WebXR is not available');\n    }\n\n    model.xrSessionIsAR = isAR;\n    var sessionType = isAR ? 'immersive-ar' : 'immersive-vr';\n\n    if (!navigator.xr.isSessionSupported(sessionType)) {\n      if (isAR) {\n        throw new Error('Device does not support AR session');\n      } else {\n        throw new Error('VR display is not available');\n      }\n    }\n\n    if (model.xrSession === null) {\n      navigator.xr.requestSession(sessionType).then(publicAPI.enterXR, function () {\n        throw new Error('Failed to create XR session!');\n      });\n    } else {\n      throw new Error('XR Session already exists!');\n    }\n  }; // When an XR session is available, set up the XRWebGLLayer\n  // and request the first animation frame for the device\n\n\n  publicAPI.enterXR = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(xrSession) {\n      var gl, glLayer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              model.xrSession = xrSession;\n              model.oldCanvasSize = model.size.slice();\n\n              if (!(model.xrSession !== null)) {\n                _context.next = 15;\n                break;\n              }\n\n              gl = publicAPI.get3DContext();\n              _context.next = 6;\n              return gl.makeXRCompatible();\n\n            case 6:\n              glLayer = new global.XRWebGLLayer(model.xrSession, gl);\n              publicAPI.setSize(glLayer.framebufferWidth, glLayer.framebufferHeight);\n              model.xrSession.updateRenderState({\n                baseLayer: glLayer\n              });\n              model.xrSession.requestReferenceSpace('local').then(function (refSpace) {\n                model.xrReferenceSpace = refSpace;\n              });\n              publicAPI.resetXRScene();\n              model.renderable.getInteractor().switchToXRAnimation();\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              _context.next = 16;\n              break;\n\n            case 15:\n              throw new Error('Failed to enter VR with a null xrSession.');\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.resetXRScene = function () {\n    var inputRescaleFactor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESET_FACTORS.vr.rescaleFactor;\n    var inputTranslateZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RESET_FACTORS.vr.translateZ;\n    // Adjust world-to-physical parameters for different modalities\n    // Default parameter values are for VR (model.xrSessionIsAR == false)\n    var rescaleFactor = inputRescaleFactor;\n    var translateZ = inputTranslateZ;\n\n    if (model.xrSessionIsAR && rescaleFactor === DEFAULT_RESET_FACTORS.vr.rescaleFactor) {\n      // Scale down by default in AR\n      rescaleFactor = DEFAULT_RESET_FACTORS.ar.rescaleFactor;\n    }\n\n    if (model.xrSessionIsAR && translateZ === DEFAULT_RESET_FACTORS.vr.translateZ) {\n      // Default closer to the camera in AR\n      translateZ = DEFAULT_RESET_FACTORS.ar.translateZ;\n    }\n\n    var ren = model.renderable.getRenderers()[0];\n    ren.resetCamera();\n    var camera = ren.getActiveCamera();\n    var physicalScale = camera.getPhysicalScale();\n    var physicalTranslation = camera.getPhysicalTranslation();\n    physicalScale /= rescaleFactor;\n    translateZ *= physicalScale;\n    physicalTranslation[2] += translateZ;\n    camera.setPhysicalScale(physicalScale);\n    camera.setPhysicalTranslation(physicalTranslation); // Clip at 0.1m, 100.0m in physical space by default\n\n    camera.setClippingRange(0.1 * physicalScale, 100.0 * physicalScale);\n  };\n\n  publicAPI.stopXR = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var gl, ren;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(navigator.xr === undefined)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            if (!(model.xrSession !== null)) {\n              _context2.next = 10;\n              break;\n            }\n\n            model.xrSession.cancelAnimationFrame(model.xrSceneFrame);\n            model.renderable.getInteractor().returnFromXRAnimation();\n            gl = publicAPI.get3DContext();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            _context2.next = 9;\n            return model.xrSession.end().catch(function (error) {\n              if (!(error instanceof DOMException)) {\n                throw error;\n              }\n            });\n\n          case 9:\n            model.xrSession = null;\n\n          case 10:\n            if (model.oldCanvasSize !== undefined) {\n              publicAPI.setSize.apply(publicAPI, _toConsumableArray(model.oldCanvasSize));\n            } // Reset to default canvas\n\n\n            ren = model.renderable.getRenderers()[0];\n            ren.getActiveCamera().setProjectionMatrix(null);\n            ren.resetCamera();\n            ren.setViewport(0.0, 0, 1.0, 1.0);\n            publicAPI.traverseAllPasses();\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  publicAPI.xrRender = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(t, frame) {\n      var xrSession, xrPose, gl, glLayer, ren;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              xrSession = frame.session;\n              model.renderable.getInteractor().updateXRGamepads(xrSession, frame, model.xrReferenceSpace);\n              model.xrSceneFrame = model.xrSession.requestAnimationFrame(publicAPI.xrRender);\n              xrPose = frame.getViewerPose(model.xrReferenceSpace);\n\n              if (xrPose) {\n                gl = publicAPI.get3DContext();\n\n                if (model.xrSessionIsAR && model.oldCanvasSize !== undefined) {\n                  gl.canvas.width = model.oldCanvasSize[0];\n                  gl.canvas.height = model.oldCanvasSize[1];\n                }\n\n                glLayer = xrSession.renderState.baseLayer;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, glLayer.framebuffer);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                gl.clear(gl.DEPTH_BUFFER_BIT); // get the first renderer\n\n                ren = model.renderable.getRenderers()[0]; // Do a render pass for each eye\n\n                xrPose.views.forEach(function (view) {\n                  var viewport = glLayer.getViewport(view);\n                  gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height); // TODO: Appropriate handling for AR passthrough on HMDs\n                  // with two eyes will require further investigation.\n\n                  if (!model.xrSessionIsAR) {\n                    if (view.eye === 'left') {\n                      ren.setViewport(0, 0, 0.5, 1.0);\n                    } else if (view.eye === 'right') {\n                      ren.setViewport(0.5, 0, 1.0, 1.0);\n                    } else {\n                      // No handling for non-eye viewport\n                      return;\n                    }\n                  }\n\n                  ren.getActiveCamera().computeViewParametersFromPhysicalMatrix(view.transform.inverse.matrix);\n                  ren.getActiveCamera().setProjectionMatrix(view.projectionMatrix);\n                  publicAPI.traverseAllPasses();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.restoreContext = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n  };\n\n  publicAPI.activateTexture = function (texture) {\n    // Only add if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      model.context.activeTexture(model.context.TEXTURE0 + result);\n      return;\n    }\n\n    var activeUnit = publicAPI.getTextureUnitManager().allocate();\n\n    if (activeUnit < 0) {\n      vtkErrorMacro('Hardware does not support the number of textures defined.');\n      return;\n    }\n\n    model._textureResourceIds.set(texture, activeUnit);\n\n    model.context.activeTexture(model.context.TEXTURE0 + activeUnit);\n  };\n\n  publicAPI.deactivateTexture = function (texture) {\n    // Only deactivate if it isn't already there\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      publicAPI.getTextureUnitManager().free(result);\n      delete model._textureResourceIds.delete(texture);\n    }\n  };\n\n  publicAPI.getTextureUnitForTexture = function (texture) {\n    var result = model._textureResourceIds.get(texture);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    return -1;\n  };\n\n  publicAPI.getDefaultTextureInternalFormat = function (vtktype, numComps, useFloat) {\n    if (model.webgl2) {\n      switch (vtktype) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          switch (numComps) {\n            case 1:\n              return model.context.R8;\n\n            case 2:\n              return model.context.RG8;\n\n            case 3:\n              return model.context.RGB8;\n\n            case 4:\n            default:\n              return model.context.RGBA8;\n          }\n\n        case VtkDataTypes.FLOAT:\n        default:\n          switch (numComps) {\n            case 1:\n              return model.context.R16F;\n\n            case 2:\n              return model.context.RG16F;\n\n            case 3:\n              return model.context.RGB16F;\n\n            case 4:\n            default:\n              return model.context.RGBA16F;\n          }\n\n      }\n    } // webgl1 only supports four types\n\n\n    switch (numComps) {\n      case 1:\n        return model.context.LUMINANCE;\n\n      case 2:\n        return model.context.LUMINANCE_ALPHA;\n\n      case 3:\n        return model.context.RGB;\n\n      case 4:\n      default:\n        return model.context.RGBA;\n    }\n  };\n\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL() {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : model.imageFormat;\n    // Copy current canvas to not modify the original\n    var temporaryCanvas = document.createElement('canvas');\n    var temporaryContext = temporaryCanvas.getContext('2d');\n    temporaryCanvas.width = model.canvas.width;\n    temporaryCanvas.height = model.canvas.height;\n    temporaryContext.drawImage(model.canvas, 0, 0); // Get current client rect to place canvas\n\n    var mainBoundingClientRect = model.canvas.getBoundingClientRect();\n    var renderWindow = model.renderable;\n    var renderers = renderWindow.getRenderers();\n    renderers.forEach(function (renderer) {\n      var viewProps = renderer.getViewProps();\n      viewProps.forEach(function (viewProp) {\n        // Check if the prop has a container that should have canvas\n        if (viewProp.getContainer) {\n          var container = viewProp.getContainer();\n          var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n          for (var i = 0; i < canvasList.length; i++) {\n            var currentCanvas = canvasList[i];\n            var boundingClientRect = currentCanvas.getBoundingClientRect();\n            var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n            var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n            temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n          }\n        }\n      });\n    });\n    var screenshot = temporaryCanvas.toDataURL(format);\n    temporaryCanvas.remove();\n    publicAPI.invokeImageReady(screenshot);\n  }\n\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref4$resetCamera = _ref4.resetCamera,\n        resetCamera = _ref4$resetCamera === void 0 ? false : _ref4$resetCamera,\n        _ref4$size = _ref4.size,\n        size = _ref4$size === void 0 ? null : _ref4$size,\n        _ref4$scale = _ref4.scale,\n        scale = _ref4$scale === void 0 ? 1 : _ref4$scale;\n\n    if (model.deleted) {\n      return null;\n    }\n\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref5) {\n                var restoreParamsFn = _ref5.restoreParamsFn,\n                    arg = _ref5.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n\n            model._screenshot.placeHolder.remove();\n\n            model._screenshot = null;\n          }\n\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref6) {\n              var resetCameraFn = _ref6.resetCameraFn,\n                  resetCameraArgs = _ref6.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n\n  var hardwareMaximumLineWidth;\n\n  publicAPI.getHardwareMaximumLineWidth = function () {\n    // We cache the result of this function because `getParameter` is slow\n    if (hardwareMaximumLineWidth != null) {\n      return hardwareMaximumLineWidth;\n    }\n\n    var gl = publicAPI.get3DContext();\n    var lineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\n    hardwareMaximumLineWidth = lineWidthRange[1];\n    return lineWidthRange[1];\n  };\n\n  publicAPI.getGLInformations = function () {\n    var gl = publicAPI.get3DContext();\n    var glTextureFloat = gl.getExtension('OES_texture_float');\n    var glTextureHalfFloat = gl.getExtension('OES_texture_half_float');\n    var glDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info');\n    var glDrawBuffers = gl.getExtension('WEBGL_draw_buffers');\n    var glAnisotropic = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n    var params = [['Max Vertex Attributes', 'MAX_VERTEX_ATTRIBS', gl.getParameter(gl.MAX_VERTEX_ATTRIBS)], ['Max Varying Vectors', 'MAX_VARYING_VECTORS', gl.getParameter(gl.MAX_VARYING_VECTORS)], ['Max Vertex Uniform Vectors', 'MAX_VERTEX_UNIFORM_VECTORS', gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)], ['Max Fragment Uniform Vectors', 'MAX_FRAGMENT_UNIFORM_VECTORS', gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)], ['Max Fragment Texture Image Units', 'MAX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)], ['Max Vertex Texture Image Units', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)], ['Max Combined Texture Image Units', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS', gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS)], ['Max 2D Texture Size', 'MAX_TEXTURE_SIZE', gl.getParameter(gl.MAX_TEXTURE_SIZE)], ['Max Cube Texture Size', 'MAX_CUBE_MAP_TEXTURE_SIZE', gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)], ['Max Texture Anisotropy', 'MAX_TEXTURE_MAX_ANISOTROPY_EXT', glAnisotropic && gl.getParameter(glAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)], ['Point Size Range', 'ALIASED_POINT_SIZE_RANGE', gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE).join(' - ')], ['Line Width Range', 'ALIASED_LINE_WIDTH_RANGE', gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE).join(' - ')], ['Max Viewport Dimensions', 'MAX_VIEWPORT_DIMS', gl.getParameter(gl.MAX_VIEWPORT_DIMS).join(' - ')], ['Max Renderbuffer Size', 'MAX_RENDERBUFFER_SIZE', gl.getParameter(gl.MAX_RENDERBUFFER_SIZE)], ['Framebuffer Red Bits', 'RED_BITS', gl.getParameter(gl.RED_BITS)], ['Framebuffer Green Bits', 'GREEN_BITS', gl.getParameter(gl.GREEN_BITS)], ['Framebuffer Blue Bits', 'BLUE_BITS', gl.getParameter(gl.BLUE_BITS)], ['Framebuffer Alpha Bits', 'ALPHA_BITS', gl.getParameter(gl.ALPHA_BITS)], ['Framebuffer Depth Bits', 'DEPTH_BITS', gl.getParameter(gl.DEPTH_BITS)], ['Framebuffer Stencil Bits', 'STENCIL_BITS', gl.getParameter(gl.STENCIL_BITS)], ['Framebuffer Subpixel Bits', 'SUBPIXEL_BITS', gl.getParameter(gl.SUBPIXEL_BITS)], ['MSAA Samples', 'SAMPLES', gl.getParameter(gl.SAMPLES)], ['MSAA Sample Buffers', 'SAMPLE_BUFFERS', gl.getParameter(gl.SAMPLE_BUFFERS)], ['Supported Formats for UByte Render Targets     ', 'UNSIGNED_BYTE RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.UNSIGNED_BYTE) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.UNSIGNED_BYTE) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.UNSIGNED_BYTE) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.UNSIGNED_BYTE) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Half Float Render Targets', 'HALF FLOAT RENDER TARGET FORMATS', [glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGBA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGBA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.RGB, glTextureHalfFloat.HALF_FLOAT_OES) ? 'RGB' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'ALPHA' : '', glTextureHalfFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, glTextureHalfFloat.HALF_FLOAT_OES) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Supported Formats for Full Float Render Targets', 'FLOAT RENDER TARGET FORMATS', [glTextureFloat && checkRenderTargetSupport(gl, gl.RGBA, gl.FLOAT) ? 'RGBA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.RGB, gl.FLOAT) ? 'RGB' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE, gl.FLOAT) ? 'LUMINANCE' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.ALPHA, gl.FLOAT) ? 'ALPHA' : '', glTextureFloat && checkRenderTargetSupport(gl, gl.LUMINANCE_ALPHA, gl.FLOAT) ? 'LUMINANCE_ALPHA' : ''].join(' ')], ['Max Multiple Render Targets Buffers', 'MAX_DRAW_BUFFERS_WEBGL', glDrawBuffers ? gl.getParameter(glDrawBuffers.MAX_DRAW_BUFFERS_WEBGL) : 0], ['High Float Precision in Vertex Shader', 'HIGH_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Vertex Shader', 'MEDIUM_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Vertex Shader', 'LOW_FLOAT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Float Precision in Fragment Shader', 'HIGH_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).rangeMax, '</sup>)'].join('')], ['Medium Float Precision in Fragment Shader', 'MEDIUM_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).rangeMax, '</sup>)'].join('')], ['Low Float Precision in Fragment Shader', 'LOW_FLOAT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Vertex Shader', 'HIGH_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Vertex Shader', 'MEDIUM_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Vertex Shader', 'LOW_INT VERTEX_SHADER', [gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['High Int Precision in Fragment Shader', 'HIGH_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT).rangeMax, '</sup>)'].join('')], ['Medium Int Precision in Fragment Shader', 'MEDIUM_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT).rangeMax, '</sup>)'].join('')], ['Low Int Precision in Fragment Shader', 'LOW_INT FRAGMENT_SHADER', [gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).precision, ' (-2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMin, '</sup> - 2<sup>', gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT).rangeMax, '</sup>)'].join('')], ['Supported Extensions', 'EXTENSIONS', gl.getSupportedExtensions().join('<br/>\\t\\t\\t\\t\\t    ')], ['WebGL Renderer', 'RENDERER', gl.getParameter(gl.RENDERER)], ['WebGL Vendor', 'VENDOR', gl.getParameter(gl.VENDOR)], ['WebGL Version', 'VERSION', gl.getParameter(gl.VERSION)], ['Shading Language Version', 'SHADING_LANGUAGE_VERSION', gl.getParameter(gl.SHADING_LANGUAGE_VERSION)], ['Unmasked Renderer', 'UNMASKED_RENDERER', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_RENDERER_WEBGL)], ['Unmasked Vendor', 'UNMASKED_VENDOR', glDebugRendererInfo && gl.getParameter(glDebugRendererInfo.UNMASKED_VENDOR_WEBGL)], ['WebGL Version', 'WEBGL_VERSION', model.webgl2 ? 2 : 1]];\n    var result = {};\n\n    while (params.length) {\n      var _params$pop = params.pop(),\n          _params$pop2 = _slicedToArray(_params$pop, 3),\n          label = _params$pop2[0],\n          key = _params$pop2[1],\n          value = _params$pop2[2];\n\n      if (key) {\n        result[key] = {\n          label: label,\n          value: value\n        };\n      }\n    }\n\n    return result;\n  };\n\n  publicAPI.traverseAllPasses = function () {\n    if (model.renderPasses) {\n      for (var index = 0; index < model.renderPasses.length; ++index) {\n        model.renderPasses[index].traverse(publicAPI, null);\n      }\n    }\n\n    if (model.notifyStartCaptureImage) {\n      getCanvasDataURL();\n    }\n  };\n\n  publicAPI.disableCullFace = function () {\n    if (model.cullFaceEnabled) {\n      model.context.disable(model.context.CULL_FACE);\n      model.cullFaceEnabled = false;\n    }\n  };\n\n  publicAPI.enableCullFace = function () {\n    if (!model.cullFaceEnabled) {\n      model.context.enable(model.context.CULL_FACE);\n      model.cullFaceEnabled = true;\n    }\n  };\n\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n\n    model.viewStream = stream;\n\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.createSelector = function () {\n    var ret = vtkHardwareSelector.newInstance();\n    ret.setOpenGLRenderWindow(publicAPI);\n    return ret;\n  };\n\n  publicAPI.delete = macro.chain(publicAPI.delete, publicAPI.setViewStream, deleteGLContext);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  cullFaceEnabled: false,\n  shaderCache: null,\n  initialized: false,\n  context: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  textureUnitManager: null,\n  textureResourceIds: null,\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  webgl2: false,\n  defaultToWebgl2: true,\n  // attempt webgl2 on by default\n  activeFramebuffer: null,\n  xrSession: null,\n  xrSessionIsAR: false,\n  xrReferenceSpace: null,\n  xrSupported: true,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%';\n  createGLContext();\n\n  if (!model.selector) {\n    model.selector = vtkHardwareSelector.newInstance();\n    model.selector.setOpenGLRenderWindow(publicAPI);\n  } // Create internal bgImage\n\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1';\n  model._textureResourceIds = new Map();\n  model.myFactory = vtkViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  model.shaderCache = vtkShaderCache.newInstance();\n  model.shaderCache.setOpenGLRenderWindow(publicAPI); // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'haveVRDisplay'); // Build VTK API\n\n  macro.get(publicAPI, model, ['shaderCache', 'textureUnitManager', 'webgl2', 'vrDisplay', 'useBackgroundImage', 'xrSupported']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'renderPasses', 'notifyStartCaptureImage', 'defaultToWebgl2', 'cursor', 'useOffScreen', // might want to make this not call modified as\n  // we change the active framebuffer a lot. Or maybe\n  // only mark modified if the size or depth\n  // of the buffer has changed\n  'activeFramebuffer']);\n  macro.setGetArray(publicAPI, model, ['size'], 2); // Object methods\n\n  vtkOpenGLRenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLRenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGL', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend,\n  pushMonitorGLContextCount: pushMonitorGLContextCount,\n  popMonitorGLContextCount: popMonitorGLContextCount\n};\n\nexport { vtkRenderWindow as default, extend, newInstance, popMonitorGLContextCount, pushMonitorGLContextCount };\n", "import macro from '../../macros.js';\n\nfunction vtkRenderPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderPass');\n\n  publicAPI.getOperation = function () {\n    return model.currentOperation;\n  };\n\n  publicAPI.setCurrentOperation = function (val) {\n    model.currentOperation = val;\n    model.currentTraverseOperation = \"traverse\".concat(macro.capitalize(model.currentOperation));\n  };\n\n  publicAPI.getTraverseOperation = function () {\n    return model.currentTraverseOperation;\n  }; // by default this class will traverse all of its\n  // preDelegateOperations, then call its delegate render passes\n  // the traverse all of its postDelegateOperations\n  // any of those three arrays can be empty\n\n\n  publicAPI.traverse = function (viewNode) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent;\n    model.preDelegateOperations.forEach(function (val) {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n    model.delegates.forEach(function (val) {\n      val.traverse(viewNode, publicAPI);\n    });\n    model.postDelegateOperations.forEach(function (val) {\n      publicAPI.setCurrentOperation(val);\n      viewNode.traverse(publicAPI);\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  delegates: [],\n  currentOperation: null,\n  preDelegateOperations: [],\n  postDelegateOperations: [],\n  currentParent: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['currentOperation']);\n  macro.setGet(publicAPI, model, ['delegates', 'currentParent', 'preDelegateOperations', 'postDelegateOperations']); // Object methods\n\n  vtkRenderPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderPass'); // ----------------------------------------------------------------------------\n\nvar vtkRenderPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderPass$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkOpenGLTexture from './Texture.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkHelper from './Helper.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkShaderProgram from './ShaderProgram.js';\nimport vtkVertexArrayObject from './VertexArrayObject.js';\n\nvar Representation = vtkProperty.Representation;\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n\nfunction translucentShaderReplacement(shaders) {\n  var substituteRes = vtkShaderProgram.substitute(shaders.Fragment, '//VTK::RenderPassFragmentShader::Impl', \"\\n      float weight = gl_FragData[0].a * pow(max(1.1 - gl_FragCoord.z, 0.0), 2.0);\\n      gl_FragData[0] = vec4(gl_FragData[0].rgb*weight, gl_FragData[0].a);\\n      gl_FragData[1].r = weight;\\n    \", false);\n  shaders.Fragment = substituteRes.result;\n}\n\nvar oitpFragTemplate = \"//VTK::System::Dec\\n\\nin vec2 tcoord;\\n\\nuniform sampler2D translucentRTexture;\\nuniform sampler2D translucentRGBATexture;\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\nvoid main()\\n{\\n  vec4 t1Color = texture(translucentRGBATexture, tcoord);\\n  float t2Color = texture(translucentRTexture, tcoord).r;\\n  gl_FragData[0] = vec4(t1Color.rgb/max(t2Color,0.01), 1.0 - t1Color.a);\\n}\\n\";\n\nfunction vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLOrderIndependentTranslucentPass'); // build vertices etc\n\n  publicAPI.createVertexBuffer = function () {\n    // 4 corner points in clipping space in order (x, y, z) where z is always set to -1\n    // prettier-ignore\n    var ptsArray = new Float32Array([-1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]); // 4 corresponding corner points in texture space in order (x, y)\n\n    var tcoordArray = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]); // a square defined as cell relation ship in order (cell_size, v1, v2, v3, v4)\n\n    var cellArray = new Uint16Array([4, 0, 1, 3, 2]);\n    var points = vtkDataArray.newInstance({\n      numberOfComponents: 3,\n      values: ptsArray\n    });\n    points.setName('points');\n    var tcoords = vtkDataArray.newInstance({\n      numberOfComponents: 2,\n      values: tcoordArray\n    });\n    tcoords.setName('tcoords');\n    var cells = vtkDataArray.newInstance({\n      numberOfComponents: 1,\n      values: cellArray\n    });\n    model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n      points: points,\n      tcoords: tcoords,\n      cellOffset: 0\n    });\n    model.VBOBuildTime.modified();\n  };\n\n  publicAPI.createFramebuffer = function (viewNode) {\n    var _model$framebuffer;\n\n    var size = viewNode.getSize();\n    var gl = viewNode.getContext();\n    model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n    model.framebuffer.setOpenGLRenderWindow(viewNode);\n\n    (_model$framebuffer = model.framebuffer).create.apply(_model$framebuffer, _toConsumableArray(size));\n\n    model.framebuffer.saveCurrentBindingsAndBuffers();\n    model.framebuffer.bind();\n    model.translucentRGBATexture = vtkOpenGLTexture.newInstance();\n    model.translucentRGBATexture.setInternalFormat(gl.RGBA16F);\n    model.translucentRGBATexture.setFormat(gl.RGBA);\n    model.translucentRGBATexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRGBATexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRGBATexture.create2DFromRaw(size[0], size[1], 4, 'Float32Array', null);\n    model.translucentRTexture = vtkOpenGLTexture.newInstance();\n    model.translucentRTexture.setInternalFormat(gl.R16F);\n    model.translucentRTexture.setFormat(gl.RED);\n    model.translucentRTexture.setOpenGLDataType(gl.HALF_FLOAT);\n    model.translucentRTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentRTexture.create2DFromRaw(size[0], size[1], 1, 'Float32Array', null);\n    model.translucentZTexture = vtkOpenGLTexture.newInstance();\n    model.translucentZTexture.setOpenGLRenderWindow(viewNode);\n    model.translucentZTexture.createDepthFromRaw(size[0], size[1], 'Float32Array', null);\n    model.framebuffer.setColorBuffer(model.translucentRGBATexture, 0);\n    model.framebuffer.setColorBuffer(model.translucentRTexture, 1);\n    model.framebuffer.setDepthBuffer(model.translucentZTexture);\n  };\n\n  publicAPI.createCopyShader = function (viewNode) {\n    model.copyShader = viewNode.getShaderCache().readyShaderProgramArray(['//VTK::System::Dec', 'attribute vec4 vertexDC;', 'attribute vec2 tcoordTC;', 'varying vec2 tcoord;', 'void main() { tcoord = tcoordTC; gl_Position = vertexDC; }'].join('\\n'), oitpFragTemplate, '');\n  };\n\n  publicAPI.createVBO = function (viewNode) {\n    var gl = viewNode.getContext();\n    model.tris.setOpenGLRenderWindow(viewNode);\n    publicAPI.createVertexBuffer();\n    var program = model.copyShader; // prepare the vertex and triangle data for the image plane to render to\n\n    model.tris.getCABO().bind();\n\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'vertexDC', model.tris.getCABO().getVertexOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 3, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n\n    if (!model.copyVAO.addAttributeArray(program, model.tris.getCABO(), 'tcoordTC', model.tris.getCABO().getTCoordOffset(), model.tris.getCABO().getStride(), gl.FLOAT, 2, gl.FALSE)) {\n      vtkErrorMacro('Error setting vertexDC in copy shader VAO.');\n    }\n  };\n\n  publicAPI.traverse = function (viewNode, renNode, forwardPass) {\n    if (model.deleted) {\n      return;\n    }\n\n    var size = viewNode.getSize();\n    var gl = viewNode.getContext(); // if we lack the webgl2 and half floatsupport just do\n    // basic alpha blending\n\n    model._supported = false;\n\n    if (renNode.getSelector() || !gl || !viewNode.getWebgl2() || !gl.getExtension('EXT_color_buffer_half_float') && !gl.getExtension('EXT_color_buffer_float')) {\n      publicAPI.setCurrentOperation('translucentPass');\n      renNode.traverse(publicAPI);\n      return;\n    }\n\n    model._supported = true; // prepare framebuffer // allocate framebuffer if needed and bind it\n\n    if (model.framebuffer === null) {\n      publicAPI.createFramebuffer(viewNode);\n    } else {\n      var fbSize = model.framebuffer.getSize();\n\n      if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.releaseGraphicsResources();\n        model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n        model.translucentRTexture.releaseGraphicsResources(viewNode);\n        model.translucentZTexture.releaseGraphicsResources(viewNode);\n        publicAPI.createFramebuffer(viewNode);\n      } else {\n        // store framebuffer bindings to restore them later\n        model.framebuffer.saveCurrentBindingsAndBuffers();\n        model.framebuffer.bind();\n      }\n    }\n\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0]);\n    gl.clearBufferfv(gl.DEPTH, 0, [1.0]);\n    gl.colorMask(false, false, false, false); // rerender the opaque pass to set the depth buffer\n    // TODO remove when webgl1 is deprecated and instead\n    // have the forward pass use a texture backed zbuffer\n\n    if (forwardPass.getOpaqueActorCount() > 0) {\n      forwardPass.setCurrentOperation('opaquePass');\n      renNode.traverse(forwardPass);\n    }\n\n    gl.colorMask(true, true, true, true);\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]); // make sure to clear the entire framebuffer as we will\n    // be blitting the entire thing all of it needs good initial values\n\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]);\n    gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n    gl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 0.0]);\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND); // basic gist is we accumulate color into RGB We compute final opacity\n    // into A We store accumulated opacity into R of the R texture.\n\n    gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA); // now do the translucent rendering\n\n    publicAPI.setCurrentOperation('translucentPass');\n    renNode.traverse(publicAPI);\n    gl.drawBuffers([gl.NONE]);\n    model.framebuffer.restorePreviousBindingsAndBuffers(); // gl.drawBuffers([gl.BACK]);\n    // make sure the copy shader is ready\n\n    if (model.copyShader === null) {\n      publicAPI.createCopyShader(viewNode);\n    } else {\n      viewNode.getShaderCache().readyShaderProgram(model.copyShader);\n    } // make sure we have a VAO\n\n\n    if (!model.copyVAO) {\n      model.copyVAO = vtkVertexArrayObject.newInstance();\n      model.copyVAO.setOpenGLRenderWindow(viewNode);\n    }\n\n    model.copyVAO.bind(); // make sure the VBO is up to date\n\n    if (model.VBOBuildTime.getMTime() < publicAPI.getMTime()) {\n      publicAPI.createVBO(viewNode);\n    }\n\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.depthMask(false);\n    gl.depthFunc(gl.ALWAYS);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.scissor(0, 0, size[0], size[1]); // activate texture\n\n    model.translucentRGBATexture.activate();\n    model.copyShader.setUniformi('translucentRGBATexture', model.translucentRGBATexture.getTextureUnit());\n    model.translucentRTexture.activate();\n    model.copyShader.setUniformi('translucentRTexture', model.translucentRTexture.getTextureUnit()); // render quad\n\n    gl.drawArrays(gl.TRIANGLES, 0, model.tris.getCABO().getElementCount());\n    gl.depthMask(true);\n    gl.depthFunc(gl.LEQUAL);\n    model.translucentRGBATexture.deactivate();\n    model.translucentRTexture.deactivate();\n  };\n\n  publicAPI.getShaderReplacement = function () {\n    if (model._supported) {\n      return translucentShaderReplacement;\n    }\n\n    return null;\n  };\n\n  publicAPI.releaseGraphicsResources = function (viewNode) {\n    if (model.framebuffer) {\n      model.framebuffer.releaseGraphicsResources(viewNode);\n      model.framebuffer = null;\n    }\n\n    if (model.translucentRGBATexture) {\n      model.translucentRGBATexture.releaseGraphicsResources(viewNode);\n      model.translucentRGBATexture = null;\n    }\n\n    if (model.translucentRTexture) {\n      model.translucentRTexture.releaseGraphicsResources(viewNode);\n      model.translucentRTexture = null;\n    }\n\n    if (model.translucentZTexture) {\n      model.translucentZTexture.releaseGraphicsResources(viewNode);\n      model.translucentZTexture = null;\n    }\n\n    if (model.copyVAO) {\n      model.copyVAO.releaseGraphicsResources(viewNode);\n      model.copyVAO = null;\n    }\n\n    if (model.copyShader) {\n      model.copyShader.releaseGraphicsResources(viewNode);\n      model.copyShader = null;\n    }\n\n    if (model.tris) {\n      model.tris.releaseGraphicsResources(viewNode);\n      model.tris = null;\n    }\n\n    publicAPI.modified();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  framebuffer: null,\n  copyShader: null,\n  tris: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  model.VBOBuildTime = {};\n  macro.obj(model.VBOBuildTime, {\n    mtime: 0\n  });\n  model.tris = vtkHelper.newInstance();\n  macro.get(publicAPI, model, ['framebuffer']); // Object methods\n\n  vtkOpenGLOrderIndependentTranslucentPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLOrderIndependentTranslucentPass'); // ----------------------------------------------------------------------------\n\nvar vtkOpenGLOrderIndependentTranslucentPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkOpenGLOrderIndependentTranslucentPass$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkOpenGLOrderIndependentTranslucentPass from './OrderIndependentTranslucentPass.js';\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (viewNode) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent; // build\n\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n    var numlayers = viewNode.getRenderable().getNumberOfLayers(); // iterate over renderers\n\n    var renderers = viewNode.getChildren();\n\n    for (var i = 0; i < numlayers; i++) {\n      for (var index = 0; index < renderers.length; index++) {\n        var renNode = renderers[index];\n        var ren = viewNode.getRenderable().getRenderers()[index];\n\n        if (ren.getDraw() && ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumeCount = 0;\n          model.overlayActorCount = 0;\n          publicAPI.setCurrentOperation('queryPass');\n          renNode.traverse(publicAPI); // do we need to capture a zbuffer?\n\n          if (model.opaqueActorCount > 0 && model.volumeCount > 0 || model.depthRequested) {\n            var size = viewNode.getFramebufferSize(); // make sure the framebuffer is setup\n\n            if (model.framebuffer === null) {\n              model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n            }\n\n            model.framebuffer.setOpenGLRenderWindow(viewNode);\n            model.framebuffer.saveCurrentBindingsAndBuffers();\n            var fbSize = model.framebuffer.getSize();\n\n            if (fbSize === null || fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n              model.framebuffer.create(size[0], size[1]);\n              model.framebuffer.populateFramebuffer();\n            }\n\n            model.framebuffer.bind();\n            publicAPI.setCurrentOperation('opaqueZBufferPass');\n            renNode.traverse(publicAPI);\n            model.framebuffer.restorePreviousBindingsAndBuffers(); // reset now that we have done it\n\n            model.depthRequested = false;\n          }\n\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI);\n\n          if (model.opaqueActorCount > 0) {\n            publicAPI.setCurrentOperation('opaquePass');\n            renNode.traverse(publicAPI);\n          }\n\n          if (model.translucentActorCount > 0) {\n            if (!model.translucentPass) {\n              model.translucentPass = vtkOpenGLOrderIndependentTranslucentPass.newInstance();\n            }\n\n            model.translucentPass.traverse(viewNode, renNode, publicAPI);\n          }\n\n          if (model.volumeCount > 0) {\n            publicAPI.setCurrentOperation('volumePass');\n            renNode.traverse(publicAPI);\n          }\n\n          if (model.overlayActorCount > 0) {\n            publicAPI.setCurrentOperation('overlayPass');\n            renNode.traverse(publicAPI);\n          }\n        }\n      }\n    }\n  };\n\n  publicAPI.getZBufferTexture = function () {\n    if (model.framebuffer) {\n      return model.framebuffer.getColorTexture();\n    }\n\n    return null;\n  };\n\n  publicAPI.requestDepth = function () {\n    model.depthRequested = true;\n  };\n\n  publicAPI.incrementOpaqueActorCount = function () {\n    return model.opaqueActorCount++;\n  };\n\n  publicAPI.incrementTranslucentActorCount = function () {\n    return model.translucentActorCount++;\n  };\n\n  publicAPI.incrementVolumeCount = function () {\n    return model.volumeCount++;\n  };\n\n  publicAPI.incrementOverlayActorCount = function () {\n    return model.overlayActorCount++;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumeCount: 0,\n  overlayActorCount: 0,\n  framebuffer: null,\n  depthRequested: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['framebuffer', 'opaqueActorCount', 'translucentActorCount', 'volumeCount']); // Object methods\n\n  vtkForwardPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkForwardPass'); // ----------------------------------------------------------------------------\n\nvar vtkForwardPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkForwardPass$1 as default, extend, newInstance };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport Constants from './HardwareSelector/Constants.js';\nimport vtkHardwareSelector$1 from '../Core/HardwareSelector.js';\nimport vtkOpenGLFramebuffer from './Framebuffer.js';\nimport vtkSelectionNode from '../../Common/DataModel/SelectionNode.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar PassTypes = Constants.PassTypes;\nvar SelectionContent = vtkSelectionNode.SelectionContent,\n    SelectionField = vtkSelectionNode.SelectionField;\nvar FieldAssociations = vtkDataSet.FieldAssociations;\nvar vtkErrorMacro = macro.vtkErrorMacro;\nvar idOffset = 1;\n\nfunction getInfoHash(info) {\n  return \"\".concat(info.propID, \" \").concat(info.compositeID);\n}\n\nfunction getAlpha(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n\n  var offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  return pb[offset + 3];\n}\n\nfunction convert(xx, yy, pb, area) {\n  if (!pb) {\n    return 0;\n  }\n\n  var offset = (yy * (area[2] - area[0] + 1) + xx) * 4;\n  var rgb = [];\n  rgb[0] = pb[offset];\n  rgb[1] = pb[offset + 1];\n  rgb[2] = pb[offset + 2];\n  var val = rgb[2];\n  val *= 256;\n  val += rgb[1];\n  val *= 256;\n  val += rgb[0];\n  return val;\n}\n\nfunction getID(low24, high8) {\n  /* eslint-disable no-bitwise */\n  var val = high8;\n  val <<= 24;\n  val |= low24;\n  return val;\n  /* eslint-enable no-bitwise */\n}\n\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\n  // Base case\n  var maxDist = maxDistance < 0 ? 0 : maxDistance;\n\n  if (maxDist === 0) {\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n\n    if (inDisplayPosition[0] < buffdata.area[0] || inDisplayPosition[0] > buffdata.area[2] || inDisplayPosition[1] < buffdata.area[1] || inDisplayPosition[1] > buffdata.area[3]) {\n      return null;\n    } // offset inDisplayPosition based on the lower-left-corner of the Area.\n\n\n    var displayPosition = [inDisplayPosition[0] - buffdata.area[0], inDisplayPosition[1] - buffdata.area[1]];\n    var actorid = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ACTOR_PASS], buffdata.area);\n\n    if (actorid <= 0 || actorid - idOffset >= buffdata.props.length) {\n      // the pixel did not hit any actor.\n      return null;\n    }\n\n    var _info = {};\n    _info.valid = true;\n    _info.propID = actorid - idOffset;\n    _info.prop = buffdata.props[_info.propID];\n    var compositeID = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], buffdata.area);\n\n    if (compositeID < 0 || compositeID > 0xffffff) {\n      compositeID = 0;\n    }\n\n    _info.compositeID = compositeID - idOffset;\n\n    if (buffdata.captureZValues) {\n      var offset = (displayPosition[1] * (buffdata.area[2] - buffdata.area[0] + 1) + displayPosition[0]) * 4;\n      _info.zValue = (256 * buffdata.zBuffer[offset] + buffdata.zBuffer[offset + 1]) / 65535.0;\n      _info.displayPosition = inDisplayPosition;\n    }\n\n    if (buffdata.pixBuffer[PassTypes.ID_LOW24]) {\n      if (getAlpha(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area) === 0.0) {\n        return _info;\n      }\n    }\n\n    var low24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_LOW24], buffdata.area);\n    var high24 = convert(displayPosition[0], displayPosition[1], buffdata.pixBuffer[PassTypes.ID_HIGH24], buffdata.area);\n    _info.attributeID = getID(low24, high24);\n    return _info;\n  } // Iterate over successively growing boxes.\n  // They recursively call the base case to handle single pixels.\n\n\n  var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n  var curPos = [0, 0];\n  var info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\n\n  if (info && info.valid) {\n    return info;\n  }\n\n  for (var dist = 1; dist < maxDist; ++dist) {\n    // Vertical sides of box.\n    for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n      curPos[1] = y;\n\n      if (dispPos[0] >= dist) {\n        curPos[0] = dispPos[0] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n\n      curPos[0] = dispPos[0] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        return info;\n      }\n    } // Horizontal sides of box.\n\n\n    for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n      curPos[0] = x;\n\n      if (dispPos[1] >= dist) {\n        curPos[1] = dispPos[1] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n\n      curPos[1] = dispPos[1] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        return info;\n      }\n    }\n  } // nothing hit.\n\n\n  outSelectedPosition[0] = inDisplayPosition[0];\n  outSelectedPosition[1] = inDisplayPosition[1];\n  return null;\n} //-----------------------------------------------------------------------------\n\n\nfunction convertSelection(fieldassociation, dataMap, captureZValues, renderer, openGLRenderWindow) {\n  var sel = [];\n  var count = 0;\n  dataMap.forEach(function (value, key) {\n    var child = vtkSelectionNode.newInstance();\n    child.setContentType(SelectionContent.INDICES);\n\n    switch (fieldassociation) {\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n        child.setFieldType(SelectionField.CELL);\n        break;\n\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n        child.setFieldType(SelectionField.POINT);\n        break;\n\n      default:\n        vtkErrorMacro('Unknown field association');\n    }\n\n    child.getProperties().propID = value.info.propID;\n    child.getProperties().prop = value.info.prop;\n    child.getProperties().compositeID = value.info.compositeID;\n    child.getProperties().attributeID = value.info.attributeID;\n    child.getProperties().pixelCount = value.pixelCount;\n\n    if (captureZValues) {\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\n      child.getProperties().worldPosition = openGLRenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, renderer);\n    }\n\n    child.setSelectionList(value.attributeIDs);\n    sel[count] = child;\n    count++;\n  });\n  return sel;\n} //----------------------------------------------------------------------------\n\n\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\n  var x1 = Math.floor(fx1);\n  var y1 = Math.floor(fy1);\n  var x2 = Math.floor(fx2);\n  var y2 = Math.floor(fy2);\n  var dataMap = new Map();\n  var outSelectedPosition = [0, 0];\n\n  for (var yy = y1; yy <= y2; yy++) {\n    for (var xx = x1; xx <= x2; xx++) {\n      var pos = [xx, yy];\n      var info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\n\n      if (info && info.valid) {\n        var hash = getInfoHash(info);\n\n        if (!dataMap.has(hash)) {\n          dataMap.set(hash, {\n            info: info,\n            pixelCount: 1,\n            attributeIDs: [info.attributeID]\n          });\n        } else {\n          var dmv = dataMap.get(hash);\n          dmv.pixelCount++;\n\n          if (buffdata.captureZValues) {\n            if (info.zValue < dmv.info.zValue) {\n              dmv.info = info;\n            }\n          }\n\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n            dmv.attributeIDs.push(info.attributeID);\n          }\n        }\n      }\n    }\n  }\n\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata.captureZValues, buffdata.renderer, buffdata.openGLRenderWindow);\n} // ----------------------------------------------------------------------------\n// vtkOpenGLHardwareSelector methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkOpenGLHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLHardwareSelector'); //----------------------------------------------------------------------------\n\n  publicAPI.releasePixBuffers = function () {\n    model.rawPixBuffer = [];\n    model.pixBuffer = [];\n    model.zBuffer = null;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.beginSelection = function () {\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer);\n    model.maxAttributeId = 0;\n\n    var size = model._openGLRenderWindow.getSize();\n\n    if (!model.framebuffer) {\n      model.framebuffer = vtkOpenGLFramebuffer.newInstance();\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()\n\n      model.framebuffer.populateFramebuffer();\n    } else {\n      model.framebuffer.setOpenGLRenderWindow(model._openGLRenderWindow);\n      model.framebuffer.saveCurrentBindingsAndBuffers();\n      var fbSize = model.framebuffer.getSize();\n\n      if (fbSize[0] !== size[0] || fbSize[1] !== size[1]) {\n        model.framebuffer.create(size[0], size[1]); // this calls model.framebuffer.bind()\n\n        model.framebuffer.populateFramebuffer();\n      } else {\n        model.framebuffer.bind();\n      }\n    }\n\n    model._openGLRenderer.clear();\n\n    model._openGLRenderer.setSelector(publicAPI);\n\n    model.hitProps = {};\n    model.propPixels = {};\n    model.props = [];\n    publicAPI.releasePixBuffers();\n\n    if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n      var gl = model._openGLRenderWindow.getContext();\n\n      var originalBlending = gl.isEnabled(gl.BLEND);\n      gl.disable(gl.BLEND);\n\n      model._openGLRenderWindow.traverseAllPasses();\n\n      model._renderer.setPreserveDepthBuffer(true);\n\n      if (originalBlending) {\n        gl.enable(gl.BLEND);\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.endSelection = function () {\n    model.hitProps = {};\n\n    model._openGLRenderer.setSelector(null);\n\n    model.framebuffer.restorePreviousBindingsAndBuffers();\n\n    model._renderer.setPreserveDepthBuffer(false);\n  };\n\n  publicAPI.preCapturePass = function () {\n    var gl = model._openGLRenderWindow.getContext(); // Disable blending\n\n\n    model.originalBlending = gl.isEnabled(gl.BLEND);\n    gl.disable(gl.BLEND);\n  };\n\n  publicAPI.postCapturePass = function () {\n    var gl = model._openGLRenderWindow.getContext(); // Restore blending if it was enabled prior to the capture\n\n\n    if (model.originalBlending) {\n      gl.enable(gl.BLEND);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.select = function () {\n    var sel = null;\n\n    if (publicAPI.captureBuffers()) {\n      sel = publicAPI.generateSelection(model.area[0], model.area[1], model.area[2], model.area[3]);\n      publicAPI.releasePixBuffers();\n    }\n\n    return sel;\n  };\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      var size, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // assign the renderer\n              model._renderer = renderer; // set area to all if no arguments provided\n\n              if (fx1 === undefined) {\n                size = model._openGLRenderWindow.getSize();\n                publicAPI.setArea(0, 0, size[0] - 1, size[1] - 1);\n              } else {\n                publicAPI.setArea(fx1, fy1, fx2, fy2);\n              } // just do capture buffers and package up the result\n\n\n              if (publicAPI.captureBuffers()) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 4:\n              result = {\n                area: _toConsumableArray(model.area),\n                pixBuffer: _toConsumableArray(model.pixBuffer),\n                captureZValues: model.captureZValues,\n                zBuffer: model.zBuffer,\n                props: _toConsumableArray(model.props),\n                fieldAssociation: model.fieldAssociation,\n                renderer: renderer,\n                openGLRenderWindow: model._openGLRenderWindow\n              };\n\n              result.generateSelection = function () {\n                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                  args[_key] = arguments[_key];\n                }\n\n                return generateSelectionWithData.apply(void 0, [result].concat(args));\n              };\n\n              return _context.abrupt(\"return\", result);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //----------------------------------------------------------------------------\n\n\n  publicAPI.captureBuffers = function () {\n    if (!model._renderer || !model._openGLRenderWindow) {\n      vtkErrorMacro('Renderer and view must be set before calling Select.');\n      return false;\n    }\n\n    model._openGLRenderer = model._openGLRenderWindow.getViewNodeFor(model._renderer); // todo revisit making selection part of core\n    // then we can do this in core\n\n    model._openGLRenderWindow.getRenderable().preRender(); // int rgba[4];\n    // rwin.getColorBufferSizes(rgba);\n    // if (rgba[0] < 8 || rgba[1] < 8 || rgba[2] < 8) {\n    //   vtkErrorMacro(\"Color buffer depth must be at least 8 bit. \"\n    //     \"Currently: \" << rgba[0] << \", \" << rgba[1] << \", \" <<rgba[2]);\n    //   return false;\n    // }\n\n\n    publicAPI.invokeEvent({\n      type: 'StartEvent'\n    }); // Initialize renderer for selection.\n    // change the renderer's background to black, which will indicate a miss\n\n    model.originalBackground = model._renderer.getBackgroundByReference();\n\n    model._renderer.setBackground(0.0, 0.0, 0.0, 0.0);\n\n    var rpasses = model._openGLRenderWindow.getRenderPasses();\n\n    publicAPI.beginSelection();\n\n    for (model.currentPass = PassTypes.MIN_KNOWN_PASS; model.currentPass <= PassTypes.MAX_KNOWN_PASS; model.currentPass++) {\n      if (publicAPI.passRequired(model.currentPass)) {\n        publicAPI.preCapturePass(model.currentPass);\n\n        if (model.captureZValues && model.currentPass === PassTypes.ACTOR_PASS && typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          rpasses[0].requestDepth();\n\n          model._openGLRenderWindow.traverseAllPasses();\n        } else {\n          model._openGLRenderWindow.traverseAllPasses();\n        }\n\n        publicAPI.postCapturePass(model.currentPass);\n        publicAPI.savePixelBuffer(model.currentPass);\n        publicAPI.processPixelBuffers();\n      }\n    }\n\n    publicAPI.endSelection(); // restore original background\n\n    model._renderer.setBackground(model.originalBackground);\n\n    publicAPI.invokeEvent({\n      type: 'EndEvent'\n    }); // restore image, not needed?\n    // model._openGLRenderWindow.traverseAllPasses();\n\n    return true;\n  };\n\n  publicAPI.processPixelBuffers = function () {\n    model.props.forEach(function (prop, index) {\n      if (publicAPI.isPropHit(index)) {\n        prop.processSelectorPixelBuffers(publicAPI, model.propPixels[index]);\n      }\n    });\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.passRequired = function (pass) {\n    if (pass === PassTypes.ID_HIGH24) {\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_POINTS) {\n        return model.maximumPointId > 0x00ffffff;\n      }\n\n      if (model.fieldAssociation === FieldAssociations.FIELD_ASSOCIATION_CELLS) {\n        return model.maximumCellId > 0x00ffffff;\n      }\n    }\n\n    return true;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.savePixelBuffer = function (passNo) {\n    model.pixBuffer[passNo] = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n\n    if (!model.rawPixBuffer[passNo]) {\n      var size = (model.area[2] - model.area[0] + 1) * (model.area[3] - model.area[1] + 1) * 4;\n      model.rawPixBuffer[passNo] = new Uint8Array(size);\n      model.rawPixBuffer[passNo].set(model.pixBuffer[passNo]);\n    }\n\n    if (passNo === PassTypes.ACTOR_PASS) {\n      if (model.captureZValues) {\n        var rpasses = model._openGLRenderWindow.getRenderPasses();\n\n        if (typeof rpasses[0].requestDepth === 'function' && typeof rpasses[0].getFramebuffer === 'function') {\n          var fb = rpasses[0].getFramebuffer();\n          fb.saveCurrentBindingsAndBuffers();\n          fb.bind();\n          model.zBuffer = model._openGLRenderWindow.getPixelData(model.area[0], model.area[1], model.area[2], model.area[3]);\n          fb.restorePreviousBindingsAndBuffers();\n        }\n      }\n\n      publicAPI.buildPropHitList(model.rawPixBuffer[passNo]);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.buildPropHitList = function (pixelbuffer) {\n    var offset = 0;\n\n    for (var yy = 0; yy <= model.area[3] - model.area[1]; yy++) {\n      for (var xx = 0; xx <= model.area[2] - model.area[0]; xx++) {\n        var val = convert(xx, yy, pixelbuffer, model.area);\n\n        if (val > 0) {\n          val--;\n\n          if (!(val in model.hitProps)) {\n            model.hitProps[val] = true;\n            model.propPixels[val] = [];\n          }\n\n          model.propPixels[val].push(offset * 4);\n        }\n\n        ++offset;\n      }\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.renderProp = function (prop) {\n    if (model.currentPass === PassTypes.ACTOR_PASS) {\n      publicAPI.setPropColorValueFromInt(model.props.length + idOffset);\n      model.props.push(prop);\n    }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.renderCompositeIndex = function (index) {\n    if (model.currentPass === PassTypes.COMPOSITE_INDEX_PASS) {\n      publicAPI.setPropColorValueFromInt(index + idOffset);\n    }\n  }; //----------------------------------------------------------------------------\n  // TODO: make inline\n\n\n  publicAPI.renderAttributeId = function (attribid) {\n    if (attribid < 0) {\n      // negative attribid is valid. It happens when rendering higher order\n      // elements where new points are added for rendering smooth surfaces.\n      return;\n    }\n\n    model.maxAttributeId = attribid > model.maxAttributeId ? attribid : model.maxAttributeId; // if (model.currentPass < PassTypes.ID_LOW24) {\n    //   return; // useless...\n    // }\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.passTypeToString = function (type) {\n    return macro.enumToString(PassTypes, type);\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.isPropHit = function (id) {\n    return Boolean(model.hitProps[id]);\n  };\n\n  publicAPI.setPropColorValueFromInt = function (val) {\n    model.propColorValue[0] = val % 256 / 255.0;\n    model.propColorValue[1] = Math.floor(val / 256) % 256 / 255.0;\n    model.propColorValue[2] = Math.floor(val / 65536) % 256 / 255.0;\n  }; // info has\n  //   valid\n  //   propId\n  //   prop\n  //   compositeID\n  //   attributeID\n  //----------------------------------------------------------------------------\n\n\n  publicAPI.getPixelInformation = function (inDisplayPosition, maxDistance, outSelectedPosition) {\n    // Base case\n    var maxDist = maxDistance < 0 ? 0 : maxDistance;\n\n    if (maxDist === 0) {\n      outSelectedPosition[0] = inDisplayPosition[0];\n      outSelectedPosition[1] = inDisplayPosition[1];\n\n      if (inDisplayPosition[0] < model.area[0] || inDisplayPosition[0] > model.area[2] || inDisplayPosition[1] < model.area[1] || inDisplayPosition[1] > model.area[3]) {\n        return null;\n      } // offset inDisplayPosition based on the lower-left-corner of the Area.\n\n\n      var displayPosition = [inDisplayPosition[0] - model.area[0], inDisplayPosition[1] - model.area[1]];\n      var actorid = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ACTOR_PASS], model.area);\n\n      if (actorid <= 0 || actorid - idOffset >= model.props.length) {\n        // the pixel did not hit any actor.\n        return null;\n      }\n\n      var _info2 = {};\n      _info2.valid = true;\n      _info2.propID = actorid - idOffset;\n      _info2.prop = model.props[_info2.propID];\n      var compositeID = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.COMPOSITE_INDEX_PASS], model.area);\n\n      if (compositeID < 0 || compositeID > 0xffffff) {\n        compositeID = 0;\n      }\n\n      _info2.compositeID = compositeID - idOffset;\n\n      if (model.captureZValues) {\n        var offset = (displayPosition[1] * (model.area[2] - model.area[0] + 1) + displayPosition[0]) * 4;\n        _info2.zValue = (256 * model.zBuffer[offset] + model.zBuffer[offset + 1]) / 65535.0;\n        _info2.displayPosition = inDisplayPosition;\n      } // Skip attribute ids if alpha is zero (missed)\n\n\n      if (model.pixBuffer[PassTypes.ID_LOW24]) {\n        if (getAlpha(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area) === 0.0) {\n          return _info2;\n        }\n      }\n\n      var low24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_LOW24], model.area);\n      var high24 = convert(displayPosition[0], displayPosition[1], model.pixBuffer[PassTypes.ID_HIGH24], model.area);\n      _info2.attributeID = getID(low24, high24);\n      return _info2;\n    } // Iterate over successively growing boxes.\n    // They recursively call the base case to handle single pixels.\n\n\n    var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n    var curPos = [0, 0];\n    var info = publicAPI.getPixelInformation(inDisplayPosition, 0, outSelectedPosition);\n\n    if (info && info.valid) {\n      return info;\n    }\n\n    for (var dist = 1; dist < maxDist; ++dist) {\n      // Vertical sides of box.\n      for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n        curPos[1] = y;\n\n        if (dispPos[0] >= dist) {\n          curPos[0] = dispPos[0] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n          if (info && info.valid) {\n            return info;\n          }\n        }\n\n        curPos[0] = dispPos[0] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      } // Horizontal sides of box.\n\n\n      for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n        curPos[0] = x;\n\n        if (dispPos[1] >= dist) {\n          curPos[1] = dispPos[1] - dist;\n          info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n          if (info && info.valid) {\n            return info;\n          }\n        }\n\n        curPos[1] = dispPos[1] + dist;\n        info = publicAPI.getPixelInformation(curPos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          return info;\n        }\n      }\n    } // nothing hit.\n\n\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n    return null;\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.generateSelection = function (fx1, fy1, fx2, fy2) {\n    var x1 = Math.floor(fx1);\n    var y1 = Math.floor(fy1);\n    var x2 = Math.floor(fx2);\n    var y2 = Math.floor(fy2);\n    var dataMap = new Map();\n    var outSelectedPosition = [0, 0];\n\n    for (var yy = y1; yy <= y2; yy++) {\n      for (var xx = x1; xx <= x2; xx++) {\n        var pos = [xx, yy];\n        var info = publicAPI.getPixelInformation(pos, 0, outSelectedPosition);\n\n        if (info && info.valid) {\n          var hash = getInfoHash(info);\n\n          if (!dataMap.has(hash)) {\n            dataMap.set(hash, {\n              info: info,\n              pixelCount: 1,\n              attributeIDs: [info.attributeID]\n            });\n          } else {\n            var dmv = dataMap.get(hash);\n            dmv.pixelCount++;\n\n            if (model.captureZValues) {\n              if (info.zValue < dmv.info.zValue) {\n                dmv.info = info;\n              }\n            }\n\n            if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n              dmv.attributeIDs.push(info.attributeID);\n            }\n          }\n        }\n      }\n    }\n\n    return convertSelection(model.fieldAssociation, dataMap, model.captureZValues, model._renderer, model._openGLRenderWindow);\n  };\n\n  publicAPI.getRawPixelBuffer = function (passNo) {\n    return model.rawPixBuffer[passNo];\n  };\n\n  publicAPI.getPixelBuffer = function (passNo) {\n    return model.pixBuffer[passNo];\n  }; //----------------------------------------------------------------------------\n\n\n  publicAPI.attach = function (w, r) {\n    model._openGLRenderWindow = w;\n    model._renderer = r;\n  }; // override\n\n\n  var superSetArea = publicAPI.setArea;\n\n  publicAPI.setArea = function () {\n    if (superSetArea.apply(void 0, arguments)) {\n      model.area[0] = Math.floor(model.area[0]);\n      model.area[1] = Math.floor(model.area[1]);\n      model.area[2] = Math.floor(model.area[2]);\n      model.area[3] = Math.floor(model.area[3]);\n      return true;\n    }\n\n    return false;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  area: undefined,\n  // _renderer: null,\n  // _openGLRenderWindow: null,\n  // _openGLRenderer: null,\n  currentPass: -1,\n  propColorValue: null,\n  props: null,\n  maximumPointId: 0,\n  maximumCellId: 0,\n  idOffset: 1\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkHardwareSelector$1.extend(publicAPI, model, initialValues);\n  model.propColorValue = [0, 0, 0];\n  model.props = [];\n\n  if (!model.area) {\n    model.area = [0, 0, 0, 0];\n  }\n\n  macro.setGetArray(publicAPI, model, ['area'], 4);\n  macro.setGet(publicAPI, model, ['_renderer', 'currentPass', '_openGLRenderWindow', 'maximumPointId', 'maximumCellId']);\n  macro.setGetArray(publicAPI, model, ['propColorValue'], 3);\n  macro.moveToProtected(publicAPI, model, ['renderer', 'openGLRenderWindow']);\n  macro.event(publicAPI, model, 'event'); // Object methods\n\n  vtkOpenGLHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkHardwareSelector as default, extend, newInstance };\n", "import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nvar FieldAssociations = vtkDataSet.FieldAssociations; // ----------------------------------------------------------------------------\n// vtkHardwareSelector methods\n// ----------------------------------------------------------------------------\n\nfunction vtkHardwareSelector(publicAPI, model) {\n  model.classHierarchy.push('vtkHardwareSelector'); // get the source data that is used for generating a selection. This\n  // must be called at least once before calling generateSelection. In\n  // raster based backends this method will capture the buffers. You can\n  // call this once and then make multiple calls to generateSelection.\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer, fx1, fy1, fx2, fy2) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3, _x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  publicAPI.selectAsync = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderer, fx1, fy1, fx2, fy2) {\n      var srcData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return publicAPI.getSourceDataAsync(renderer, fx1, fy1, fx2, fy2);\n\n            case 2:\n              srcData = _context2.sent;\n\n              if (!srcData) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", srcData.generateSelection(fx1, fy1, fx2, fy2));\n\n            case 5:\n              return _context2.abrupt(\"return\", []);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x6, _x7, _x8, _x9, _x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  fieldAssociation: FieldAssociations.FIELD_ASSOCIATION_CELLS,\n  captureZValues: false\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['fieldAssociation', 'captureZValues']); // Object methods\n\n  vtkHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkHardwareSelector$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkHardwareSelector$1 as default, extend, newInstance };\n", "/**\n * The (primary) property that describes the content of a selection\n * node's data. Other auxiliary description properties follow.\n * GLOBALIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * PEDIGREEIDS means that the selection list contains values from the\n * vtkDataSetAttribute array of the same name.\n * VALUES means the the selection list contains values from an\n * arbitrary attribute array (ignores any globalids attribute)\n * INDICES means that the selection list contains indexes into the\n * cell or point arrays.\n * FRUSTUM means the set of points and cells inside a frustum\n * LOCATIONS means the set of points and cells near a set of positions\n * THRESHOLDS means the points and cells with values within a set of ranges\n * getContentType() returns -1 if the content type is not set.\n */\n// Specify how data arrays can be used by data objects\nvar SelectionContent = {\n  GLOBALIDS: 0,\n  PEDIGREEIDS: 1,\n  VALUES: 2,\n  INDICES: 3,\n  FRUSTUM: 4,\n  LOCATIONS: 5,\n  THRESHOLDS: 6,\n  BLOCKS: 7,\n  QUERY: 8\n};\nvar SelectionField = {\n  CELL: 0,\n  POINT: 1,\n  FIELD: 2,\n  VERTEX: 3,\n  EDGE: 4,\n  ROW: 5\n};\nvar Constants = {\n  SelectionContent: SelectionContent,\n  SelectionField: SelectionField\n};\n\nexport { SelectionContent, SelectionField, Constants as default };\n", "import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport macro from '../../macros.js';\nimport Constants from './SelectionNode/Constants.js';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// vtkSelectionNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkSelectionNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkSelectionNode');\n\n  publicAPI.getBounds = function () {\n    return model.points.getBounds();\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  contentType: -1,\n  fieldType: -1,\n  properties: null,\n  selectionList: []\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  macro.obj(publicAPI, model);\n  model.properties = {};\n  macro.setGet(publicAPI, model, ['contentType', 'fieldType', 'properties', 'selectionList']); // Object specific methods\n\n  vtkSelectionNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkSelectionNode'); // ----------------------------------------------------------------------------\n\nvar vtkSelectionNode$1 = _objectSpread({\n  newInstance: newInstance,\n  extend: extend\n}, Constants);\n\nexport { vtkSelectionNode$1 as default, extend, newInstance };\n", "import Md5 from 'spark-md5';\nimport macro from '../../macros.js';\nimport vtkShaderProgram from './ShaderProgram.js';\n\nvar SET_GET_FIELDS = ['lastShaderBound', 'context', '_openGLRenderWindow']; // ----------------------------------------------------------------------------\n// vtkShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkShaderCache');\n\n  publicAPI.replaceShaderValues = function (VSSource, FSSource, GSSource) {\n    // first handle renaming any Fragment shader inputs\n    // if we have a geometry shader. By default fragment shaders\n    // assume their inputs come from a Vertex Shader. When we\n    // have a Geometry shader we rename the frament shader inputs\n    // to come from the geometry shader\n    var nFSSource = FSSource;\n\n    if (GSSource.length > 0) {\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'VSOut', 'GSOut').result;\n    }\n\n    var gl2 = model._openGLRenderWindow.getWebgl2();\n\n    var fragDepthString = '\\n';\n    var version = '#version 100\\n';\n\n    if (gl2) {\n      version = '#version 300 es\\n' + '#define attribute in\\n' + '#define textureCube texture\\n' + '#define texture2D texture\\n' + '#define textureCubeLod textureLod\\n' + '#define texture2DLod textureLod\\n';\n    } else {\n      model.context.getExtension('OES_standard_derivatives');\n\n      if (model.context.getExtension('EXT_frag_depth')) {\n        fragDepthString = '#extension GL_EXT_frag_depth : enable\\n';\n      }\n\n      if (model.context.getExtension('EXT_shader_texture_lod')) {\n        fragDepthString += '#extension GL_EXT_shader_texture_lod : enable\\n' + '#define textureCubeLod textureCubeLodEXT\\n' + '#define texture2DLod texture2DLodEXT';\n      }\n    }\n\n    nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::System::Dec', [\"\".concat(version, \"\\n\"), gl2 ? '' : '#extension GL_OES_standard_derivatives : enable\\n', fragDepthString, '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n    var nVSSource = vtkShaderProgram.substitute(VSSource, '//VTK::System::Dec', [\"\".concat(version, \"\\n\"), '#ifdef GL_FRAGMENT_PRECISION_HIGH', 'precision highp float;', 'precision highp int;', '#else', 'precision mediump float;', 'precision mediump int;', '#endif']).result;\n\n    if (gl2) {\n      nVSSource = vtkShaderProgram.substitute(nVSSource, 'varying', 'out').result;\n      nFSSource = vtkShaderProgram.substitute(nFSSource, 'varying', 'in').result;\n      var shaderOutputs = '';\n      var outputCount = 0;\n\n      while (nFSSource.includes(\"gl_FragData[\".concat(outputCount, \"]\"))) {\n        nFSSource = vtkShaderProgram.substitute(nFSSource, \"gl_FragData\\\\[\".concat(outputCount, \"\\\\]\"), \"fragOutput\".concat(outputCount)).result;\n        shaderOutputs += \"layout(location = \".concat(outputCount, \") out vec4 fragOutput\").concat(outputCount, \";\\n\");\n        outputCount++;\n      }\n\n      nFSSource = vtkShaderProgram.substitute(nFSSource, '//VTK::Output::Dec', shaderOutputs).result;\n    } // nFSSource = ShaderProgram.substitute(nFSSource, 'gl_FragData\\\\[0\\\\]',\n    //   'gl_FragColor').result;\n\n\n    var nGSSource = vtkShaderProgram.substitute(GSSource, '//VTK::System::Dec', version).result;\n    return {\n      VSSource: nVSSource,\n      FSSource: nFSSource,\n      GSSource: nGSSource\n    };\n  }; // return NULL if there is an issue\n\n\n  publicAPI.readyShaderProgramArray = function (vertexCode, fragmentCode, geometryCode) {\n    var data = publicAPI.replaceShaderValues(vertexCode, fragmentCode, geometryCode);\n    var shader = publicAPI.getShaderProgram(data.VSSource, data.FSSource, data.GSSource);\n    return publicAPI.readyShaderProgram(shader);\n  };\n\n  publicAPI.readyShaderProgram = function (shader) {\n    if (!shader) {\n      return null;\n    } // compile if needed\n\n\n    if (!shader.getCompiled() && !shader.compileShader()) {\n      return null;\n    } // bind if needed\n\n\n    if (!publicAPI.bindShader(shader)) {\n      return null;\n    }\n\n    return shader;\n  };\n\n  publicAPI.getShaderProgram = function (vertexCode, fragmentCode, geometryCode) {\n    // compute the MD5 and the check the map\n    var hashInput = \"\".concat(vertexCode).concat(fragmentCode).concat(geometryCode);\n    var result = Md5.hash(hashInput); // does it already exist?\n\n    if (!(result in model.shaderPrograms)) {\n      // create one\n      var sps = vtkShaderProgram.newInstance();\n      sps.setContext(model.context);\n      sps.getVertexShader().setSource(vertexCode);\n      sps.getFragmentShader().setSource(fragmentCode);\n\n      if (geometryCode) {\n        sps.getGeometryShader().setSource(geometryCode);\n      }\n\n      sps.setMd5Hash(result);\n      model.shaderPrograms[result] = sps;\n      return sps;\n    }\n\n    return model.shaderPrograms[result];\n  };\n\n  publicAPI.releaseGraphicsResources = function (win) {\n    // NOTE:\n    // In the current implementation as of October 26th, if a shader\n    // program is created by ShaderCache then it should make sure\n    // that it releases the graphics resources used by these programs.\n    // It is not wisely for callers to do that since then they would\n    // have to loop over all the programs were in use and invoke\n    // release graphics resources individually.\n    publicAPI.releaseCurrentShader();\n    Object.keys(model.shaderPrograms).map(function (key) {\n      return model.shaderPrograms[key];\n    }).forEach(function (sp) {\n      return sp.releaseGraphicsResources(win);\n    });\n  };\n\n  publicAPI.releaseGraphicsResources = function () {\n    // release prior shader\n    if (model.astShaderBound) {\n      model.lastShaderBound.release();\n      model.lastShaderBound = null;\n    }\n  };\n\n  publicAPI.bindShader = function (shader) {\n    if (model.lastShaderBound === shader) {\n      return 1;\n    } // release prior shader\n\n\n    if (model.lastShaderBound) {\n      model.lastShaderBound.release();\n    }\n\n    shader.bind();\n    model.lastShaderBound = shader;\n    return 1;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  lastShaderBound: null,\n  shaderPrograms: null,\n  context: null // _openGLRenderWindow: null,\n\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Internal objects\n\n  model.shaderPrograms = {}; // Build VTK API\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, SET_GET_FIELDS);\n  macro.moveToProtected(publicAPI, model, ['openGLRenderWindow']); // Object methods\n\n  vtkShaderCache(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkShaderCache'); // ----------------------------------------------------------------------------\n\nvar vtkShaderCache$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkShaderCache$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // ----------------------------------------------------------------------------\n// vtkOpenGLTextureUnitManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLTextureUnitManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------\n  // Description:\n  // Delete the allocation table and check if it is not called before\n  // all the texture units have been released.\n\n  publicAPI.deleteTable = function () {\n    for (var i = 0; i < model.numberOfTextureUnits; ++i) {\n      if (model.textureUnits[i] === true) {\n        vtkErrorMacro('some texture units  were not properly released');\n      }\n    }\n\n    model.textureUnits = [];\n    model.numberOfTextureUnits = 0;\n  }; // ----------------------------------------------------------------------------\n\n\n  publicAPI.setContext = function (ctx) {\n    if (model.context !== ctx) {\n      if (model.context !== 0) {\n        publicAPI.deleteTable();\n      }\n\n      model.context = ctx;\n\n      if (model.context) {\n        model.numberOfTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\n\n        for (var i = 0; i < model.numberOfTextureUnits; ++i) {\n          model.textureUnits[i] = false;\n        }\n      }\n\n      publicAPI.modified();\n    }\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Reserve a texture unit. It returns its number.\n  // It returns -1 if the allocation failed (because there are no more\n  // texture units left).\n  // \\post valid_result: result==-1 || result>=0 && result<this->GetNumberOfTextureUnits())\n  // \\post allocated: result==-1 || this->IsAllocated(result)\n\n\n  publicAPI.allocate = function () {\n    for (var i = 0; i < model.numberOfTextureUnits; i++) {\n      if (!publicAPI.isAllocated(i)) {\n        model.textureUnits[i] = true;\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  publicAPI.allocateUnit = function (unit) {\n    if (publicAPI.isAllocated(unit)) {\n      return -1;\n    }\n\n    model.textureUnits[unit] = true;\n    return unit;\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Tell if texture unit `textureUnitId' is already allocated.\n  // \\pre valid_id_range : textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n\n\n  publicAPI.isAllocated = function (textureUnitId) {\n    return model.textureUnits[textureUnitId];\n  }; // ----------------------------------------------------------------------------\n  // Description:\n  // Release a texture unit.\n  // \\pre valid_id: textureUnitId>=0 && textureUnitId<this->GetNumberOfTextureUnits()\n  // \\pre allocated_id: this->IsAllocated(textureUnitId)\n\n\n  publicAPI.free = function (val) {\n    model.textureUnits[val] = false;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  context: null,\n  numberOfTextureUnits: 0,\n  textureUnits: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  model.textureUnits = []; // Build VTK API\n\n  macro.get(publicAPI, model, ['numberOfTextureUnits']);\n  macro.setGet(publicAPI, model, ['context']); // Object methods\n\n  vtkOpenGLTextureUnitManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkOpenGLTextureUnitManager'); // ----------------------------------------------------------------------------\n\nvar vtkTextureUnitManager = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkTextureUnitManager as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkViewNode from './ViewNode.js';\n\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n\n  publicAPI.getViewNodeFactory = function () {\n    return null;\n  };\n\n  publicAPI.getAspectRatio = function () {\n    return model.size[0] / model.size[1];\n  };\n\n  publicAPI.getAspectRatioForRenderer = function (renderer) {\n    var viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n\n  publicAPI.isInViewport = function (x, y, viewport) {\n    var vCoords = viewport.getViewportByReference();\n    var size = publicAPI.getFramebufferSize();\n\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n\n    return false;\n  };\n\n  publicAPI.getViewportSize = function (viewport) {\n    var vCoords = viewport.getViewportByReference();\n    var size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n\n  publicAPI.getViewportCenter = function (viewport) {\n    var size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n\n  publicAPI.displayToNormalizedDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n\n  publicAPI.normalizedDisplayToDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n\n  publicAPI.worldToView = function (x, y, z, renderer) {\n    return renderer.worldToView(x, y, z);\n  };\n\n  publicAPI.viewToWorld = function (x, y, z, renderer) {\n    return renderer.viewToWorld(x, y, z);\n  };\n\n  publicAPI.worldToDisplay = function (x, y, z, renderer) {\n    var val = renderer.worldToView(x, y, z);\n    var dims = publicAPI.getViewportSize(renderer);\n    var val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    var val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n\n  publicAPI.displayToWorld = function (x, y, z, renderer) {\n    var val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    var val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    var dims = publicAPI.getViewportSize(renderer);\n    var val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n\n  publicAPI.normalizedDisplayToViewport = function (x, y, z, renderer) {\n    var vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    var coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n\n  publicAPI.viewportToNormalizedViewport = function (x, y, z, renderer) {\n    var size = publicAPI.getViewportSize(renderer);\n\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n\n    return [x, y, z];\n  };\n\n  publicAPI.normalizedViewportToViewport = function (x, y, z, renderer) {\n    var size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n\n  publicAPI.displayToLocalDisplay = function (x, y, z) {\n    var size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n\n  publicAPI.viewportToNormalizedDisplay = function (x, y, z, renderer) {\n    var vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    var x2 = x + vCoords[0] + 0.5;\n    var y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n\n  publicAPI.getPixelData = function (x1, y1, x2, y2) {\n    macro.vtkErrorMacro('not implemented');\n    return undefined;\n  };\n\n  publicAPI.createSelector = function () {\n    macro.vtkErrorMacro('not implemented');\n    return undefined;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']); // Inheritance\n\n  vtkViewNode.extend(publicAPI, model, initialValues); // Object methods\n\n  vtkRenderWindowViewNode(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode'); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };\n", "function createContextProxyHandler() {\n  var cache = new Map();\n  var getParameterHandler = {\n    apply: function apply(target, gl, args) {\n      if (cache.has(args[0])) {\n        return cache.get(args[0]);\n      }\n\n      return target.apply(gl, args);\n    }\n  }; // only supports single-value setters\n\n  function cachedSetterHandler(key) {\n    return {\n      apply: function apply(target, gl, args) {\n        cache.set(key, args[0]);\n        return target.apply(gl, args);\n      }\n    };\n  } // When a property is accessed on the webgl context proxy,\n  // it's accessed is intercepted. If the property name matches\n  // any of the keys of `propHandlers`, then that handler is called\n  // with the following arguments: (gl, prop, receiver, propValue)\n  // - gl (WebGL2RenderingContext): the underlying webgl context\n  // - propName (string): the property name\n  // - receiver (Proxy): the webgl context proxy\n  // - propValue (unknown): the value of `gl[propName]`\n\n\n  var propHandlers = Object.create(null); // Sets getParameter(property) as a cached getter proxy.\n  // propValue.bind(gl) is to avoid Illegal Invocation errors.\n\n  propHandlers.getParameter = function (gl, prop, receiver, propValue) {\n    return new Proxy(propValue.bind(gl), getParameterHandler);\n  }; // Sets depthMask(flag) as a cached setter proxy.\n\n\n  propHandlers.depthMask = function (gl, prop, receiver, propValue) {\n    return new Proxy(propValue.bind(gl), cachedSetterHandler(gl.DEPTH_WRITEMASK));\n  };\n\n  return {\n    get: function get(gl, prop, receiver) {\n      var value = Reflect.get(gl, prop, receiver);\n\n      if (value instanceof Function) {\n        // prevents Illegal Invocation errors\n        value = value.bind(gl);\n      }\n\n      var propHandler = propHandlers[prop];\n\n      if (propHandler) {\n        return propHandler(gl, prop, receiver, value);\n      }\n\n      return value;\n    }\n  };\n}\nvar ContextProxy = {\n  createContextProxyHandler: createContextProxyHandler\n};\n\nexport { createContextProxyHandler, ContextProxy as default };\n", "import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport { registerViewConstructor } from '../Core/RenderWindow.js';\nimport vtkForwardPass from './ForwardPass.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUDevice from './Device.js';\nimport vtkWebGPUHardwareSelector from './HardwareSelector.js';\nimport vtkWebGPUViewNodeFactory from './ViewNodeFactory.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkRenderWindowViewNode from '../SceneGraph/RenderWindowViewNode.js';\nimport HalfFloat from '../../Common/Core/HalfFloat.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro; // const IS_CHROME = navigator.userAgent.indexOf('Chrome') !== -1;\n\nvar SCREENSHOT_PLACEHOLDER = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n}; // ----------------------------------------------------------------------------\n// vtkWebGPURenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPURenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderWindow');\n\n  publicAPI.getViewNodeFactory = function () {\n    return model.myFactory;\n  }; // Auto update style\n\n\n  var previousSize = [0, 0];\n\n  function updateWindow() {\n    // Canvas size\n    if (model.renderable) {\n      if (model.size[0] !== previousSize[0] || model.size[1] !== previousSize[1]) {\n        previousSize[0] = model.size[0];\n        previousSize[1] = model.size[1];\n        model.canvas.setAttribute('width', model.size[0]);\n        model.canvas.setAttribute('height', model.size[1]);\n        publicAPI.recreateSwapChain();\n      }\n    } // ImageStream size\n\n\n    if (model.viewStream) {\n      // If same size that's a NoOp\n      model.viewStream.setSize(model.size[0], model.size[1]);\n    } // Offscreen ?\n\n\n    model.canvas.style.display = model.useOffScreen ? 'none' : 'block'; // Cursor type\n\n    if (model.el) {\n      model.el.style.cursor = model.cursorVisibility ? model.cursor : 'none';\n    } // Invalidate cached DOM container size\n\n\n    model.containerSize = null;\n  }\n\n  publicAPI.onModified(updateWindow);\n\n  publicAPI.recreateSwapChain = function () {\n    if (model.context) {\n      model.context.unconfigure();\n      model.presentationFormat = navigator.gpu.getPreferredCanvasFormat(model.adapter);\n      /* eslint-disable no-undef */\n\n      /* eslint-disable no-bitwise */\n\n      model.context.configure({\n        device: model.device.getHandle(),\n        format: model.presentationFormat,\n        alphaMode: 'premultiplied',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_DST,\n        width: model.size[0],\n        height: model.size[1]\n      });\n      model._configured = true;\n    }\n  };\n\n  publicAPI.getCurrentTexture = function () {\n    return model.context.getCurrentTexture();\n  }; // Builds myself.\n\n\n  publicAPI.buildPass = function (prepass) {\n    if (prepass) {\n      if (!model.renderable) {\n        return;\n      }\n\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNodes(model.renderable.getRenderersByReference());\n      publicAPI.removeUnusedNodes();\n      publicAPI.initialize();\n    } else if (model.initialized) {\n      if (!model._configured) {\n        publicAPI.recreateSwapChain();\n      }\n\n      model.commandEncoder = model.device.createCommandEncoder();\n    }\n  }; // publicAPI.traverseRenderers = (renPass) => {\n  //   // iterate over renderers\n  //   const numlayers = publicAPI.getRenderable().getNumberOfLayers();\n  //   const renderers = publicAPI.getChildren();\n  //   for (let i = 0; i < numlayers; i++) {\n  //     for (let index = 0; index < renderers.length; index++) {\n  //       const renNode = renderers[index];\n  //       const ren = publicAPI.getRenderable().getRenderers()[index];\n  //       if (ren.getDraw() && ren.getLayer() === i) {\n  //         renNode.traverse(renPass);\n  //       }\n  //     }\n  //   }\n  // };\n\n\n  publicAPI.initialize = function () {\n    if (!model.initializing) {\n      model.initializing = true;\n\n      if (!navigator.gpu) {\n        vtkErrorMacro('WebGPU is not enabled.');\n        return;\n      }\n\n      publicAPI.create3DContextAsync().then(function () {\n        model.initialized = true;\n\n        if (model.deleted) {\n          return;\n        }\n\n        publicAPI.invokeInitialized();\n      });\n    }\n  };\n\n  publicAPI.setContainer = function (el) {\n    if (model.el && model.el !== el) {\n      if (model.canvas.parentNode !== model.el) {\n        vtkErrorMacro('Error: canvas parent node does not match container');\n      } // Remove canvas from previous container\n\n\n      model.el.removeChild(model.canvas); // If the renderer has previously added\n      // a background image, remove it from the DOM.\n\n      if (model.el.contains(model.bgImage)) {\n        model.el.removeChild(model.bgImage);\n      }\n    }\n\n    if (model.el !== el) {\n      model.el = el;\n\n      if (model.el) {\n        model.el.appendChild(model.canvas); // If the renderer is set to use a background\n        // image, attach it to the DOM.\n\n        if (model.useBackgroundImage) {\n          model.el.appendChild(model.bgImage);\n        }\n      } // Trigger modified()\n\n\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.getContainer = function () {\n    return model.el;\n  };\n\n  publicAPI.getContainerSize = function () {\n    if (!model.containerSize && model.el) {\n      var _model$el$getBounding = model.el.getBoundingClientRect(),\n          width = _model$el$getBounding.width,\n          height = _model$el$getBounding.height;\n\n      model.containerSize = [width, height];\n    }\n\n    return model.containerSize || model.size;\n  };\n\n  publicAPI.getFramebufferSize = function () {\n    return model.size;\n  };\n\n  publicAPI.create3DContextAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return navigator.gpu.requestAdapter({\n              powerPreference: 'high-performance'\n            });\n\n          case 2:\n            model.adapter = _context.sent;\n\n            if (!model.deleted) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            // console.log([...model.adapter.features]);\n            model.device = vtkWebGPUDevice.newInstance();\n            _context.t0 = model.device;\n            _context.next = 9;\n            return model.adapter.requestDevice();\n\n          case 9:\n            _context.t1 = _context.sent;\n\n            _context.t0.initialize.call(_context.t0, _context.t1);\n\n            if (!model.deleted) {\n              _context.next = 14;\n              break;\n            }\n\n            model.device = null;\n            return _context.abrupt(\"return\");\n\n          case 14:\n            // model.device.getHandle().lost.then((info) => {\n            //   console.log(`${info.message}`);\n            //   publicAPI.releaseGraphicsResources();\n            // });\n            model.context = model.canvas.getContext('webgpu');\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  publicAPI.releaseGraphicsResources = function () {\n    var rp = vtkRenderPass.newInstance();\n    rp.setCurrentOperation('Release');\n    rp.traverse(publicAPI, null);\n    model.adapter = null;\n    model.device = null;\n    model.context = null;\n    model.initialized = false;\n    model.initializing = false;\n  };\n\n  publicAPI.setBackgroundImage = function (img) {\n    model.bgImage.src = img.src;\n  };\n\n  publicAPI.setUseBackgroundImage = function (value) {\n    model.useBackgroundImage = value; // Add or remove the background image from the\n    // DOM as specified.\n\n    if (model.useBackgroundImage && !model.el.contains(model.bgImage)) {\n      model.el.appendChild(model.bgImage);\n    } else if (!model.useBackgroundImage && model.el.contains(model.bgImage)) {\n      model.el.removeChild(model.bgImage);\n    }\n  };\n\n  function getCanvasDataURL() {\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n\n  function _getCanvasDataURL() {\n    _getCanvasDataURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var format,\n          temporaryCanvas,\n          temporaryContext,\n          result,\n          imageData,\n          mainBoundingClientRect,\n          renderWindow,\n          renderers,\n          screenshot,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              format = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : model.imageFormat;\n              // Copy current canvas to not modify the original\n              temporaryCanvas = document.createElement('canvas');\n              temporaryContext = temporaryCanvas.getContext('2d');\n              temporaryCanvas.width = model.canvas.width;\n              temporaryCanvas.height = model.canvas.height;\n              _context3.next = 7;\n              return publicAPI.getPixelsAsync();\n\n            case 7:\n              result = _context3.sent;\n              imageData = new ImageData(result.colorValues, result.width, result.height); // temporaryCanvas.putImageData(imageData, 0, 0);\n\n              temporaryContext.putImageData(imageData, 0, 0); // Get current client rect to place canvas\n\n              mainBoundingClientRect = model.canvas.getBoundingClientRect();\n              renderWindow = model.renderable;\n              renderers = renderWindow.getRenderers();\n              renderers.forEach(function (renderer) {\n                var viewProps = renderer.getViewProps();\n                viewProps.forEach(function (viewProp) {\n                  // Check if the prop has a container that should have canvas\n                  if (viewProp.getContainer) {\n                    var container = viewProp.getContainer();\n                    var canvasList = container.getElementsByTagName('canvas'); // Go throughout all canvas and copy it into temporary main canvas\n\n                    for (var i = 0; i < canvasList.length; i++) {\n                      var currentCanvas = canvasList[i];\n                      var boundingClientRect = currentCanvas.getBoundingClientRect();\n                      var newXPosition = boundingClientRect.x - mainBoundingClientRect.x;\n                      var newYPosition = boundingClientRect.y - mainBoundingClientRect.y;\n                      temporaryContext.drawImage(currentCanvas, newXPosition, newYPosition);\n                    }\n                  }\n                });\n              });\n              screenshot = temporaryCanvas.toDataURL(format);\n              temporaryCanvas.remove();\n              publicAPI.invokeImageReady(screenshot);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getCanvasDataURL.apply(this, arguments);\n  }\n\n  publicAPI.captureNextImage = function () {\n    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$resetCamera = _ref2.resetCamera,\n        resetCamera = _ref2$resetCamera === void 0 ? false : _ref2$resetCamera,\n        _ref2$size = _ref2.size,\n        size = _ref2$size === void 0 ? null : _ref2$size,\n        _ref2$scale = _ref2.scale,\n        scale = _ref2$scale === void 0 ? 1 : _ref2$scale;\n\n    if (model.deleted) {\n      return null;\n    }\n\n    model.imageFormat = format;\n    var previous = model.notifyStartCaptureImage;\n    model.notifyStartCaptureImage = true;\n    model._screenshot = {\n      size: !!size || scale !== 1 ? size || model.size.map(function (val) {\n        return val * scale;\n      }) : null\n    };\n    return new Promise(function (resolve, reject) {\n      var subscription = publicAPI.onImageReady(function (imageURL) {\n        if (model._screenshot.size === null) {\n          model.notifyStartCaptureImage = previous;\n          subscription.unsubscribe();\n\n          if (model._screenshot.placeHolder) {\n            // resize the main canvas back to its original size and show it\n            model.size = model._screenshot.originalSize; // process the resize\n\n            publicAPI.modified(); // restore the saved camera parameters, if applicable\n\n            if (model._screenshot.cameras) {\n              model._screenshot.cameras.forEach(function (_ref3) {\n                var restoreParamsFn = _ref3.restoreParamsFn,\n                    arg = _ref3.arg;\n                return restoreParamsFn(arg);\n              });\n            } // Trigger a render at the original size\n\n\n            publicAPI.traverseAllPasses(); // Remove and clean up the placeholder, revealing the original\n\n            model.el.removeChild(model._screenshot.placeHolder);\n\n            model._screenshot.placeHolder.remove();\n\n            model._screenshot = null;\n          }\n\n          resolve(imageURL);\n        } else {\n          // Create a placeholder image overlay while we resize and render\n          var tmpImg = document.createElement('img');\n          tmpImg.style = SCREENSHOT_PLACEHOLDER;\n          tmpImg.src = imageURL;\n          model._screenshot.placeHolder = model.el.appendChild(tmpImg); // hide the main canvas\n\n          model.canvas.style.display = 'none'; // remember the main canvas original size, then resize it\n\n          model._screenshot.originalSize = model.size;\n          model.size = model._screenshot.size;\n          model._screenshot.size = null; // process the resize\n\n          publicAPI.modified();\n\n          if (resetCamera) {\n            var isUserResetCamera = resetCamera !== true; // If resetCamera was requested, we first save camera parameters\n            // from all the renderers, so we can restore them later\n\n            model._screenshot.cameras = model.renderable.getRenderers().map(function (renderer) {\n              var camera = renderer.getActiveCamera();\n              var params = camera.get('focalPoint', 'position', 'parallelScale');\n              return {\n                resetCameraArgs: isUserResetCamera ? {\n                  renderer: renderer\n                } : undefined,\n                resetCameraFn: isUserResetCamera ? resetCamera : renderer.resetCamera,\n                restoreParamsFn: camera.set,\n                // \"clone\" the params so we don't keep refs to properties\n                arg: JSON.parse(JSON.stringify(params))\n              };\n            }); // Perform the resetCamera() on each renderer only after capturing\n            // the params from all active cameras, in case there happen to be\n            // linked cameras among the renderers.\n\n            model._screenshot.cameras.forEach(function (_ref4) {\n              var resetCameraFn = _ref4.resetCameraFn,\n                  resetCameraArgs = _ref4.resetCameraArgs;\n              return resetCameraFn(resetCameraArgs);\n            });\n          } // Trigger a render at the custom size\n\n\n          publicAPI.traverseAllPasses();\n        }\n      });\n    });\n  };\n\n  publicAPI.traverseAllPasses = function () {\n    if (model.deleted) {\n      return;\n    } // if we are not initialized then we call initialize\n    // which is async so we will not actually get a render\n    // so we queue up another traverse for when we are initialized\n\n\n    if (!model.initialized) {\n      publicAPI.initialize();\n      var subscription = publicAPI.onInitialized(function () {\n        subscription.unsubscribe();\n        publicAPI.traverseAllPasses();\n      });\n    } else {\n      if (model.renderPasses) {\n        for (var index = 0; index < model.renderPasses.length; ++index) {\n          model.renderPasses[index].traverse(publicAPI, null);\n        }\n      }\n\n      if (model.commandEncoder) {\n        model.device.submitCommandEncoder(model.commandEncoder);\n        model.commandEncoder = null;\n\n        if (model.notifyStartCaptureImage) {\n          model.device.onSubmittedWorkDone().then(function () {\n            getCanvasDataURL();\n          });\n        }\n      }\n    }\n  };\n\n  publicAPI.setViewStream = function (stream) {\n    if (model.viewStream === stream) {\n      return false;\n    }\n\n    if (model.subscription) {\n      model.subscription.unsubscribe();\n      model.subscription = null;\n    }\n\n    model.viewStream = stream;\n\n    if (model.viewStream) {\n      // Force background to be transparent + render\n      var mainRenderer = model.renderable.getRenderers()[0];\n      mainRenderer.getBackgroundByReference()[3] = 0; // Enable display of the background image\n\n      publicAPI.setUseBackgroundImage(true); // Bind to remote stream\n\n      model.subscription = model.viewStream.onImageReady(function (e) {\n        return publicAPI.setBackgroundImage(e.image);\n      });\n      model.viewStream.setSize(model.size[0], model.size[1]);\n      model.viewStream.invalidateCache();\n      model.viewStream.render();\n      publicAPI.modified();\n    }\n\n    return true;\n  };\n\n  publicAPI.getUniquePropID = function () {\n    return model.nextPropID++;\n  };\n\n  publicAPI.getPropFromID = function (id) {\n    for (var i = 0; i < model.children.length; i++) {\n      var res = model.children[i].getPropFromID(id);\n\n      if (res !== null) {\n        return res;\n      }\n    }\n\n    return null;\n  };\n\n  publicAPI.getPixelsAsync = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var device, texture, result, colorBuffer, cmdEnc, cLoad, tmparray, y, x, doffset, soffset;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            device = model.device;\n            texture = model.renderPasses[0].getOpaquePass().getColorTexture(); // as this is async we really don't want to store things in\n            // the class as multiple calls may start before resolving\n            // so anything specific to this request gets put into the\n            // result object (by value in most cases)\n\n            result = {\n              width: texture.getWidth(),\n              height: texture.getHeight()\n            }; // must be a multiple of 256 bytes, so 32 texels with rgba16\n\n            result.colorBufferWidth = 32 * Math.floor((result.width + 31) / 32);\n            result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 8;\n            colorBuffer = vtkWebGPUBuffer.newInstance();\n            colorBuffer.setDevice(device);\n            /* eslint-disable no-bitwise */\n\n            /* eslint-disable no-undef */\n\n            colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n            /* eslint-enable no-bitwise */\n\n            /* eslint-enable no-undef */\n\n            cmdEnc = model.device.createCommandEncoder();\n            cmdEnc.copyTextureToBuffer({\n              texture: texture.getHandle()\n            }, {\n              buffer: colorBuffer.getHandle(),\n              bytesPerRow: 8 * result.colorBufferWidth,\n              rowsPerImage: result.height\n            }, {\n              width: result.width,\n              height: result.height,\n              depthOrArrayLayers: 1\n            });\n            device.submitCommandEncoder(cmdEnc);\n            /* eslint-disable no-undef */\n\n            cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\n            _context2.next = 14;\n            return cLoad;\n\n          case 14:\n            /* eslint-enable no-undef */\n            result.colorValues = new Uint16Array(colorBuffer.getMappedRange().slice());\n            colorBuffer.unmap(); // repack the array\n\n            tmparray = new Uint8ClampedArray(result.height * result.width * 4);\n\n            for (y = 0; y < result.height; y++) {\n              for (x = 0; x < result.width; x++) {\n                doffset = (y * result.width + x) * 4;\n                soffset = (y * result.colorBufferWidth + x) * 4;\n                tmparray[doffset] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset]);\n                tmparray[doffset + 1] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 1]);\n                tmparray[doffset + 2] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 2]);\n                tmparray[doffset + 3] = 255.0 * HalfFloat.fromHalf(result.colorValues[soffset + 3]);\n              }\n            }\n\n            result.colorValues = tmparray;\n            return _context2.abrupt(\"return\", result);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  publicAPI.createSelector = function () {\n    var ret = vtkWebGPUHardwareSelector.newInstance();\n    ret.setWebGPURenderWindow(publicAPI);\n    return ret;\n  };\n\n  publicAPI.delete = macro.chain(publicAPI.delete, publicAPI.setViewStream);\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  initialized: false,\n  context: null,\n  adapter: null,\n  device: null,\n  canvas: null,\n  cursorVisibility: true,\n  cursor: 'pointer',\n  containerSize: null,\n  renderPasses: [],\n  notifyStartCaptureImage: false,\n  imageFormat: 'image/png',\n  useOffScreen: false,\n  useBackgroundImage: false,\n  nextPropID: 1,\n  xrSupported: false,\n  presentationFormat: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Create internal instances\n\n  model.canvas = document.createElement('canvas');\n  model.canvas.style.width = '100%'; // Create internal bgImage\n\n  model.bgImage = new Image();\n  model.bgImage.style.position = 'absolute';\n  model.bgImage.style.left = '0';\n  model.bgImage.style.top = '0';\n  model.bgImage.style.width = '100%';\n  model.bgImage.style.height = '100%';\n  model.bgImage.style.zIndex = '-1'; // Inheritance\n\n  vtkRenderWindowViewNode.extend(publicAPI, model, initialValues);\n  model.myFactory = vtkWebGPUViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n  // setup default forward pass rendering\n\n  model.renderPasses[0] = vtkForwardPass.newInstance();\n\n  if (!model.selector) {\n    model.selector = vtkWebGPUHardwareSelector.newInstance();\n    model.selector.setWebGPURenderWindow(publicAPI);\n  }\n\n  macro.event(publicAPI, model, 'imageReady');\n  macro.event(publicAPI, model, 'initialized'); // Build VTK API\n\n  macro.get(publicAPI, model, ['commandEncoder', 'device', 'presentationFormat', 'useBackgroundImage', 'xrSupported']);\n  macro.setGet(publicAPI, model, ['initialized', 'context', 'canvas', 'device', 'renderPasses', 'notifyStartCaptureImage', 'cursor', 'useOffScreen']);\n  macro.setGetArray(publicAPI, model, ['size'], 2); // Object methods\n\n  vtkWebGPURenderWindow(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPURenderWindow'); // ----------------------------------------------------------------------------\n// Register API specific RenderWindow implementation\n// ----------------------------------------------------------------------------\n\nregisterViewConstructor('WebGPU', newInstance); // ----------------------------------------------------------------------------\n\nvar vtkRenderWindow = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkRenderWindow as default, extend, newInstance };\n", "import { newInstance as newInstance$1, obj, get, setGet } from '../../macros.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\nvar forwarded = ['setBindGroup', 'setIndexBuffer', 'setVertexBuffer', 'draw', 'drawIndexed']; // ----------------------------------------------------------------------------\n// vtkWebGPURenderEncoder methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPURenderEncoder(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPURenderEncoder');\n\n  publicAPI.begin = function (encoder) {\n    model.drawCallbacks = [];\n    model.handle = encoder.beginRenderPass(model.description);\n\n    if (model.label) {\n      model.handle.pushDebugGroup(model.label);\n    }\n  };\n\n  publicAPI.end = function () {\n    // loop over registered pipelines and their callbacks\n    for (var i = 0; i < model.drawCallbacks.length; i++) {\n      var pStruct = model.drawCallbacks[i];\n      var pl = pStruct.pipeline;\n      publicAPI.setPipeline(pl);\n\n      for (var cb = 0; cb < pStruct.callbacks.length; cb++) {\n        pStruct.callbacks[cb](publicAPI);\n      }\n    }\n\n    if (model.label) {\n      model.handle.popDebugGroup();\n    }\n\n    model.handle.end();\n    model.boundPipeline = null;\n  };\n\n  publicAPI.setPipeline = function (pl) {\n    if (model.boundPipeline === pl) {\n      return;\n    }\n\n    model.handle.setPipeline(pl.getHandle());\n    var pd = pl.getPipelineDescription(); // check attachment state\n\n    if (model.colorTextureViews.length !== pd.fragment.targets.length) {\n      console.log(\"mismatched attachment counts on pipeline \".concat(pd.fragment.targets.length, \" while encoder has \").concat(model.colorTextureViews.length));\n      console.trace();\n    } else {\n      for (var i = 0; i < model.colorTextureViews.length; i++) {\n        var _model$colorTextureVi;\n\n        var fmt = (_model$colorTextureVi = model.colorTextureViews[i].getTexture()) === null || _model$colorTextureVi === void 0 ? void 0 : _model$colorTextureVi.getFormat();\n\n        if (fmt && fmt !== pd.fragment.targets[i].format) {\n          console.log(\"mismatched attachments for attachment \".concat(i, \" on pipeline \").concat(pd.fragment.targets[i].format, \" while encoder has \").concat(fmt));\n          console.trace();\n        }\n      }\n    } // check depth buffer\n\n\n    if (!model.depthTextureView !== !('depthStencil' in pd)) {\n      console.log('mismatched depth attachments');\n      console.trace();\n    } else if (model.depthTextureView) {\n      var _model$depthTextureVi;\n\n      var dfmt = (_model$depthTextureVi = model.depthTextureView.getTexture()) === null || _model$depthTextureVi === void 0 ? void 0 : _model$depthTextureVi.getFormat();\n\n      if (dfmt && dfmt !== pd.depthStencil.format) {\n        console.log(\"mismatched depth attachments on pipeline \".concat(pd.depthStencil.format, \" while encoder has \").concat(dfmt));\n        console.trace();\n      }\n    }\n\n    model.boundPipeline = pl;\n  };\n\n  publicAPI.replaceShaderCode = function (pipeline) {\n    model.replaceShaderCodeFunction(pipeline);\n  };\n\n  publicAPI.setColorTextureView = function (idx, view) {\n    if (model.colorTextureViews[idx] === view) {\n      return;\n    }\n\n    model.colorTextureViews[idx] = view;\n  };\n\n  publicAPI.activateBindGroup = function (bg) {\n    var device = model.boundPipeline.getDevice();\n    var midx = model.boundPipeline.getBindGroupLayoutCount(bg.getLabel());\n    model.handle.setBindGroup(midx, bg.getBindGroup(device)); // verify bind group layout matches\n\n    var bgl1 = device.getBindGroupLayoutDescription(bg.getBindGroupLayout(device));\n    var bgl2 = device.getBindGroupLayoutDescription(model.boundPipeline.getBindGroupLayout(midx));\n\n    if (bgl1 !== bgl2) {\n      console.log(\"renderEncoder \".concat(model.pipelineHash, \" mismatched bind group layouts bind group has\\n\").concat(bgl1, \"\\n versus pipeline\\n\").concat(bgl2, \"\\n\"));\n      console.trace();\n    }\n  };\n\n  publicAPI.attachTextureViews = function () {\n    // for each texture create a view if we do not already have one\n    for (var i = 0; i < model.colorTextureViews.length; i++) {\n      if (!model.description.colorAttachments[i]) {\n        model.description.colorAttachments[i] = {\n          view: model.colorTextureViews[i].getHandle()\n        };\n      } else {\n        model.description.colorAttachments[i].view = model.colorTextureViews[i].getHandle();\n      }\n    }\n\n    if (model.depthTextureView) {\n      model.description.depthStencilAttachment.view = model.depthTextureView.getHandle();\n    }\n  }; // register pipeline callbacks from a mapper\n\n\n  publicAPI.registerDrawCallback = function (pipeline, cb) {\n    // if there is a matching pipeline just add the cb\n    for (var i = 0; i < model.drawCallbacks.length; i++) {\n      if (model.drawCallbacks[i].pipeline === pipeline) {\n        model.drawCallbacks[i].callbacks.push(cb);\n        return;\n      }\n    }\n\n    model.drawCallbacks.push({\n      pipeline: pipeline,\n      callbacks: [cb]\n    });\n  }; // simple forwarders\n\n\n  var _loop = function _loop(i) {\n    publicAPI[forwarded[i]] = function () {\n      var _model$handle;\n\n      return (_model$handle = model.handle)[forwarded[i]].apply(_model$handle, arguments);\n    };\n  };\n\n  for (var i = 0; i < forwarded.length; i++) {\n    _loop(i);\n  }\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  description: null,\n  handle: null,\n  boundPipeline: null,\n  pipelineHash: null,\n  pipelineSettings: null,\n  replaceShaderCodeFunction: null,\n  depthTextureView: null,\n  label: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  model.description = {\n    colorAttachments: [{\n      view: undefined,\n      loadOp: 'load',\n      storeOp: 'store'\n    }],\n    depthStencilAttachment: {\n      view: undefined,\n      depthLoadOp: 'clear',\n      depthClearValue: 0.0,\n      depthStoreOp: 'store'\n    }\n  }; // default shader code just writes out the computedColor\n\n  model.replaceShaderCodeFunction = function (pipeline) {\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addOutput('vec4<f32>', 'outColor');\n    var code = fDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = computedColor;']).result;\n    fDesc.setCode(code);\n  }; // default pipeline settings\n\n\n  model.pipelineSettings = {\n    primitive: {\n      cullMode: 'none'\n    },\n    depthStencil: {\n      depthWriteEnabled: true,\n      depthCompare: 'greater-equal',\n      format: 'depth32float'\n    },\n    fragment: {\n      targets: [{\n        format: 'rgba16float',\n        blend: {\n          color: {\n            srcFactor: 'src-alpha',\n            dstFactor: 'one-minus-src-alpha'\n          },\n          alpha: {\n            srcfactor: 'one',\n            dstFactor: 'one-minus-src-alpha'\n          }\n        }\n      }]\n    }\n  };\n  model.colorTextureViews = [];\n  get(publicAPI, model, ['boundPipeline', 'colorTextureViews']);\n  setGet(publicAPI, model, ['depthTextureView', 'description', 'handle', 'label', 'pipelineHash', 'pipelineSettings', 'replaceShaderCodeFunction']); // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPURenderEncoder(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPURenderEncoder'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPURenderEncoder$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPURenderEncoder$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPURenderEncoder from './RenderEncoder.js';\nimport vtkWebGPUTexture from './Texture.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\n\nfunction vtkWebGPUOpaquePass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUOpaquePass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (renNode, viewNode) {\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = viewNode;\n    var device = viewNode.getDevice();\n\n    if (!model.renderEncoder) {\n      publicAPI.createRenderEncoder();\n      model.colorTexture = vtkWebGPUTexture.newInstance({\n        label: 'opaquePassColor'\n      });\n      model.colorTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: 'rgba16float',\n\n        /* eslint-disable no-undef */\n\n        /* eslint-disable no-bitwise */\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\n      });\n      var ctView = model.colorTexture.createView('opaquePassColorTexture');\n      model.renderEncoder.setColorTextureView(0, ctView);\n      model.depthFormat = 'depth32float';\n      model.depthTexture = vtkWebGPUTexture.newInstance({\n        label: 'opaquePassDepth'\n      });\n      model.depthTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: model.depthFormat,\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\n      });\n      var dView = model.depthTexture.createView('opaquePassDepthTexture');\n      model.renderEncoder.setDepthTextureView(dView);\n    } else {\n      model.colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\n      model.depthTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\n    }\n\n    model.renderEncoder.attachTextureViews();\n    publicAPI.setCurrentOperation('opaquePass');\n    renNode.setRenderEncoder(model.renderEncoder);\n    renNode.traverse(publicAPI);\n  };\n\n  publicAPI.getColorTextureView = function () {\n    return model.renderEncoder.getColorTextureViews()[0];\n  };\n\n  publicAPI.getDepthTextureView = function () {\n    return model.renderEncoder.getDepthTextureView();\n  };\n\n  publicAPI.createRenderEncoder = function () {\n    model.renderEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'OpaquePass'\n    }); // default settings are fine for this\n\n    model.renderEncoder.setPipelineHash('op');\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  renderEncoder: null,\n  colorTexture: null,\n  depthTexture: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['colorTexture', 'depthTexture']); // Object methods\n\n  vtkWebGPUOpaquePass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUOpaquePass'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUOpaquePass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUOpaquePass$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUTexture from './Texture.js';\nimport vtkWebGPURenderEncoder from './RenderEncoder.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\n\nvar oitpFragTemplate = \"\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  var tcoord: vec2<i32> = vec2<i32>(i32(input.fragPos.x), i32(input.fragPos.y));\\n  var reveal: f32 = textureLoad(oitpAccumTexture, tcoord, 0).r;\\n  if (reveal == 1.0) { discard; }\\n  var tcolor: vec4<f32> = textureLoad(oitpColorTexture, tcoord, 0);\\n  var total: f32 = max(tcolor.a, 0.01);\\n  var computedColor: vec4<f32> = vec4<f32>(tcolor.r/total, tcolor.g/total, tcolor.b/total, 1.0 - reveal);\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\";\n\nfunction vtkWebGPUOrderIndependentTranslucentPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUOrderIndependentTranslucentPass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (renNode, viewNode) {\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = viewNode;\n    var device = viewNode.getDevice();\n\n    if (!model.translucentRenderEncoder) {\n      publicAPI.createRenderEncoder();\n      publicAPI.createFinalEncoder();\n      model.translucentColorTexture = vtkWebGPUTexture.newInstance({\n        label: 'translucentPassColor'\n      });\n      model.translucentColorTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: 'rgba16float',\n\n        /* eslint-disable no-undef */\n\n        /* eslint-disable no-bitwise */\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n      });\n      var v1 = model.translucentColorTexture.createView('oitpColorTexture');\n      model.translucentRenderEncoder.setColorTextureView(0, v1);\n      model.translucentAccumulateTexture = vtkWebGPUTexture.newInstance({\n        label: 'translucentPassAccumulate'\n      });\n      model.translucentAccumulateTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: 'r16float',\n\n        /* eslint-disable no-undef */\n\n        /* eslint-disable no-bitwise */\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n      });\n      var v2 = model.translucentAccumulateTexture.createView('oitpAccumTexture');\n      model.translucentRenderEncoder.setColorTextureView(1, v2);\n      model.fullScreenQuad = vtkWebGPUFullScreenQuad.newInstance();\n      model.fullScreenQuad.setDevice(viewNode.getDevice());\n      model.fullScreenQuad.setPipelineHash('oitpfsq');\n      model.fullScreenQuad.setTextureViews(model.translucentRenderEncoder.getColorTextureViews());\n      model.fullScreenQuad.setFragmentShaderTemplate(oitpFragTemplate);\n    } else {\n      model.translucentColorTexture.resizeToMatch(model.colorTextureView.getTexture());\n      model.translucentAccumulateTexture.resizeToMatch(model.colorTextureView.getTexture());\n    }\n\n    model.translucentRenderEncoder.setDepthTextureView(model.depthTextureView);\n    model.translucentRenderEncoder.attachTextureViews();\n    publicAPI.setCurrentOperation('translucentPass');\n    renNode.setRenderEncoder(model.translucentRenderEncoder);\n    renNode.traverse(publicAPI);\n    publicAPI.finalPass(viewNode, renNode);\n  };\n\n  publicAPI.finalPass = function (viewNode, renNode) {\n    model.translucentFinalEncoder.setColorTextureView(0, model.colorTextureView);\n    model.translucentFinalEncoder.attachTextureViews();\n    model.translucentFinalEncoder.begin(viewNode.getCommandEncoder());\n    renNode.scissorAndViewport(model.translucentFinalEncoder);\n    model.fullScreenQuad.prepareAndDraw(model.translucentFinalEncoder);\n    model.translucentFinalEncoder.end();\n  };\n\n  publicAPI.getTextures = function () {\n    return [model.translucentColorTexture, model.translucentAccumulateTexture];\n  };\n\n  publicAPI.createRenderEncoder = function () {\n    model.translucentRenderEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'translucentRender'\n    });\n    var rDesc = model.translucentRenderEncoder.getDescription();\n    rDesc.colorAttachments = [{\n      view: undefined,\n      clearValue: [0.0, 0.0, 0.0, 0.0],\n      loadOp: 'clear',\n      storeOp: 'store'\n    }, {\n      view: undefined,\n      clearValue: [1.0, 0.0, 0.0, 0.0],\n      loadOp: 'clear',\n      storeOp: 'store'\n    }];\n    rDesc.depthStencilAttachment = {\n      view: undefined,\n      depthLoadOp: 'load',\n      depthStoreOp: 'store'\n    };\n    model.translucentRenderEncoder.setReplaceShaderCodeFunction(function (pipeline) {\n      var fDesc = pipeline.getShaderDescription('fragment');\n      fDesc.addOutput('vec4<f32>', 'outColor');\n      fDesc.addOutput('f32', 'outAccum');\n      fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\n      var code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', [// very simple depth weighting in w z ranges from 1.0 near to 0.0\n      'var w: f32 = computedColor.a * pow(0.1 + input.fragPos.z, 2.0);', 'output.outColor = vec4<f32>(computedColor.rgb*w, w);', 'output.outAccum = computedColor.a;']).result;\n      fDesc.setCode(code);\n    });\n    model.translucentRenderEncoder.setPipelineHash('oitpr');\n    model.translucentRenderEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      depthStencil: {\n        depthWriteEnabled: false,\n        depthCompare: 'greater',\n        format: 'depth32float'\n      },\n      fragment: {\n        targets: [{\n          format: 'rgba16float',\n          blend: {\n            color: {\n              srcFactor: 'one',\n              dstFactor: 'one'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one'\n            }\n          }\n        }, {\n          format: 'r16float',\n          blend: {\n            color: {\n              srcFactor: 'zero',\n              dstFactor: 'one-minus-src'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n  };\n\n  publicAPI.createFinalEncoder = function () {\n    model.translucentFinalEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'translucentFinal'\n    });\n    model.translucentFinalEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        loadOp: 'load',\n        storeOp: 'store'\n      }]\n    });\n    model.translucentFinalEncoder.setReplaceShaderCodeFunction(function (pipeline) {\n      var fDesc = pipeline.getShaderDescription('fragment');\n      fDesc.addOutput('vec4<f32>', 'outColor');\n      fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\n      var code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<f32>(computedColor.rgb, computedColor.a);']).result;\n      fDesc.setCode(code);\n    });\n    model.translucentFinalEncoder.setPipelineHash('oitpf');\n    model.translucentFinalEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: 'rgba16float',\n          blend: {\n            color: {\n              srcFactor: 'src-alpha',\n              dstFactor: 'one-minus-src-alpha'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  colorTextureView: null,\n  depthTextureView: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['colorTextureView', 'depthTextureView']); // Object methods\n\n  vtkWebGPUOrderIndependentTranslucentPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUOrderIndependentTranslucentPass'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUOrderIndepenentTranslucentPass = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUOrderIndepenentTranslucentPass as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport { mat4 } from 'gl-matrix';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUStorageBuffer from './StorageBuffer.js';\nimport vtkWebGPUSampler from './Sampler.js';\nimport vtkWebGPUTypes from './Types.js';\nimport { BlendMode } from '../Core/VolumeMapper/Constants.js';\n\nvar volFragTemplate = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::Volume::TraverseDec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\nfn getTextureValue(vTex: texture_3d<f32>, tpos: vec4<f32>) -> f32\\n{\\n  // todo multicomponent support\\n  return textureSampleLevel(vTex, clampSampler, tpos.xyz, 0.0).r;\\n}\\n\\nfn getGradient(vTex: texture_3d<f32>, tpos: vec4<f32>, vNum: i32, scalar: f32) -> vec4<f32>\\n{\\n  var result: vec4<f32>;\\n\\n  var tstep: vec4<f32> = volumeSSBO.values[vNum].tstep;\\n  result.x = getTextureValue(vTex, tpos + vec4<f32>(tstep.x, 0.0, 0.0, 1.0)) - scalar;\\n  result.y = getTextureValue(vTex, tpos + vec4<f32>(0.0, tstep.y, 0.0, 1.0)) - scalar;\\n  result.z = getTextureValue(vTex, tpos + vec4<f32>(0.0, 0.0, tstep.z, 1.0)) - scalar;\\n  result.w = 0.0;\\n\\n  // divide by spacing as that is our delta\\n  result = result / volumeSSBO.values[vNum].spacing;\\n  // now we have a gradient in unit tcoords\\n\\n  var grad: f32 = length(result.xyz);\\n  if (grad > 0.0)\\n  {\\n    // rotate to View Coords, needed for lighting and shading\\n    var nMat: mat4x4<f32> = rendererUBO.SCVCMatrix * volumeSSBO.values[vNum].planeNormals;\\n    result = nMat * result;\\n    result = result / length(result);\\n  }\\n\\n  // store gradient magnitude in .w\\n  result.w = grad;\\n\\n  return result;\\n}\\n\\nfn processVolume(vTex: texture_3d<f32>, vNum: i32, cNum: i32, posSC: vec4<f32>, tfunRows: f32) -> vec4<f32>\\n{\\n  var outColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);\\n\\n  // convert to tcoords and reject if outside the volume\\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*posSC;\\n  if (tpos.x < 0.0 || tpos.y < 0.0 || tpos.z < 0.0 ||\\n      tpos.x > 1.0 || tpos.y > 1.0 || tpos.z > 1.0) { return outColor; }\\n\\n  var scalar: f32 = getTextureValue(vTex, tpos);\\n\\n  var coord: vec2<f32> =\\n    vec2<f32>(scalar * componentSSBO.values[cNum].cScale + componentSSBO.values[cNum].cShift,\\n      (0.5 + 2.0 * f32(vNum)) / tfunRows);\\n  var color: vec4<f32> = textureSampleLevel(tfunTexture, clampSampler, coord, 0.0);\\n\\n  var gofactor: f32 = 1.0;\\n  var normal: vec4<f32> = vec4<f32>(0.0,0.0,0.0,0.0);\\n  if (componentSSBO.values[cNum].gomin <  1.0 || volumeSSBO.values[vNum].shade[0] > 0.0)\\n  {\\n    normal = getGradient(vTex, tpos, vNum, scalar);\\n    if (componentSSBO.values[cNum].gomin <  1.0)\\n    {\\n      gofactor = clamp(normal.a*componentSSBO.values[cNum].goScale + componentSSBO.values[cNum].goShift,\\n      componentSSBO.values[cNum].gomin, componentSSBO.values[cNum].gomax);\\n    }\\n  }\\n\\n  coord.x = (scalar * componentSSBO.values[cNum].oScale + componentSSBO.values[cNum].oShift);\\n  var opacity: f32 = textureSampleLevel(ofunTexture, clampSampler, coord, 0.0).r;\\n\\n  if (volumeSSBO.values[vNum].shade[0] > 0.0)\\n  {\\n    color = color*abs(normal.z);\\n  }\\n\\n  outColor = vec4<f32>(color.rgb, gofactor * opacity);\\n\\n  return outColor;\\n}\\n\\n// adjust the start and end point of a raycast such that it intersects the unit cube.\\n// This function is used to take a raycast starting point and step vector\\n// and numSteps and return the startijng and ending steps for intersecting the\\n// unit cube. Recall for a 3D texture, the unit cube is the range of texture coordsinates\\n// that have valid values. So this funtion can be used to take a ray in texture coordinates\\n// and bound it to intersecting the texture.\\n//\\nfn adjustBounds(tpos: vec4<f32>, tstep: vec4<f32>, numSteps: f32) -> vec2<f32>\\n{\\n  var result: vec2<f32> = vec2<f32>(0.0, numSteps);\\n  var tpos2: vec4<f32> = tpos + tstep*numSteps;\\n\\n  // move tpos to the start of the volume\\n  var adjust: f32 =\\n    min(\\n      max(tpos.x/tstep.x, (tpos.x - 1.0)/tstep.x),\\n      min(\\n        max((tpos.y - 1.0)/tstep.y, tpos.y/tstep.y),\\n        max((tpos.z - 1.0)/tstep.z, tpos.z/tstep.z)));\\n  if (adjust < 0.0)\\n  {\\n    result.x = result.x - adjust;\\n  }\\n\\n  // adjust length to the end\\n  adjust =\\n    max(\\n      min(tpos2.x/tstep.x, (tpos2.x - 1.0)/tstep.x),\\n      max(\\n        min((tpos2.y - 1.0)/tstep.y, tpos2.y/tstep.y),\\n        min((tpos2.z - 1.0)/tstep.z, tpos2.z/tstep.z)));\\n  if (adjust > 0.0)\\n  {\\n    result.y = result.y - adjust;\\n  }\\n\\n  return result;\\n}\\n\\nfn getSimpleColor(scalar: f32, vNum: i32, cNum: i32) -> vec4<f32>\\n{\\n  // how many rows (tfuns) do we have in our tfunTexture\\n  var tfunRows: f32 = f32(textureDimensions(tfunTexture).y);\\n\\n  var coord: vec2<f32> =\\n    vec2<f32>(scalar * componentSSBO.values[cNum].cScale + componentSSBO.values[cNum].cShift,\\n      (0.5 + 2.0 * f32(vNum)) / tfunRows);\\n  var color: vec4<f32> = textureSampleLevel(tfunTexture, clampSampler, coord, 0.0);\\n  coord.x = (scalar * componentSSBO.values[cNum].oScale + componentSSBO.values[cNum].oShift);\\n  var opacity: f32 = textureSampleLevel(ofunTexture, clampSampler, coord, 0.0).r;\\n  return vec4<f32>(color.rgb, opacity);\\n}\\n\\nfn traverseMax(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\\n{\\n  // convert to tcoords and reject if outside the volume\\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\\n  var tstep: vec4<f32> = tpos2 - tpos;\\n\\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\\n\\n  // did we hit anything\\n  if (rayBounds.x >= rayBounds.y)\\n  {\\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\\n    return;\\n  }\\n\\n  tpos = tpos + tstep*rayBounds.x;\\n  var curDist: f32 = rayBounds.x;\\n  var maxVal: f32 = -1.0e37;\\n  loop\\n  {\\n    var scalar: f32 = getTextureValue(vTex, tpos);\\n    if (scalar > maxVal)\\n    {\\n      maxVal = scalar;\\n    }\\n\\n    // increment position\\n    curDist = curDist + 1.0;\\n    tpos = tpos + tstep;\\n\\n    // check if we have reached a terminating condition\\n    if (curDist > rayBounds.y) { break; }\\n  }\\n\\n  // process to get the color and opacity\\n  traverseVals[vNum] = getSimpleColor(maxVal, vNum, cNum);\\n}\\n\\nfn traverseMin(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\\n{\\n  // convert to tcoords and reject if outside the volume\\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\\n  var tstep: vec4<f32> = tpos2 - tpos;\\n\\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\\n\\n  // did we hit anything\\n  if (rayBounds.x >= rayBounds.y)\\n  {\\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\\n    return;\\n  }\\n\\n  tpos = tpos + tstep*rayBounds.x;\\n  var curDist: f32 = rayBounds.x;\\n  var minVal: f32 = 1.0e37;\\n  loop\\n  {\\n    var scalar: f32 = getTextureValue(vTex, tpos);\\n    if (scalar < minVal)\\n    {\\n      minVal = scalar;\\n    }\\n\\n    // increment position\\n    curDist = curDist + 1.0;\\n    tpos = tpos + tstep;\\n\\n    // check if we have reached a terminating condition\\n    if (curDist > rayBounds.y) { break; }\\n  }\\n\\n  // process to get the color and opacity\\n  traverseVals[vNum] = getSimpleColor(minVal, vNum, cNum);\\n}\\n\\nfn traverseAverage(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\\n{\\n  // convert to tcoords and reject if outside the volume\\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\\n  var tstep: vec4<f32> = tpos2 - tpos;\\n\\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\\n\\n  // did we hit anything\\n  if (rayBounds.x >= rayBounds.y)\\n  {\\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\\n    return;\\n  }\\n\\n  let ipRange: vec4<f32> = volumeSSBO.values[vNum].ipScalarRange;\\n  tpos = tpos + tstep*rayBounds.x;\\n  var curDist: f32 = rayBounds.x;\\n  var avgVal: f32 = 0.0;\\n  var sampleCount: f32 = 0.0;\\n  loop\\n  {\\n    var sample: f32 = getTextureValue(vTex, tpos);\\n    // right now leave filtering off until WebGL changes get merged\\n    // if (ipRange.z == 0.0 || sample >= ipRange.x && sample <= ipRange.y)\\n    // {\\n      avgVal = avgVal + sample;\\n      sampleCount = sampleCount + 1.0;\\n    // }\\n\\n    // increment position\\n    curDist = curDist + 1.0;\\n    tpos = tpos + tstep;\\n\\n    // check if we have reached a terminating condition\\n    if (curDist > rayBounds.y) { break; }\\n  }\\n\\n  if (sampleCount <= 0.0)\\n  {\\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\\n  }\\n\\n  // process to get the color and opacity\\n  traverseVals[vNum] = getSimpleColor(avgVal/sampleCount, vNum, cNum);\\n}\\n\\nfn traverseAdditive(vTex: texture_3d<f32>, vNum: i32, cNum: i32, rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>)\\n{\\n  // convert to tcoords and reject if outside the volume\\n  var numSteps: f32 = rayLengthSC/mapperUBO.SampleDistance;\\n  var tpos: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*minPosSC;\\n  var tpos2: vec4<f32> = volumeSSBO.values[vNum].SCTCMatrix*(minPosSC + rayStepSC);\\n  var tstep: vec4<f32> = tpos2 - tpos;\\n\\n  var rayBounds: vec2<f32> = adjustBounds(tpos, tstep, numSteps);\\n\\n  // did we hit anything\\n  if (rayBounds.x >= rayBounds.y)\\n  {\\n    traverseVals[vNum] = vec4<f32>(0.0,0.0,0.0,0.0);\\n    return;\\n  }\\n\\n  let ipRange: vec4<f32> = volumeSSBO.values[vNum].ipScalarRange;\\n  tpos = tpos + tstep*rayBounds.x;\\n  var curDist: f32 = rayBounds.x;\\n  var sumVal: f32 = 0.0;\\n  loop\\n  {\\n    var sample: f32 = getTextureValue(vTex, tpos);\\n    // right now leave filtering off until WebGL changes get merged\\n    // if (ipRange.z == 0.0 || sample >= ipRange.x && sample <= ipRange.y)\\n    // {\\n      sumVal = sumVal + sample;\\n    // }\\n\\n    // increment position\\n    curDist = curDist + 1.0;\\n    tpos = tpos + tstep;\\n\\n    // check if we have reached a terminating condition\\n    if (curDist > rayBounds.y) { break; }\\n  }\\n\\n  // process to get the color and opacity\\n  traverseVals[vNum] = getSimpleColor(sumVal, vNum, cNum);\\n}\\n\\nfn composite(rayLengthSC: f32, minPosSC: vec4<f32>, rayStepSC: vec4<f32>) -> vec4<f32>\\n{\\n  // initial ray position is at the beginning\\n  var rayPosSC: vec4<f32> = minPosSC;\\n\\n  // how many rows (tfuns) do we have in our tfunTexture\\n  var tfunRows: f32 = f32(textureDimensions(tfunTexture).y);\\n\\n  var curDist: f32 = 0.0;\\n  var computedColor: vec4<f32> = vec4<f32>(0.0, 0.0, 0.0, 0.0);\\n  var sampleColor: vec4<f32>;\\n//VTK::Volume::TraverseCalls\\n\\n  loop\\n  {\\n    // for each volume, sample and accumulate color\\n//VTK::Volume::CompositeCalls\\n\\n    // increment position\\n    curDist = curDist + mapperUBO.SampleDistance;\\n    rayPosSC = rayPosSC + rayStepSC;\\n\\n    // check if we have reached a terminating condition\\n    if (curDist > rayLengthSC) { break; }\\n    if (computedColor.a > 0.98) { break; }\\n  }\\n  return computedColor;\\n}\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  var rayMax: f32 = textureSampleLevel(maxTexture, clampSampler, input.tcoordVS, 0.0).r;\\n  var rayMin: f32 = textureSampleLevel(minTexture, clampSampler, input.tcoordVS, 0.0).r;\\n\\n  // discard empty rays\\n  if (rayMax <= rayMin) { discard; }\\n  else\\n  {\\n    // compute start and end ray positions in view coordinates\\n    var minPosSC: vec4<f32> = rendererUBO.PCSCMatrix*vec4<f32>(2.0 * input.tcoordVS.x - 1.0, 1.0 - 2.0 * input.tcoordVS.y, rayMax, 1.0);\\n    minPosSC = minPosSC * (1.0 / minPosSC.w);\\n    var maxPosSC: vec4<f32> = rendererUBO.PCSCMatrix*vec4<f32>(2.0 * input.tcoordVS.x - 1.0, 1.0 - 2.0 * input.tcoordVS.y, rayMin, 1.0);\\n    maxPosSC = maxPosSC * (1.0 / maxPosSC.w);\\n\\n    var rayLengthSC: f32 = distance(minPosSC.xyz, maxPosSC.xyz);\\n    var rayStepSC: vec4<f32> = (maxPosSC - minPosSC)*(mapperUBO.SampleDistance/rayLengthSC);\\n    rayStepSC.w = 0.0;\\n\\n    var computedColor: vec4<f32>;\\n\\n//VTK::Volume::Loop\\n\\n//VTK::RenderEncoder::Impl\\n  }\\n\\n  return output;\\n}\\n\";\nvar tmpMat4 = new Float64Array(16);\nvar tmp2Mat4 = new Float64Array(16); // ----------------------------------------------------------------------------\n// vtkWebGPUVolumePassFSQ methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUVolumePassFSQ(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVolumePassFSQ');\n\n  publicAPI.replaceShaderPosition = function (hash, pipeline, vertexInput) {\n    var vDesc = pipeline.getShaderDescription('vertex');\n    vDesc.addBuiltinOutput('vec4<f32>', '@builtin(position) Position');\n    var code = vDesc.getCode();\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Position::Impl', ['output.tcoordVS = vec2<f32>(vertexBC.x * 0.5 + 0.5, 1.0 - vertexBC.y * 0.5 - 0.5);', 'output.Position = vec4<f32>(vertexBC, 1.0);']).result;\n    vDesc.setCode(code);\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\n  };\n\n  model.shaderReplacements.set('replaceShaderPosition', publicAPI.replaceShaderPosition);\n\n  publicAPI.replaceShaderVolume = function (hash, pipeline, vertexInput) {\n    var fDesc = pipeline.getShaderDescription('fragment');\n    var code = fDesc.getCode();\n    var compositeCalls = [];\n    var traverseCalls = [];\n\n    for (var i = 0; i < model.volumes.length; i++) {\n      // todo pass rowPos\n      var blendMode = model.volumes[i].getRenderable().getMapper().getBlendMode();\n\n      if (blendMode === BlendMode.COMPOSITE_BLEND) {\n        compositeCalls.push(\"    sampleColor = processVolume(volTexture\".concat(i, \", \").concat(i, \", \").concat(model.rowStarts[i], \", rayPosSC, tfunRows);\"));\n        compositeCalls.push(\"    computedColor = vec4<f32>(\\n          sampleColor.a * sampleColor.rgb * (1.0 - computedColor.a) + computedColor.rgb,\\n          (1.0 - computedColor.a)*sampleColor.a + computedColor.a);\");\n      } else {\n        traverseCalls.push(\"  sampleColor = traverseVals[\".concat(i, \"];\"));\n        traverseCalls.push(\"  computedColor = vec4<f32>(\\n          sampleColor.a * sampleColor.rgb * (1.0 - computedColor.a) + computedColor.rgb,\\n          (1.0 - computedColor.a)*sampleColor.a + computedColor.a);\");\n      }\n    }\n\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::CompositeCalls', compositeCalls).result;\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::TraverseCalls', traverseCalls).result;\n    code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::TraverseDec', [\"var<private> traverseVals: array<vec4<f32>,\".concat(model.volumes.length, \">;\")]).result; // call the full and partial methods as needed\n\n    var compositeWhileTraversing = false;\n\n    for (var vidx = 0; vidx < model.volumes.length; vidx++) {\n      var _blendMode = model.volumes[vidx].getRenderable().getMapper().getBlendMode();\n\n      if (_blendMode === BlendMode.COMPOSITE_BLEND) {\n        compositeWhileTraversing = true;\n      } else if (_blendMode === BlendMode.MAXIMUM_INTENSITY_BLEND) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::Loop', [\"    traverseMax(volTexture\".concat(vidx, \", \").concat(vidx, \", \").concat(vidx, \", rayLengthSC, minPosSC, rayStepSC);\"), \"    computedColor = traverseVals[\".concat(vidx, \"];\"), '//VTK::Volume::Loop']).result;\n      } else if (_blendMode === BlendMode.MINIMUM_INTENSITY_BLEND) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::Loop', [\"    traverseMin(volTexture\".concat(vidx, \", \").concat(vidx, \", \").concat(vidx, \", rayLengthSC, minPosSC, rayStepSC);\"), \"    computedColor = traverseVals[\".concat(vidx, \"];\"), '//VTK::Volume::Loop']).result;\n      } else if (_blendMode === BlendMode.AVERAGE_INTENSITY_BLEND) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::Loop', [\"    traverseAverage(volTexture\".concat(vidx, \", \").concat(vidx, \", \").concat(vidx, \", rayLengthSC, minPosSC, rayStepSC);\"), \"    computedColor = traverseVals[\".concat(vidx, \"];\"), '//VTK::Volume::Loop']).result;\n      } else if (_blendMode === BlendMode.ADDITIVE_INTENSITY_BLEND) {\n        code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::Loop', [\"    traverseAdditive(volTexture\".concat(vidx, \", \").concat(vidx, \", \").concat(vidx, \", rayLengthSC, minPosSC, rayStepSC);\"), \"    computedColor = traverseVals[\".concat(vidx, \"];\"), '//VTK::Volume::Loop']).result;\n      }\n    }\n\n    if (compositeWhileTraversing) {\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::Volume::Loop', ['    computedColor = composite(rayLengthSC, minPosSC, rayStepSC);']).result;\n    }\n\n    fDesc.setCode(code);\n  };\n\n  model.shaderReplacements.set('replaceShaderVolume', publicAPI.replaceShaderVolume);\n\n  publicAPI.updateLUTImage = function (device) {\n    // depends on\n    // - volumes array (length and values) - mtime\n    // - tfun arrays - renderable/property mtime\n    var mtime = publicAPI.getMTime();\n\n    for (var i = 0; i < model.volumes.length; i++) {\n      var vol = model.volumes[i].getRenderable();\n      var image = vol.getMapper().getInputData();\n      mtime = Math.max(mtime, vol.getMTime(), image.getMTime());\n    }\n\n    if (mtime < model.lutBuildTime.getMTime()) {\n      return;\n    } // first determine how large the image should be\n\n\n    model.numRows = 0;\n    model.rowStarts = [];\n\n    for (var vidx = 0; vidx < model.volumes.length; vidx++) {\n      model.rowStarts.push(model.numRows);\n      var webgpuvol = model.volumes[vidx];\n      var actor = webgpuvol.getRenderable();\n      var volMapr = actor.getMapper();\n      var vprop = actor.getProperty();\n\n      var _image = volMapr.getInputData();\n\n      var scalars = _image.getPointData() && _image.getPointData().getScalars();\n\n      var numComp = scalars.getNumberOfComponents();\n      var iComps = vprop.getIndependentComponents();\n      var numIComps = iComps ? numComp : 1;\n      model.numRows += numIComps;\n    } // allocate the image array\n\n\n    var colorArray = new Uint8Array(model.numRows * 2 * model.rowLength * 4);\n    var opacityArray = new Float32Array(model.numRows * 2 * model.rowLength);\n    var imgRow = 0;\n    var tmpTable = new Float32Array(model.rowLength * 3);\n    var rowLength = model.rowLength;\n\n    for (var _vidx = 0; _vidx < model.volumes.length; _vidx++) {\n      var _webgpuvol = model.volumes[_vidx];\n\n      var _actor = _webgpuvol.getRenderable();\n\n      var _volMapr = _actor.getMapper();\n\n      var _vprop = _actor.getProperty();\n\n      var _image2 = _volMapr.getInputData();\n\n      var _scalars = _image2.getPointData() && _image2.getPointData().getScalars();\n\n      var _numComp = _scalars.getNumberOfComponents();\n\n      var _iComps = _vprop.getIndependentComponents();\n\n      var _numIComps = _iComps ? _numComp : 1;\n\n      for (var c = 0; c < _numIComps; ++c) {\n        var cfun = _vprop.getRGBTransferFunction(c);\n\n        var cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], rowLength, tmpTable, 1);\n        var ioffset = imgRow * rowLength * 4;\n\n        for (var _i = 0; _i < rowLength; ++_i) {\n          colorArray[ioffset + _i * 4] = 255.0 * tmpTable[_i * 3];\n          colorArray[ioffset + _i * 4 + 1] = 255.0 * tmpTable[_i * 3 + 1];\n          colorArray[ioffset + _i * 4 + 2] = 255.0 * tmpTable[_i * 3 + 2];\n          colorArray[ioffset + _i * 4 + 3] = 255.0;\n\n          for (var co = 0; co < 4; co++) {\n            colorArray[ioffset + (rowLength + _i) * 4 + co] = colorArray[ioffset + _i * 4 + co];\n          }\n        }\n\n        var ofun = _vprop.getScalarOpacity(c);\n\n        var opacityFactor = model.sampleDist / _vprop.getScalarOpacityUnitDistance(c);\n\n        var oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], rowLength, tmpTable, 1); // adjust for sample distance etc\n\n        ioffset = imgRow * rowLength;\n\n        for (var _i2 = 0; _i2 < rowLength; ++_i2) {\n          opacityArray[ioffset + _i2] = 1.0 - Math.pow(1.0 - tmpTable[_i2], opacityFactor);\n          opacityArray[ioffset + _i2 + rowLength] = opacityArray[ioffset + _i2];\n        }\n\n        imgRow += 2;\n      }\n    }\n\n    {\n      var treq = {\n        nativeArray: colorArray,\n        width: model.rowLength,\n        height: model.numRows * 2,\n        depth: 1,\n        format: 'rgba8unorm'\n      };\n      var newTex = device.getTextureManager().getTexture(treq);\n      var tview = newTex.createView('tfunTexture');\n      model.textureViews[2] = tview;\n    }\n    {\n      var _treq = {\n        nativeArray: opacityArray,\n        width: model.rowLength,\n        height: model.numRows * 2,\n        depth: 1,\n        format: 'r16float'\n      };\n\n      var _newTex = device.getTextureManager().getTexture(_treq);\n\n      var _tview = _newTex.createView('ofunTexture');\n\n      model.textureViews[3] = _tview;\n    }\n    model.lutBuildTime.modified();\n  };\n\n  publicAPI.updateSSBO = function (device) {\n    // if any of\n    // - color or opacity tfun ranges changed - volume Mtime\n    // - any volume matrix changed - volume MTime\n    // - stabilized center changed - ren.stabilizedMTime\n    // - any volume's input data worldtoindex or dimensions changed - input's mtime\n    //\n    var mtime = Math.max(publicAPI.getMTime(), model.WebGPURenderer.getStabilizedTime());\n\n    for (var i = 0; i < model.volumes.length; i++) {\n      var vol = model.volumes[i].getRenderable();\n      var volMapr = vol.getMapper();\n      var image = volMapr.getInputData();\n      mtime = Math.max(mtime, vol.getMTime(), image.getMTime(), volMapr.getMTime());\n    }\n\n    if (mtime < model.SSBO.getSendTime()) {\n      return;\n    } // create the volumeSBBO\n\n\n    var center = model.WebGPURenderer.getStabilizedCenterByReference();\n    model.SSBO.clearData();\n    model.SSBO.setNumberOfInstances(model.volumes.length); // create SCTC matrices  SC -> world -> model -> index -> tcoord\n    //\n    // when doing coord conversions from A to C recall\n    // the order is mat4.mult(AtoC, BtoC, AtoB);\n    //\n\n    var marray = new Float64Array(model.volumes.length * 16);\n    var vPlaneArray = new Float64Array(model.volumes.length * 16);\n    var tstepArray = new Float64Array(model.volumes.length * 4);\n    var shadeArray = new Float64Array(model.volumes.length * 4);\n    var spacingArray = new Float64Array(model.volumes.length * 4);\n    var ipScalarRangeArray = new Float64Array(model.volumes.length * 4);\n\n    for (var vidx = 0; vidx < model.volumes.length; vidx++) {\n      var webgpuvol = model.volumes[vidx];\n      var actor = webgpuvol.getRenderable();\n\n      var _volMapr2 = actor.getMapper();\n\n      var _image3 = _volMapr2.getInputData();\n\n      mat4.identity(tmpMat4);\n      mat4.translate(tmpMat4, tmpMat4, center); // tmpMat4 is now SC->World\n\n      var mcwcmat = actor.getMatrix();\n      mat4.transpose(tmp2Mat4, mcwcmat);\n      mat4.invert(tmp2Mat4, tmp2Mat4); // tmp2Mat4 is now world to model\n\n      mat4.multiply(tmpMat4, tmp2Mat4, tmpMat4); // tmp4Mat is now SC->Model\n      // the method on the data is world to index but the volume is in\n      // model coordinates so really in this context it is model to index\n\n      var modelToIndex = _image3.getWorldToIndex();\n\n      mat4.multiply(tmpMat4, modelToIndex, tmpMat4); // tmpMat4 is now SC -> Index\n\n      var dims = _image3.getDimensions();\n\n      mat4.identity(tmp2Mat4);\n      mat4.scale(tmp2Mat4, tmp2Mat4, [1.0 / dims[0], 1.0 / dims[1], 1.0 / dims[2]]);\n      mat4.multiply(tmpMat4, tmp2Mat4, tmpMat4); // tmpMat4 is now SC -> Tcoord\n\n      for (var j = 0; j < 16; j++) {\n        marray[vidx * 16 + j] = tmpMat4[j];\n      }\n\n      mat4.invert(tmpMat4, tmpMat4); // now it is Tcoord To SC\n\n      for (var _j = 0; _j < 4; _j++) {\n        vPlaneArray[vidx * 16 + _j * 4] = tmpMat4[_j * 4];\n        vPlaneArray[vidx * 16 + _j * 4 + 1] = tmpMat4[_j * 4 + 1];\n        vPlaneArray[vidx * 16 + _j * 4 + 2] = tmpMat4[_j * 4 + 2];\n        vPlaneArray[vidx * 16 + _j * 4 + 3] = 0.0;\n      }\n\n      tstepArray[vidx * 4] = 1.0 / dims[0];\n      tstepArray[vidx * 4 + 1] = 1.0 / dims[1];\n      tstepArray[vidx * 4 + 2] = 1.0 / dims[2];\n      tstepArray[vidx * 4 + 3] = 1.0;\n      shadeArray[vidx * 4] = actor.getProperty().getShade() ? 1.0 : 0.0;\n\n      var spacing = _image3.getSpacing();\n\n      spacingArray[vidx * 4] = spacing[0];\n      spacingArray[vidx * 4 + 1] = spacing[1];\n      spacingArray[vidx * 4 + 2] = spacing[2];\n      spacingArray[vidx * 4 + 3] = 1.0; // handle filteringMode\n\n      var tScale = model.textureViews[vidx + 4].getTexture().getScale();\n\n      var ipScalarRange = _volMapr2.getIpScalarRange();\n\n      ipScalarRangeArray[vidx * 4] = ipScalarRange[0] / tScale;\n      ipScalarRangeArray[vidx * 4 + 1] = ipScalarRange[1] / tScale;\n      ipScalarRangeArray[vidx * 4 + 2] = _volMapr2.getFilterMode();\n    }\n\n    model.SSBO.addEntry('SCTCMatrix', 'mat4x4<f32>');\n    model.SSBO.addEntry('planeNormals', 'mat4x4<f32>');\n    model.SSBO.addEntry('shade', 'vec4<f32>');\n    model.SSBO.addEntry('tstep', 'vec4<f32>');\n    model.SSBO.addEntry('spacing', 'vec4<f32>');\n    model.SSBO.addEntry('ipScalarRange', 'vec4<f32>');\n    model.SSBO.setAllInstancesFromArray('SCTCMatrix', marray);\n    model.SSBO.setAllInstancesFromArray('planeNormals', vPlaneArray);\n    model.SSBO.setAllInstancesFromArray('shade', shadeArray);\n    model.SSBO.setAllInstancesFromArray('tstep', tstepArray);\n    model.SSBO.setAllInstancesFromArray('spacing', spacingArray);\n    model.SSBO.setAllInstancesFromArray('ipScalarRange', ipScalarRangeArray);\n    model.SSBO.send(device); // now create the componentSSBO\n\n    model.componentSSBO.clearData();\n    model.componentSSBO.setNumberOfInstances(model.numRows);\n    var cScaleArray = new Float64Array(model.numRows);\n    var cShiftArray = new Float64Array(model.numRows);\n    var oScaleArray = new Float64Array(model.numRows);\n    var oShiftArray = new Float64Array(model.numRows);\n    var gominArray = new Float64Array(model.numRows);\n    var gomaxArray = new Float64Array(model.numRows);\n    var goshiftArray = new Float64Array(model.numRows);\n    var goscaleArray = new Float64Array(model.numRows);\n    var rowIdx = 0;\n\n    for (var _vidx2 = 0; _vidx2 < model.volumes.length; _vidx2++) {\n      var _webgpuvol2 = model.volumes[_vidx2];\n\n      var _actor2 = _webgpuvol2.getRenderable();\n\n      var _volMapr3 = _actor2.getMapper();\n\n      var vprop = _actor2.getProperty();\n\n      var _image4 = _volMapr3.getInputData();\n\n      var scalars = _image4.getPointData() && _image4.getPointData().getScalars();\n\n      var numComp = scalars.getNumberOfComponents();\n      var iComps = vprop.getIndependentComponents(); // const numIComps = iComps ? numComp : 1;\n      // half float?\n\n      var tformat = model.textureViews[_vidx2 + 4].getTexture().getFormat();\n\n      var tDetails = vtkWebGPUTypes.getDetailsFromTextureFormat(tformat);\n      var halfFloat = tDetails.elementSize === 2 && tDetails.sampleType === 'float';\n      var volInfo = {\n        scale: [255.0],\n        offset: [0.0]\n      };\n\n      if (halfFloat) {\n        volInfo.scale[0] = 1.0;\n      } // three levels of shift scale combined into one\n      // for performance in the fragment shader\n\n\n      for (var compIdx = 0; compIdx < numComp; compIdx++) {\n        var target = iComps ? compIdx : 0;\n        var sscale = volInfo.scale[compIdx];\n        var ofun = vprop.getScalarOpacity(target);\n        var oRange = ofun.getRange();\n        var oscale = sscale / (oRange[1] - oRange[0]);\n        var oshift = (volInfo.offset[compIdx] - oRange[0]) / (oRange[1] - oRange[0]);\n        oShiftArray[rowIdx] = oshift;\n        oScaleArray[rowIdx] = oscale;\n        var cfun = vprop.getRGBTransferFunction(target);\n        var cRange = cfun.getRange();\n        cShiftArray[rowIdx] = (volInfo.offset[compIdx] - cRange[0]) / (cRange[1] - cRange[0]);\n        cScaleArray[rowIdx] = sscale / (cRange[1] - cRange[0]); // todo sscale for dependent should be based off of the A channel?\n        // not target (which is 0 in that case)\n\n        var useGO = vprop.getUseGradientOpacity(target);\n\n        if (useGO) {\n          var gomin = vprop.getGradientOpacityMinimumOpacity(target);\n          var gomax = vprop.getGradientOpacityMaximumOpacity(target);\n          gominArray[rowIdx] = gomin;\n          gomaxArray[rowIdx] = gomax;\n          var goRange = [vprop.getGradientOpacityMinimumValue(target), vprop.getGradientOpacityMaximumValue(target)];\n          goscaleArray[rowIdx] = sscale * (gomax - gomin) / (goRange[1] - goRange[0]);\n          goshiftArray[rowIdx] = -goRange[0] * (gomax - gomin) / (goRange[1] - goRange[0]) + gomin;\n        } else {\n          gominArray[rowIdx] = 1.0;\n          gomaxArray[rowIdx] = 1.0;\n          goscaleArray[rowIdx] = 0.0;\n          goshiftArray[rowIdx] = 1.0;\n        }\n\n        rowIdx++;\n      }\n    }\n\n    model.componentSSBO.addEntry('cScale', 'f32');\n    model.componentSSBO.addEntry('cShift', 'f32');\n    model.componentSSBO.addEntry('oScale', 'f32');\n    model.componentSSBO.addEntry('oShift', 'f32');\n    model.componentSSBO.addEntry('goShift', 'f32');\n    model.componentSSBO.addEntry('goScale', 'f32');\n    model.componentSSBO.addEntry('gomin', 'f32');\n    model.componentSSBO.addEntry('gomax', 'f32');\n    model.componentSSBO.setAllInstancesFromArray('cScale', cScaleArray);\n    model.componentSSBO.setAllInstancesFromArray('cShift', cShiftArray);\n    model.componentSSBO.setAllInstancesFromArray('oScale', oScaleArray);\n    model.componentSSBO.setAllInstancesFromArray('oShift', oShiftArray);\n    model.componentSSBO.setAllInstancesFromArray('goScale', goscaleArray);\n    model.componentSSBO.setAllInstancesFromArray('goShift', goshiftArray);\n    model.componentSSBO.setAllInstancesFromArray('gomin', gominArray);\n    model.componentSSBO.setAllInstancesFromArray('gomax', gomaxArray);\n    model.componentSSBO.send(device);\n  };\n\n  var superClassUpdateBuffers = publicAPI.updateBuffers;\n\n  publicAPI.updateBuffers = function () {\n    superClassUpdateBuffers(); // compute the min step size\n\n    var sampleDist = model.volumes[0].getRenderable().getMapper().getSampleDistance();\n\n    for (var i = 0; i < model.volumes.length; i++) {\n      var vol = model.volumes[i];\n      var volMapr = vol.getRenderable().getMapper();\n      var sd = volMapr.getSampleDistance();\n\n      if (sd < sampleDist) {\n        sampleDist = sd;\n      }\n    }\n\n    if (model.sampleDist !== sampleDist) {\n      model.sampleDist = sampleDist;\n      model.UBO.setValue('SampleDistance', sampleDist);\n      model.UBO.sendIfNeeded(model.device);\n    } // add in 3d volume textures\n\n\n    for (var vidx = 0; vidx < model.volumes.length; vidx++) {\n      var webgpuvol = model.volumes[vidx];\n      var actor = webgpuvol.getRenderable();\n\n      var _volMapr4 = actor.getMapper();\n\n      var image = _volMapr4.getInputData();\n\n      var newTex = model.device.getTextureManager().getTextureForImageData(image);\n\n      if (!model.textureViews[vidx + 4] || model.textureViews[vidx + 4].getTexture() !== newTex) {\n        var tview = newTex.createView(\"volTexture\".concat(vidx));\n        model.textureViews[vidx + 4] = tview;\n      }\n    } // clear any old leftovers\n\n\n    if (model.volumes.length < model.lastVolumeLength) {\n      // we may have gaps in the array right now so no splice\n      for (var _i3 = model.volumes.length; _i3 < model.lastVolumeLength; _i3++) {\n        model.textureViews.pop();\n      }\n    }\n\n    model.lastVolumeLength = model.volumes.length;\n    publicAPI.updateLUTImage(model.device);\n    publicAPI.updateSSBO(model.device);\n\n    if (!model.clampSampler) {\n      model.clampSampler = vtkWebGPUSampler.newInstance({\n        label: 'clampSampler'\n      });\n      model.clampSampler.create(model.device, {\n        minFilter: 'linear',\n        magFilter: 'linear'\n      });\n    }\n  };\n\n  publicAPI.computePipelineHash = function () {\n    model.pipelineHash = 'volfsq';\n\n    for (var vidx = 0; vidx < model.volumes.length; vidx++) {\n      var blendMode = model.volumes[vidx].getRenderable().getMapper().getBlendMode();\n      model.pipelineHash += \"\".concat(blendMode);\n    }\n  }; // marks modified when needed\n\n\n  publicAPI.setVolumes = function (val) {\n    if (!model.volumes || model.volumes.length !== val.length) {\n      model.volumes = _toConsumableArray(val);\n      publicAPI.modified();\n      return;\n    }\n\n    for (var i = 0; i < val.length; i++) {\n      if (val[i] !== model.volumes[i]) {\n        model.volumes = _toConsumableArray(val);\n        publicAPI.modified();\n        return;\n      }\n    }\n  };\n\n  var superclassGetBindables = publicAPI.getBindables;\n\n  publicAPI.getBindables = function () {\n    var bindables = superclassGetBindables();\n    bindables.push(model.componentSSBO);\n    bindables.push(model.clampSampler);\n    return bindables;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  volumes: null,\n  rowLength: 1024,\n  lastVolumeLength: 0\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Inheritance\n\n  vtkWebGPUFullScreenQuad.extend(publicAPI, model, initialValues);\n  model.fragmentShaderTemplate = volFragTemplate;\n  model.UBO = vtkWebGPUUniformBuffer.newInstance({\n    label: 'mapperUBO'\n  });\n  model.UBO.addEntry('SampleDistance', 'f32');\n  model.SSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'volumeSSBO'\n  });\n  model.componentSSBO = vtkWebGPUStorageBuffer.newInstance({\n    label: 'componentSSBO'\n  });\n  model.lutBuildTime = {};\n  macro.obj(model.lutBuildTime, {\n    mtime: 0\n  }); // Object methods\n\n  vtkWebGPUVolumePassFSQ(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUVolumePassFSQ'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUVolumePassFSQ$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUVolumePassFSQ$1 as default, extend, newInstance };\n", "import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport macro from '../../macros.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport vtkProperty from '../Core/Property.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUSimpleMapper from './SimpleMapper.js';\nimport vtkWebGPURenderEncoder from './RenderEncoder.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUTexture from './Texture.js';\nimport vtkWebGPUUniformBuffer from './UniformBuffer.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUVolumePassFSQ from './VolumePassFSQ.js';\nimport { f as distance2BetweenPoints } from '../../Common/Core/Math/index.js';\n\nvar Representation = vtkProperty.Representation;\nvar BufferUsage = vtkWebGPUBufferManager.BufferUsage,\n    PrimitiveTypes = vtkWebGPUBufferManager.PrimitiveTypes; // The volume rendering pass consists of two sub passes. The first\n// (depthRange) renders polygonal cubes for the volumes to compute min and\n// max bounds in depth for the image. This is then fed into the second pass\n// (final) which actually does the raycasting between those bounds sampling\n// the volumes along the way. So the first pass tends to be very fast whicle\n// the second is where most of the work is done.\n// given x then y then z ordering\n//\n//     2-----3\n//   / |   / |\n//  6-----7  |\n//  |  |  |  |\n//  |  0-----1\n//  |/    |/\n//  4-----5\n//\n\nvar cubeFaceTriangles = [[0, 4, 6], [0, 6, 2], [1, 3, 7], [1, 7, 5], [0, 5, 4], [0, 1, 5], [2, 6, 7], [2, 7, 3], [0, 3, 1], [0, 2, 3], [4, 5, 7], [4, 7, 6]];\nvar DepthBoundsFS = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Select::Dec\\n\\n//VTK::VolumePass::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output : fragmentOutput;\\n\\n  //VTK::Select::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n  //VTK::VolumePass::Impl\\n\\n  // use the maximum (closest) of the current value and the zbuffer\\n  // the blend func will then take the min to find the farthest stop value\\n  var stopval: f32 = max(input.fragPos.z, textureLoad(opaquePassDepthTexture, vec2<i32>(i32(input.fragPos.x), i32(input.fragPos.y)), 0));\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\";\nvar volumeCopyFragTemplate = \"\\n//VTK::Renderer::Dec\\n\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  var computedColor: vec4<f32> = textureSample(volumePassColorTexture,\\n    volumePassColorTextureSampler, mapperUBO.tscale*input.tcoordVS);\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\";\n/* eslint-disable no-undef */\n\n/* eslint-disable no-bitwise */\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUVolumePass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUVolumePass'); // create the required textures, encoders, FSQ etc\n\n  publicAPI.initialize = function (viewNode) {\n    if (!model._clearEncoder) {\n      publicAPI.createClearEncoder(viewNode);\n    }\n\n    if (!model._mergeEncoder) {\n      publicAPI.createMergeEncoder(viewNode);\n    }\n\n    if (!model._copyEncoder) {\n      publicAPI.createCopyEncoder(viewNode);\n    }\n\n    if (!model._depthRangeEncoder) {\n      publicAPI.createDepthRangeEncoder(viewNode);\n    }\n\n    if (!model.fullScreenQuad) {\n      model.fullScreenQuad = vtkWebGPUVolumePassFSQ.newInstance();\n      model.fullScreenQuad.setDevice(viewNode.getDevice());\n      model.fullScreenQuad.setTextureViews(_toConsumableArray(model._depthRangeEncoder.getColorTextureViews()));\n    }\n\n    if (!model._volumeCopyQuad) {\n      model._volumeCopyQuad = vtkWebGPUFullScreenQuad.newInstance();\n\n      model._volumeCopyQuad.setPipelineHash('volpassfsq');\n\n      model._volumeCopyQuad.setDevice(viewNode.getDevice());\n\n      model._volumeCopyQuad.setFragmentShaderTemplate(volumeCopyFragTemplate);\n\n      model._copyUBO = vtkWebGPUUniformBuffer.newInstance({\n        label: 'mapperUBO'\n      });\n\n      model._copyUBO.addEntry('tscale', 'vec2<f32>');\n\n      model._volumeCopyQuad.setUBO(model._copyUBO);\n\n      model._volumeCopyQuad.setTextureViews([model._colorTextureView]);\n    }\n  };\n\n  publicAPI.traverse = function (renNode, viewNode) {\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = viewNode; // create stuff we need\n\n    publicAPI.initialize(viewNode); // determine if we are rendering a small size\n\n    publicAPI.computeTiming(viewNode); // first render the boxes to generate a min max depth\n    // map for all the volumes\n\n    publicAPI.renderDepthBounds(renNode, viewNode); // always mark true\n\n    model._firstGroup = true;\n    var device = viewNode.getDevice(); // determine how many volumes we can render at a time. We subtract\n    // 4 because we use know we use textures for min, max, ofun and tfun\n\n    var maxVolumes = device.getHandle().limits.maxSampledTexturesPerShaderStage - 4; // if we have to make multiple passes then break the volumes up into groups\n    // rendered from farthest to closest\n\n    if (model.volumes.length > maxVolumes) {\n      var cameraPos = renNode.getRenderable().getActiveCamera().getPosition(); // sort from back to front based on volume centroid\n\n      var distances = [];\n\n      for (var v = 0; v < model.volumes.length; v++) {\n        var bounds = model.volumes[v].getRenderable().getBounds();\n        var centroid = [0.5 * (bounds[1] + bounds[0]), 0.5 * (bounds[3] + bounds[2]), 0.5 * (bounds[5] + bounds[4])];\n        distances[v] = distance2BetweenPoints(centroid, cameraPos);\n      } // sort by distance\n\n\n      var volumeOrder = _toConsumableArray(Array(model.volumes.length).keys());\n\n      volumeOrder.sort(function (a, b) {\n        return distances[b] - distances[a];\n      }); // render in chunks back to front\n\n      var volumesToRender = []; // start with smallest chunk so that the last (closest) chunk\n      // has a full maxVolumes;\n\n      var chunkSize = volumeOrder.length % maxVolumes;\n\n      for (var _v = 0; _v < volumeOrder.length; _v++) {\n        volumesToRender.push(model.volumes[volumeOrder[_v]]);\n\n        if (volumesToRender.length >= chunkSize) {\n          publicAPI.rayCastPass(viewNode, renNode, volumesToRender);\n          volumesToRender = [];\n          chunkSize = maxVolumes;\n          model._firstGroup = false;\n        }\n      }\n    } else {\n      // if not rendering in chunks then just draw all of them at once\n      publicAPI.rayCastPass(viewNode, renNode, model.volumes);\n    } // copy back to the original color buffer\n    // final composite\n\n\n    model._volumeCopyQuad.setWebGPURenderer(renNode);\n\n    if (model._useSmallViewport) {\n      var width = model._colorTextureView.getTexture().getWidth();\n\n      var height = model._colorTextureView.getTexture().getHeight();\n\n      model._copyUBO.setArray('tscale', [model._smallViewportWidth / width, model._smallViewportHeight / height]);\n    } else {\n      model._copyUBO.setArray('tscale', [1.0, 1.0]);\n    }\n\n    model._copyUBO.sendIfNeeded(device);\n\n    model._copyEncoder.setColorTextureView(0, model.colorTextureView);\n\n    model._copyEncoder.attachTextureViews();\n\n    model._copyEncoder.begin(viewNode.getCommandEncoder());\n\n    renNode.scissorAndViewport(model._copyEncoder);\n\n    model._volumeCopyQuad.prepareAndDraw(model._copyEncoder);\n\n    model._copyEncoder.end();\n  }; // unsubscribe from our listeners\n\n\n  publicAPI.delete = macro.chain(function () {\n    if (model._animationRateSubscription) {\n      model._animationRateSubscription.unsubscribe();\n\n      model._animationRateSubscription = null;\n    }\n  }, publicAPI.delete);\n\n  publicAPI.computeTiming = function (viewNode) {\n    model._useSmallViewport = false;\n    var rwi = viewNode.getRenderable().getInteractor();\n\n    if (rwi.isAnimating() && model._lastScale > 1.5) {\n      if (!model._smallViewportHeight) {\n        model._smallViewportWidth = Math.ceil(viewNode.getCanvas().width / Math.sqrt(model._lastScale));\n        model._smallViewportHeight = Math.ceil(viewNode.getCanvas().height / Math.sqrt(model._lastScale));\n      }\n\n      model._useSmallViewport = true;\n    }\n\n    model._colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\n\n    if (!model._animationRateSubscription) {\n      // when the animation frame rate changes recompute the scale factor\n      model._animationRateSubscription = rwi.onAnimationFrameRateUpdate(function () {\n        var firstMapper = model.volumes[0].getRenderable().getMapper();\n\n        if (firstMapper.getAutoAdjustSampleDistances()) {\n          var frate = rwi.getRecentAnimationFrameRate();\n          var targetScale = model._lastScale * rwi.getDesiredUpdateRate() / frate;\n          model._lastScale = targetScale; // clamp scale to some reasonable values.\n          // Below 1.5 we will just be using full resolution as that is close enough\n          // Above 400 seems like a lot so we limit to that 1/20th per axis\n\n          if (model._lastScale > 400) {\n            model._lastScale = 400;\n          }\n        } else {\n          model._lastScale = firstMapper.getImageSampleDistance() * firstMapper.getImageSampleDistance();\n        }\n\n        if (model._lastScale < 1.5) {\n          model._lastScale = 1.5;\n        } else {\n          model._smallViewportWidth = Math.ceil(viewNode.getCanvas().width / Math.sqrt(model._lastScale));\n          model._smallViewportHeight = Math.ceil(viewNode.getCanvas().height / Math.sqrt(model._lastScale));\n        }\n      });\n    }\n  };\n\n  publicAPI.rayCastPass = function (viewNode, renNode, volumes) {\n    var encoder = model._firstGroup ? model._clearEncoder : model._mergeEncoder;\n    encoder.attachTextureViews();\n    encoder.begin(viewNode.getCommandEncoder());\n\n    var width = model._colorTextureView.getTexture().getWidth();\n\n    var height = model._colorTextureView.getTexture().getHeight();\n\n    if (model._useSmallViewport) {\n      width = model._smallViewportWidth;\n      height = model._smallViewportHeight;\n    }\n\n    encoder.getHandle().setViewport(0, 0, width, height, 0.0, 1.0); // set scissor\n\n    encoder.getHandle().setScissorRect(0, 0, width, height);\n    model.fullScreenQuad.setWebGPURenderer(renNode);\n    model.fullScreenQuad.setVolumes(volumes);\n    model.fullScreenQuad.prepareAndDraw(encoder);\n    encoder.end();\n  };\n\n  publicAPI.renderDepthBounds = function (renNode, viewNode) {\n    publicAPI.updateDepthPolyData(renNode);\n    var pd = model._boundsPoly;\n    var points = pd.getPoints();\n    var cells = pd.getPolys();\n    var buffRequest = {\n      hash: \"vp\".concat(cells.getMTime()),\n      usage: BufferUsage.Index,\n      cells: cells,\n      numberOfPoints: points.getNumberOfPoints(),\n      primitiveType: PrimitiveTypes.Triangles,\n      representation: Representation.SURFACE\n    };\n    var indexBuffer = viewNode.getDevice().getBufferManager().getBuffer(buffRequest);\n\n    model._mapper.getVertexInput().setIndexBuffer(indexBuffer); // points\n\n\n    buffRequest = {\n      usage: BufferUsage.PointArray,\n      format: 'float32x4',\n      hash: \"vp\".concat(points.getMTime()).concat(cells.getMTime()),\n      dataArray: points,\n      indexBuffer: indexBuffer,\n      packExtra: true\n    };\n    var buff = viewNode.getDevice().getBufferManager().getBuffer(buffRequest);\n\n    model._mapper.getVertexInput().addBuffer(buff, ['vertexBC']);\n\n    model._mapper.setNumberOfVertices(buff.getSizeInBytes() / buff.getStrideInBytes());\n\n    publicAPI.drawDepthRange(renNode, viewNode);\n  };\n\n  publicAPI.updateDepthPolyData = function (renNode) {\n    // check mtimes first\n    var update = false;\n\n    for (var i = 0; i < model.volumes.length; i++) {\n      var mtime = model.volumes[i].getMTime();\n\n      if (!model._lastMTimes[i] || mtime !== model._lastMTimes[i]) {\n        update = true;\n        model._lastMTimes[i] = mtime;\n      }\n    } // also check stabilized time\n\n\n    var stime = renNode.getStabilizedTime();\n\n    if (model._lastMTimes.length <= model.volumes.length || stime !== model._lastMTimes[model.volumes.length]) {\n      update = true;\n      model._lastMTimes[model.volumes.length] = stime;\n    } // if no need to update then return\n\n\n    if (!update) {\n      return;\n    } // rebuild\n\n\n    var center = renNode.getStabilizedCenterByReference();\n    var numPts = model.volumes.length * 8;\n    var points = new Float64Array(numPts * 3);\n    var numTris = model.volumes.length * 12;\n    var polys = new Uint16Array(numTris * 4); // add points and cells\n\n    for (var _i = 0; _i < model.volumes.length; _i++) {\n      model.volumes[_i].getBoundingCubePoints(points, _i * 24);\n\n      var cellIdx = _i * 12 * 4;\n      var offset = _i * 8;\n\n      for (var t = 0; t < 12; t++) {\n        polys[cellIdx++] = 3;\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][0];\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][1];\n        polys[cellIdx++] = offset + cubeFaceTriangles[t][2];\n      }\n    }\n\n    for (var p = 0; p < points.length; p += 3) {\n      points[p] -= center[0];\n      points[p + 1] -= center[1];\n      points[p + 2] -= center[2];\n    }\n\n    model._boundsPoly.getPoints().setData(points, 3);\n\n    model._boundsPoly.getPoints().modified();\n\n    model._boundsPoly.getPolys().setData(polys, 1);\n\n    model._boundsPoly.getPolys().modified();\n\n    model._boundsPoly.modified();\n  };\n\n  publicAPI.drawDepthRange = function (renNode, viewNode) {\n    // copy current depth buffer to\n    model._depthRangeTexture.resizeToMatch(model.colorTextureView.getTexture());\n\n    model._depthRangeTexture2.resizeToMatch(model.colorTextureView.getTexture());\n\n    model._depthRangeEncoder.attachTextureViews();\n\n    publicAPI.setCurrentOperation('volumeDepthRangePass');\n    renNode.setRenderEncoder(model._depthRangeEncoder);\n    renNode.volumeDepthRangePass(true);\n\n    model._mapper.setWebGPURenderer(renNode);\n\n    model._mapper.prepareToDraw(model._depthRangeEncoder);\n\n    model._mapper.registerDrawCallback(model._depthRangeEncoder);\n\n    renNode.volumeDepthRangePass(false);\n  };\n\n  publicAPI.createDepthRangeEncoder = function (viewNode) {\n    var device = viewNode.getDevice();\n    model._depthRangeEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'VolumePass DepthRange'\n    });\n\n    model._depthRangeEncoder.setPipelineHash('volr');\n\n    model._depthRangeEncoder.setReplaceShaderCodeFunction(function (pipeline) {\n      var fDesc = pipeline.getShaderDescription('fragment');\n      fDesc.addOutput('vec4<f32>', 'outColor1');\n      fDesc.addOutput('vec4<f32>', 'outColor2');\n      var code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor1 = vec4<f32>(input.fragPos.z, 0.0, 0.0, 0.0);', 'output.outColor2 = vec4<f32>(stopval, 0.0, 0.0, 0.0);']).result;\n      fDesc.setCode(code);\n    });\n\n    model._depthRangeEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        clearValue: [0.0, 0.0, 0.0, 0.0],\n        loadOp: 'clear',\n        storeOp: 'store'\n      }, {\n        view: null,\n        clearValue: [1.0, 1.0, 1.0, 1.0],\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n    });\n\n    model._depthRangeEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: 'r16float',\n          blend: {\n            color: {\n              srcFactor: 'one',\n              dstFactor: 'one',\n              operation: 'max'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one',\n              operation: 'max'\n            }\n          }\n        }, {\n          format: 'r16float',\n          blend: {\n            color: {\n              srcFactor: 'one',\n              dstFactor: 'one',\n              operation: 'min'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one',\n              operation: 'min'\n            }\n          }\n        }]\n      }\n    }); // and the textures it needs\n\n\n    model._depthRangeTexture = vtkWebGPUTexture.newInstance({\n      label: 'volumePassMaxDepth'\n    });\n\n    model._depthRangeTexture.create(device, {\n      width: viewNode.getCanvas().width,\n      height: viewNode.getCanvas().height,\n      format: 'r16float',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n    });\n\n    var maxView = model._depthRangeTexture.createView('maxTexture');\n\n    model._depthRangeEncoder.setColorTextureView(0, maxView);\n\n    model._depthRangeTexture2 = vtkWebGPUTexture.newInstance({\n      label: 'volumePassDepthMin'\n    });\n\n    model._depthRangeTexture2.create(device, {\n      width: viewNode.getCanvas().width,\n      height: viewNode.getCanvas().height,\n      format: 'r16float',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING\n    });\n\n    var minView = model._depthRangeTexture2.createView('minTexture');\n\n    model._depthRangeEncoder.setColorTextureView(1, minView);\n\n    model._mapper.setDevice(viewNode.getDevice());\n\n    model._mapper.setTextureViews([model.depthTextureView]);\n  };\n\n  publicAPI.createClearEncoder = function (viewNode) {\n    model._colorTexture = vtkWebGPUTexture.newInstance({\n      label: 'volumePassColor'\n    });\n\n    model._colorTexture.create(viewNode.getDevice(), {\n      width: viewNode.getCanvas().width,\n      height: viewNode.getCanvas().height,\n      format: 'bgra8unorm',\n\n      /* eslint-disable no-undef */\n\n      /* eslint-disable no-bitwise */\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_SRC\n    });\n\n    model._colorTextureView = model._colorTexture.createView('volumePassColorTexture');\n\n    model._colorTextureView.addSampler(viewNode.getDevice(), {\n      minFilter: 'linear',\n      magFilter: 'linear'\n    });\n\n    model._clearEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'VolumePass Clear'\n    });\n\n    model._clearEncoder.setColorTextureView(0, model._colorTextureView);\n\n    model._clearEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        clearValue: [0.0, 0.0, 0.0, 0.0],\n        loadOp: 'clear',\n        storeOp: 'store'\n      }]\n    });\n\n    model._clearEncoder.setPipelineHash('volpf');\n\n    model._clearEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: 'bgra8unorm',\n          blend: {\n            color: {\n              srcFactor: 'src-alpha',\n              dstFactor: 'one-minus-src-alpha'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n  };\n\n  publicAPI.createCopyEncoder = function (viewNode) {\n    model._copyEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'volumePassCopy'\n    });\n\n    model._copyEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        loadOp: 'load',\n        storeOp: 'store'\n      }]\n    });\n\n    model._copyEncoder.setPipelineHash('volcopypf');\n\n    model._copyEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: 'rgba16float',\n          blend: {\n            color: {\n              srcFactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n  };\n\n  publicAPI.createMergeEncoder = function (viewNode) {\n    model._mergeEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'volumePassMerge'\n    });\n\n    model._mergeEncoder.setColorTextureView(0, model._colorTextureView);\n\n    model._mergeEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        loadOp: 'load',\n        storeOp: 'store'\n      }]\n    });\n\n    model._mergeEncoder.setReplaceShaderCodeFunction(function (pipeline) {\n      var fDesc = pipeline.getShaderDescription('fragment');\n      fDesc.addOutput('vec4<f32>', 'outColor');\n      var code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<f32>(computedColor.rgb, computedColor.a);']).result;\n      fDesc.setCode(code);\n    });\n\n    model._mergeEncoder.setPipelineHash('volpf');\n\n    model._mergeEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: 'bgra8unorm',\n          blend: {\n            color: {\n              srcFactor: 'src-alpha',\n              dstFactor: 'one-minus-src-alpha'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n  }; // marks modified when needed\n\n\n  publicAPI.setVolumes = function (val) {\n    if (!model.volumes || model.volumes.length !== val.length) {\n      model.volumes = _toConsumableArray(val);\n      publicAPI.modified();\n      return;\n    }\n\n    for (var i = 0; i < val.length; i++) {\n      if (val[i] !== model.volumes[i]) {\n        model.volumes = _toConsumableArray(val);\n        publicAPI.modified();\n        return;\n      }\n    }\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  colorTextureView: null,\n  depthTextureView: null,\n  volumes: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  model._lastScale = 2.0;\n  model._mapper = vtkWebGPUSimpleMapper.newInstance();\n\n  model._mapper.setFragmentShaderTemplate(DepthBoundsFS);\n\n  model._mapper.getShaderReplacements().set('replaceShaderVolumePass', function (hash, pipeline, vertexInput) {\n    var fDesc = pipeline.getShaderDescription('fragment');\n    fDesc.addBuiltinInput('vec4<f32>', '@builtin(position) fragPos');\n  });\n\n  model._boundsPoly = vtkPolyData.newInstance();\n  model._lastMTimes = [];\n  macro.setGet(publicAPI, model, ['colorTextureView', 'depthTextureView']); // Object methods\n\n  vtkWebGPUVolumePass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUVolumePass'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUVolumePass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUVolumePass$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPUFullScreenQuad from './FullScreenQuad.js';\nimport vtkWebGPUOpaquePass from './OpaquePass.js';\nimport vtkWebGPUOrderIndepenentTranslucentPass from './OrderIndependentTranslucentPass.js';\nimport vtkWebGPURenderEncoder from './RenderEncoder.js';\nimport vtkWebGPUVolumePass from './VolumePass.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\nimport vtkWebGPUSampler from './Sampler.js';\nimport vtkWebGPUTextureView from './TextureView.js';\n\nvar finalBlitFragTemplate = \"\\n//VTK::Mapper::Dec\\n\\n//VTK::TCoord::Dec\\n\\n//VTK::RenderEncoder::Dec\\n\\n//VTK::IOStructs::Dec\\n\\n@fragment\\nfn main(\\n//VTK::IOStructs::Input\\n)\\n//VTK::IOStructs::Output\\n{\\n  var output: fragmentOutput;\\n\\n  var computedColor: vec4<f32> = clamp(textureSampleLevel(opaquePassColorTexture, finalPassSampler, input.tcoordVS, 0),vec4<f32>(0.0),vec4<f32>(1.0));\\n\\n  //VTK::RenderEncoder::Impl\\n  return output;\\n}\\n\"; // ----------------------------------------------------------------------------\n\nfunction vtkForwardPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkForwardPass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (viewNode) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (model.deleted) {\n      return;\n    } // we just render our delegates in order\n\n\n    model.currentParent = parent; // build\n\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n\n    if (!model.opaquePass) {\n      model.opaquePass = vtkWebGPUOpaquePass.newInstance();\n    }\n\n    var numlayers = viewNode.getRenderable().getNumberOfLayers(); // iterate over renderers\n\n    var renderers = viewNode.getChildren();\n\n    for (var i = 0; i < numlayers; i++) {\n      for (var index = 0; index < renderers.length; index++) {\n        var renNode = renderers[index];\n        var ren = viewNode.getRenderable().getRenderers()[index];\n\n        if (ren.getDraw() && ren.getLayer() === i) {\n          // check for both opaque and volume actors\n          model.opaqueActorCount = 0;\n          model.translucentActorCount = 0;\n          model.volumes = [];\n          publicAPI.setCurrentOperation('queryPass');\n          renNode.traverse(publicAPI);\n          publicAPI.setCurrentOperation('cameraPass');\n          renNode.traverse(publicAPI); // always do opaque pass to get a valid color and zbuffer, even if empty\n\n          model.opaquePass.traverse(renNode, viewNode); // optional translucent pass\n\n          if (model.translucentActorCount > 0) {\n            if (!model.translucentPass) {\n              model.translucentPass = vtkWebGPUOrderIndepenentTranslucentPass.newInstance();\n            }\n\n            model.translucentPass.setColorTextureView(model.opaquePass.getColorTextureView());\n            model.translucentPass.setDepthTextureView(model.opaquePass.getDepthTextureView());\n            model.translucentPass.traverse(renNode, viewNode);\n          } // optional volume pass\n\n\n          if (model.volumes.length > 0) {\n            if (!model.volumePass) {\n              model.volumePass = vtkWebGPUVolumePass.newInstance();\n            }\n\n            model.volumePass.setColorTextureView(model.opaquePass.getColorTextureView());\n            model.volumePass.setDepthTextureView(model.opaquePass.getDepthTextureView());\n            model.volumePass.setVolumes(model.volumes);\n            model.volumePass.traverse(renNode, viewNode);\n          } // blit the result into the swap chain\n\n\n          publicAPI.finalPass(viewNode, renNode);\n        }\n      }\n    }\n  };\n\n  publicAPI.finalPass = function (viewNode, renNode) {\n    if (!model._finalBlitEncoder) {\n      publicAPI.createFinalBlitEncoder(viewNode);\n    }\n\n    model._finalBlitOutputTextureView.createFromTextureHandle(viewNode.getCurrentTexture(), {\n      depth: 1,\n      format: viewNode.getPresentationFormat()\n    });\n\n    model._finalBlitEncoder.attachTextureViews();\n\n    model._finalBlitEncoder.begin(viewNode.getCommandEncoder());\n\n    renNode.scissorAndViewport(model._finalBlitEncoder);\n\n    model._fullScreenQuad.prepareAndDraw(model._finalBlitEncoder);\n\n    model._finalBlitEncoder.end();\n  };\n\n  publicAPI.createFinalBlitEncoder = function (viewNode) {\n    model._finalBlitEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'forwardPassBlit'\n    });\n\n    model._finalBlitEncoder.setDescription({\n      colorAttachments: [{\n        view: null,\n        loadOp: 'load',\n        storeOp: 'store'\n      }]\n    });\n\n    model._finalBlitEncoder.setPipelineHash('fpf');\n\n    model._finalBlitEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      fragment: {\n        targets: [{\n          format: viewNode.getPresentationFormat(),\n          blend: {\n            color: {\n              srcFactor: 'src-alpha',\n              dstFactor: 'one-minus-src-alpha'\n            },\n            alpha: {\n              srcfactor: 'one',\n              dstFactor: 'one-minus-src-alpha'\n            }\n          }\n        }]\n      }\n    });\n\n    model._fsqSampler = vtkWebGPUSampler.newInstance({\n      label: 'finalPassSampler'\n    });\n\n    model._fsqSampler.create(viewNode.getDevice(), {\n      minFilter: 'linear',\n      magFilter: 'linear'\n    });\n\n    model._fullScreenQuad = vtkWebGPUFullScreenQuad.newInstance();\n\n    model._fullScreenQuad.setDevice(viewNode.getDevice());\n\n    model._fullScreenQuad.setPipelineHash('fpfsq');\n\n    model._fullScreenQuad.setTextureViews([model.opaquePass.getColorTextureView()]);\n\n    model._fullScreenQuad.setAdditionalBindables([model._fsqSampler]);\n\n    model._fullScreenQuad.setFragmentShaderTemplate(finalBlitFragTemplate);\n\n    model._finalBlitOutputTextureView = vtkWebGPUTextureView.newInstance();\n\n    model._finalBlitEncoder.setColorTextureView(0, model._finalBlitOutputTextureView);\n  };\n\n  publicAPI.incrementOpaqueActorCount = function () {\n    return model.opaqueActorCount++;\n  };\n\n  publicAPI.incrementTranslucentActorCount = function () {\n    return model.translucentActorCount++;\n  };\n\n  publicAPI.addVolume = function (volume) {\n    model.volumes.push(volume);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  opaqueActorCount: 0,\n  translucentActorCount: 0,\n  volumes: null,\n  opaqueRenderEncoder: null,\n  translucentPass: null,\n  volumePass: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['opaquePass', 'translucentPass', 'volumePass']); // Object methods\n\n  vtkForwardPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkForwardPass'); // ----------------------------------------------------------------------------\n\nvar vtkForwardPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkForwardPass$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkWebGPUTexture from './Texture.js';\n\nvar VtkDataTypes = vtkDataArray.VtkDataTypes; // ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// vtkWebGPUTextureManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUTextureManager(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUTextureManager'); // fills in request values based on what is missing/provided\n\n  function _fillRequest(req) {\n    // fill in values based on imageData if the request has it\n    if (req.imageData) {\n      req.dataArray = req.imageData.getPointData().getScalars();\n      req.time = req.dataArray.getMTime();\n      req.nativeArray = req.dataArray.getData();\n      var dims = req.imageData.getDimensions();\n      req.width = dims[0];\n      req.height = dims[1];\n      req.depth = dims[2];\n      var numComp = req.dataArray.getNumberOfComponents(); // todo fix handling of 3 component\n\n      switch (numComp) {\n        case 1:\n          req.format = 'r';\n          break;\n\n        case 2:\n          req.format = 'rg';\n          break;\n\n        case 3:\n        case 4:\n        default:\n          req.format = 'rgba';\n          break;\n      }\n\n      var dataType = req.dataArray.getDataType();\n\n      switch (dataType) {\n        case VtkDataTypes.UNSIGNED_CHAR:\n          req.format += '8unorm';\n          break;\n        // todo extend to other types that are not filterable\n        // as they can be useful\n\n        case VtkDataTypes.FLOAT:\n        case VtkDataTypes.UNSIGNED_INT:\n        case VtkDataTypes.INT:\n        case VtkDataTypes.DOUBLE:\n        case VtkDataTypes.UNSIGNED_SHORT:\n        case VtkDataTypes.SHORT:\n        default:\n          req.format += '16float';\n          break;\n      }\n    } // fill in values based on image if the request has it\n\n\n    if (req.image) {\n      req.width = req.image.width;\n      req.height = req.image.height;\n      req.depth = 1;\n      req.format = 'rgba8unorm';\n    } // fill in based on js imageData\n\n\n    if (req.jsImageData) {\n      req.width = req.jsImageData.width;\n      req.height = req.jsImageData.height;\n      req.depth = 1;\n      req.format = 'rgba8unorm';\n      req.flip = true;\n      req.nativeArray = req.jsImageData.data;\n    }\n\n    if (req.canvas) {\n      req.width = req.canvas.width;\n      req.height = req.canvas.height;\n      req.depth = 1;\n      req.format = 'rgba8unorm';\n      req.flip = true;\n      /* eslint-disable no-undef */\n\n      /* eslint-disable no-bitwise */\n\n      req.usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT;\n      /* eslint-enable no-undef */\n\n      /* eslint-enable no-bitwise */\n    }\n  } // create a texture (used by getTexture)\n\n\n  function _createTexture(req) {\n    var newTex = vtkWebGPUTexture.newInstance();\n    newTex.create(model.device, {\n      width: req.width,\n      height: req.height,\n      depth: req.depth,\n      format: req.format,\n      usage: req.usage,\n      mipLevel: req.mipLevel\n    }); // fill the texture if we have data\n\n    if (req.nativeArray || req.image || req.canvas) {\n      newTex.writeImageData(req);\n    }\n\n    return newTex;\n  } // get a texture or create it if not cached.\n  // this is the main entry point\n\n\n  publicAPI.getTexture = function (req) {\n    // if we have a source the get/create/cache the texture\n    if (req.hash) {\n      // if a matching texture already exists then return it\n      return model.device.getCachedObject(req.hash, _createTexture, req);\n    }\n\n    return _createTexture(req);\n  };\n\n  publicAPI.getTextureForImageData = function (imgData) {\n    var treq = {\n      time: imgData.getMTime()\n    };\n    treq.imageData = imgData; // fill out the req time and format based on imageData/image\n\n    _fillRequest(treq);\n\n    treq.hash = treq.time + treq.format + treq.mipLevel;\n    return model.device.getTextureManager().getTexture(treq);\n  };\n\n  publicAPI.getTextureForVTKTexture = function (srcTexture) {\n    var treq = {\n      time: srcTexture.getMTime()\n    };\n\n    if (srcTexture.getInputData()) {\n      treq.imageData = srcTexture.getInputData();\n    } else if (srcTexture.getImage()) {\n      treq.image = srcTexture.getImage();\n    } else if (srcTexture.getJsImageData()) {\n      treq.jsImageData = srcTexture.getJsImageData();\n    } else if (srcTexture.getCanvas()) {\n      treq.canvas = srcTexture.getCanvas();\n    } // fill out the req time and format based on imageData/image\n\n\n    _fillRequest(treq);\n\n    treq.mipLevel = srcTexture.getMipLevel();\n    treq.hash = treq.time + treq.format + treq.mipLevel;\n    return model.device.getTextureManager().getTexture(treq);\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  device: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Object methods\n\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device']);\n  vtkWebGPUTextureManager(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUTextureManager$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUTextureManager$1 as default, extend, newInstance };\n", "import _typeof from '@babel/runtime/helpers/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _get from '@babel/runtime/helpers/get';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport { newInstance as newInstance$1, obj, setGet, get } from '../../macros.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkWebGPUTextureManager from './TextureManager.js';\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/**\n * provide a simple WeakRefMap class to share device objects based on\n * hash values so that buffers/textures etc can be shared betwen mappers.\n * This is roughly based on WeakLRUCache but without the actual caching\n * behavior. This is just a map of key -> WeakRef(value)\n */\n\n/* eslint-disable no-undef */\n\nvar WeakRefMap = /*#__PURE__*/function (_Map) {\n  _inherits(WeakRefMap, _Map);\n\n  var _super = _createSuper(WeakRefMap);\n\n  function WeakRefMap() {\n    var _thisSuper, _thisSuper2, _this;\n\n    _classCallCheck(this, WeakRefMap);\n\n    _this = _super.call(this);\n    _this.registry = new FinalizationRegistry(function (key) {\n      var entry = _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(WeakRefMap.prototype)), \"get\", _thisSuper).call(_thisSuper, key);\n\n      if (entry && entry.deref && entry.deref() === undefined) _get((_thisSuper2 = _assertThisInitialized(_this), _getPrototypeOf(WeakRefMap.prototype)), \"delete\", _thisSuper2).call(_thisSuper2, key);\n    });\n    return _this;\n  }\n\n  _createClass(WeakRefMap, [{\n    key: \"getValue\",\n    value: function getValue(key) {\n      var entry = _get(_getPrototypeOf(WeakRefMap.prototype), \"get\", this).call(this, key);\n\n      if (entry) {\n        var value = entry.deref();\n        if (value !== undefined) return value;\n\n        _get(_getPrototypeOf(WeakRefMap.prototype), \"delete\", this).call(this, key);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      var entry;\n\n      if (value && _typeof(value) === 'object') {\n        entry = new WeakRef(value);\n        this.registry.register(value, key);\n\n        _get(_getPrototypeOf(WeakRefMap.prototype), \"set\", this).call(this, key, entry);\n      } // else entry is undefined\n\n\n      return entry;\n    }\n  }]);\n\n  return WeakRefMap;\n}( /*#__PURE__*/_wrapNativeSuper(Map));\n/* eslint-enable no-undef */\n// ----------------------------------------------------------------------------\n// vtkWebGPUDevice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUDevice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUDevice');\n\n  publicAPI.initialize = function (handle) {\n    model.handle = handle;\n  };\n\n  publicAPI.createCommandEncoder = function () {\n    return model.handle.createCommandEncoder();\n  };\n\n  publicAPI.submitCommandEncoder = function (commandEncoder) {\n    model.handle.queue.submit([commandEncoder.finish()]);\n  };\n\n  publicAPI.getShaderModule = function (sd) {\n    return model.shaderCache.getShaderModule(sd);\n  };\n  /* eslint-disable no-bitwise */\n\n  /* eslint-disable no-undef */\n\n\n  publicAPI.getBindGroupLayout = function (val) {\n    if (!val.entries) {\n      return null;\n    } // add in basic required values if missing\n\n\n    for (var i = 0; i < val.entries.length; i++) {\n      var ent = val.entries[i];\n      ent.binding = ent.binding || 0;\n      ent.visibility = ent.visibility || GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT;\n    } // do we already have one?\n\n\n    var sval = JSON.stringify(val);\n\n    for (var _i = 0; _i < model.bindGroupLayouts.length; _i++) {\n      if (model.bindGroupLayouts[_i].sval === sval) {\n        return model.bindGroupLayouts[_i].layout;\n      }\n    } // create one and store it\n\n\n    var layout = model.handle.createBindGroupLayout(val); // we actually only store the stringified version\n    // as that is what we always compare against\n\n    model.bindGroupLayouts.push({\n      sval: sval,\n      layout: layout\n    });\n    return layout;\n  };\n\n  publicAPI.getBindGroupLayoutDescription = function (layout) {\n    for (var i = 0; i < model.bindGroupLayouts.length; i++) {\n      if (model.bindGroupLayouts[i].layout === layout) {\n        return model.bindGroupLayouts[i].sval;\n      }\n    }\n\n    vtkErrorMacro('layout not found');\n    console.trace();\n    return null;\n  };\n\n  publicAPI.getPipeline = function (hash) {\n    if (hash in model.pipelines) {\n      return model.pipelines[hash];\n    }\n\n    return null;\n  };\n\n  publicAPI.createPipeline = function (hash, pipeline) {\n    pipeline.initialize(publicAPI, hash);\n    model.pipelines[hash] = pipeline;\n  };\n\n  publicAPI.onSubmittedWorkDone = function () {\n    return model.handle.queue.onSubmittedWorkDone();\n  }; // The Device has an object cache that can be used to cache buffers,\n  // textures and other objects that can be shared. The basic approach is to\n  // call getCachedObject with a request and a create function. The request\n  // is based on a hash. The cache lookup just returns any entry that has a\n  // matching hash. If a match isn't found then the create function is\n  // called with any extra arguments.\n  // is the object already cached?\n\n\n  publicAPI.hasCachedObject = function (hash) {\n    return model.objectCache.getValue(hash);\n  };\n\n  publicAPI.getCachedObject = function (hash, creator) {\n    if (!hash) {\n      vtkErrorMacro('attempt to cache an object without a hash');\n      return null;\n    }\n\n    var existingValue = model.objectCache.getValue(hash);\n\n    if (existingValue) {\n      return existingValue;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    var createdObject = creator.apply(void 0, args);\n    model.objectCache.setValue(hash, createdObject);\n    return createdObject;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  handle: null,\n  pipelines: null,\n  shaderCache: null,\n  bindGroupLayouts: null,\n  bufferManager: null,\n  textureManager: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  obj(publicAPI, model);\n  setGet(publicAPI, model, ['handle']);\n  get(publicAPI, model, ['bufferManager', 'shaderCache', 'textureManager']); // this is a weak ref cache implementation, we create it without\n  // an expirer (so it is strictly based on garbage collection and\n  // objects are not held if there are no external references)\n  // model.objectCache = new WeakLRUCache({ expirer: false });\n\n  model.objectCache = new WeakRefMap();\n  model.shaderCache = vtkWebGPUShaderCache.newInstance();\n  model.shaderCache.setDevice(publicAPI);\n  model.bindGroupLayouts = [];\n  model.bufferManager = vtkWebGPUBufferManager.newInstance();\n  model.bufferManager.setDevice(publicAPI);\n  model.textureManager = vtkWebGPUTextureManager.newInstance();\n  model.textureManager.setDevice(publicAPI);\n  model.pipelines = {}; // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n\n  vtkWebGPUDevice(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = newInstance$1(extend, 'vtkWebGPUDevice'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUDevice$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { WeakRefMap, vtkWebGPUDevice$1 as default, extend, newInstance };\n", "import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport macro from '../../macros.js';\nimport vtkHardwareSelector from '../Core/HardwareSelector.js';\nimport vtkWebGPUBuffer from './Buffer.js';\nimport vtkWebGPUHardwareSelectionPass from './HardwareSelectionPass.js';\nimport vtkSelectionNode from '../../Common/DataModel/SelectionNode.js';\nimport vtkDataSet from '../../Common/DataModel/DataSet.js';\n\nvar SelectionContent = vtkSelectionNode.SelectionContent,\n    SelectionField = vtkSelectionNode.SelectionField;\nvar FieldAssociations = vtkDataSet.FieldAssociations;\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction getInfoHash(info) {\n  return \"\".concat(info.propID, \" \").concat(info.compositeID);\n}\n\nfunction convert(xx, yy, buffdata, channel) {\n  var offset = ((buffdata.height - yy - 1) * buffdata.colorBufferWidth + xx) * 4 + channel;\n  return buffdata.colorValues[offset];\n}\n\nfunction getPixelInformationWithData(buffdata, inDisplayPosition, maxDistance, outSelectedPosition) {\n  // Base case\n  var maxDist = maxDistance < 0 ? 0 : maxDistance;\n\n  if (maxDist === 0) {\n    outSelectedPosition[0] = inDisplayPosition[0];\n    outSelectedPosition[1] = inDisplayPosition[1];\n\n    if (inDisplayPosition[0] < 0 || inDisplayPosition[0] >= buffdata.width || inDisplayPosition[1] < 0 || inDisplayPosition[1] >= buffdata.height) {\n      return null;\n    }\n\n    var actorid = convert(inDisplayPosition[0], inDisplayPosition[1], buffdata, 0);\n\n    if (actorid <= 0) {\n      // the pixel did not hit any actor.\n      return null;\n    }\n\n    var _info = {};\n    _info.propID = actorid;\n    var compositeID = convert(inDisplayPosition[0], inDisplayPosition[1], buffdata, 1);\n\n    if (compositeID < 0 || compositeID > 0xffffff) {\n      compositeID = 0;\n    }\n\n    _info.compositeID = compositeID;\n\n    if (buffdata.captureZValues) {\n      var offset = (buffdata.height - inDisplayPosition[1] - 1) * buffdata.zbufferBufferWidth + inDisplayPosition[0];\n      _info.zValue = buffdata.depthValues[offset];\n      _info.zValue = buffdata.webGPURenderer.convertToOpenGLDepth(_info.zValue);\n      _info.displayPosition = inDisplayPosition;\n    }\n\n    return _info;\n  } // Iterate over successively growing boxes.\n  // They recursively call the base case to handle single pixels.\n\n\n  var dispPos = [inDisplayPosition[0], inDisplayPosition[1]];\n  var curPos = [0, 0];\n  var info = getPixelInformationWithData(buffdata, inDisplayPosition, 0, outSelectedPosition);\n\n  if (info) {\n    return info;\n  }\n\n  for (var dist = 1; dist < maxDist; ++dist) {\n    // Vertical sides of box.\n    for (var y = dispPos[1] > dist ? dispPos[1] - dist : 0; y <= dispPos[1] + dist; ++y) {\n      curPos[1] = y;\n\n      if (dispPos[0] >= dist) {\n        curPos[0] = dispPos[0] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info) {\n          return info;\n        }\n      }\n\n      curPos[0] = dispPos[0] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info) {\n        return info;\n      }\n    } // Horizontal sides of box.\n\n\n    for (var x = dispPos[0] >= dist ? dispPos[0] - (dist - 1) : 0; x <= dispPos[0] + (dist - 1); ++x) {\n      curPos[0] = x;\n\n      if (dispPos[1] >= dist) {\n        curPos[1] = dispPos[1] - dist;\n        info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n        if (info) {\n          return info;\n        }\n      }\n\n      curPos[1] = dispPos[1] + dist;\n      info = getPixelInformationWithData(buffdata, curPos, 0, outSelectedPosition);\n\n      if (info) {\n        return info;\n      }\n    }\n  } // nothing hit.\n\n\n  outSelectedPosition[0] = inDisplayPosition[0];\n  outSelectedPosition[1] = inDisplayPosition[1];\n  return null;\n} //-----------------------------------------------------------------------------\n\n\nfunction convertSelection(fieldassociation, dataMap, buffdata) {\n  var sel = [];\n  var count = 0;\n  dataMap.forEach(function (value, key) {\n    var child = vtkSelectionNode.newInstance();\n    child.setContentType(SelectionContent.INDICES);\n\n    switch (fieldassociation) {\n      case FieldAssociations.FIELD_ASSOCIATION_CELLS:\n        child.setFieldType(SelectionField.CELL);\n        break;\n\n      case FieldAssociations.FIELD_ASSOCIATION_POINTS:\n        child.setFieldType(SelectionField.POINT);\n        break;\n\n      default:\n        vtkErrorMacro('Unknown field association');\n    }\n\n    child.getProperties().propID = value.info.propID;\n    var wprop = buffdata.webGPURenderer.getPropFromID(value.info.propID);\n    child.getProperties().prop = wprop.getRenderable();\n    child.getProperties().compositeID = value.info.compositeID;\n    child.getProperties().pixelCount = value.pixelCount;\n\n    if (buffdata.captureZValues) {\n      child.getProperties().displayPosition = [value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue];\n      child.getProperties().worldPosition = buffdata.webGPURenderWindow.displayToWorld(value.info.displayPosition[0], value.info.displayPosition[1], value.info.zValue, buffdata.renderer);\n    }\n\n    child.setSelectionList(value.attributeIDs);\n    sel[count] = child;\n    count++;\n  });\n  return sel;\n} //----------------------------------------------------------------------------\n\n\nfunction generateSelectionWithData(buffdata, fx1, fy1, fx2, fy2) {\n  var x1 = Math.floor(fx1);\n  var y1 = Math.floor(fy1);\n  var x2 = Math.floor(fx2);\n  var y2 = Math.floor(fy2);\n  var dataMap = new Map();\n  var outSelectedPosition = [0, 0];\n\n  for (var yy = y1; yy <= y2; yy++) {\n    for (var xx = x1; xx <= x2; xx++) {\n      var pos = [xx, yy];\n      var info = getPixelInformationWithData(buffdata, pos, 0, outSelectedPosition);\n\n      if (info) {\n        var hash = getInfoHash(info);\n\n        if (!dataMap.has(hash)) {\n          dataMap.set(hash, {\n            info: info,\n            pixelCount: 1,\n            attributeIDs: [info.attributeID]\n          });\n        } else {\n          var dmv = dataMap.get(hash);\n          dmv.pixelCount++;\n\n          if (buffdata.captureZValues) {\n            if (info.zValue < dmv.info.zValue) {\n              dmv.info = info;\n            }\n          }\n\n          if (dmv.attributeIDs.indexOf(info.attributeID) === -1) {\n            dmv.attributeIDs.push(info.attributeID);\n          }\n        }\n      }\n    }\n  }\n\n  return convertSelection(buffdata.fieldAssociation, dataMap, buffdata);\n} // ----------------------------------------------------------------------------\n// vtkWebGPUHardwareSelector methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkWebGPUHardwareSelector(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUHardwareSelector'); //----------------------------------------------------------------------------\n\n  publicAPI.endSelection = function () {\n    model.WebGPURenderer.setSelector(null);\n  }; //----------------------------------------------------------------------------\n  // note we ignore the x,y arguments as WebGPU has to do buffer copies\n  // of the entire depth bufer. We could realloc hardware selection textures\n  // based on the passed in size etc but it gets messy so for now we always\n  // render the full size window and copy it to the buffers.\n\n\n  publicAPI.getSourceDataAsync = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(renderer) {\n      var webGPURenderer, originalSuppress, device, texture, depthTexture, result, colorBuffer, cmdEnc, zbuffer, cLoad, zLoad;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!renderer || !model.WebGPURenderWindow)) {\n                _context.next = 3;\n                break;\n              }\n\n              vtkErrorMacro('Renderer and view must be set before calling Select.');\n              return _context.abrupt(\"return\", false);\n\n            case 3:\n              // todo revisit making selection part of core\n              // then we can do this in core\n              model.WebGPURenderWindow.getRenderable().preRender();\n\n              if (model.WebGPURenderWindow.getInitialized()) {\n                _context.next = 8;\n                break;\n              }\n\n              model.WebGPURenderWindow.initialize();\n              _context.next = 8;\n              return new Promise(function (resolve) {\n                model.WebGPURenderWindow.onInitialized(resolve);\n              });\n\n            case 8:\n              webGPURenderer = model.WebGPURenderWindow.getViewNodeFor(renderer);\n\n              if (webGPURenderer) {\n                _context.next = 11;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 11:\n              // Initialize renderer for selection.\n              // change the renderer's background to black, which will indicate a miss\n              originalSuppress = webGPURenderer.getSuppressClear();\n              webGPURenderer.setSuppressClear(true);\n\n              model._selectionPass.traverse(model.WebGPURenderWindow, webGPURenderer); // restore original background\n\n\n              webGPURenderer.setSuppressClear(originalSuppress);\n              device = model.WebGPURenderWindow.getDevice();\n              texture = model._selectionPass.getColorTexture();\n              depthTexture = model._selectionPass.getDepthTexture(); // as this is async we really don't want to store things in\n              // the class as multiple calls may start before resolving\n              // so anything specific to this request gets put into the\n              // result object (by value in most cases)\n\n              result = {\n                area: [0, 0, texture.getWidth() - 1, texture.getHeight() - 1],\n                captureZValues: model.captureZValues,\n                fieldAssociation: model.fieldAssociation,\n                renderer: renderer,\n                webGPURenderer: webGPURenderer,\n                webGPURenderWindow: model.WebGPURenderWindow,\n                width: texture.getWidth(),\n                height: texture.getHeight()\n              }; // must be a multiple of 256 bytes, so 16 texels with rgba32uint\n\n              result.colorBufferWidth = 16 * Math.floor((result.width + 15) / 16);\n              result.colorBufferSizeInBytes = result.colorBufferWidth * result.height * 4 * 4;\n              colorBuffer = vtkWebGPUBuffer.newInstance({\n                label: 'hardwareSelectColorBuffer'\n              });\n              colorBuffer.setDevice(device);\n              /* eslint-disable no-bitwise */\n\n              /* eslint-disable no-undef */\n\n              colorBuffer.create(result.colorBufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n              /* eslint-enable no-bitwise */\n\n              /* eslint-enable no-undef */\n\n              cmdEnc = model.WebGPURenderWindow.getCommandEncoder();\n              cmdEnc.copyTextureToBuffer({\n                texture: texture.getHandle()\n              }, {\n                buffer: colorBuffer.getHandle(),\n                bytesPerRow: 16 * result.colorBufferWidth,\n                rowsPerImage: result.height\n              }, {\n                width: result.width,\n                height: result.height,\n                depthOrArrayLayers: 1\n              });\n\n              if (model.captureZValues) {\n                result.zbufferBufferWidth = 64 * Math.floor((result.width + 63) / 64);\n                zbuffer = vtkWebGPUBuffer.newInstance({\n                  label: 'hardwareSelectDepthBuffer'\n                });\n                zbuffer.setDevice(device);\n                result.zbufferSizeInBytes = result.height * result.zbufferBufferWidth * 4;\n                /* eslint-disable no-bitwise */\n\n                /* eslint-disable no-undef */\n\n                zbuffer.create(result.zbufferSizeInBytes, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n                /* eslint-enable no-bitwise */\n\n                /* eslint-enable no-undef */\n\n                cmdEnc.copyTextureToBuffer({\n                  texture: depthTexture.getHandle(),\n                  aspect: 'depth-only'\n                }, {\n                  buffer: zbuffer.getHandle(),\n                  bytesPerRow: 4 * result.zbufferBufferWidth,\n                  rowsPerImage: result.height\n                }, {\n                  width: result.width,\n                  height: result.height,\n                  depthOrArrayLayers: 1\n                });\n              }\n\n              device.submitCommandEncoder(cmdEnc);\n              /* eslint-disable no-undef */\n\n              cLoad = colorBuffer.mapAsync(GPUMapMode.READ);\n\n              if (!model.captureZValues) {\n                _context.next = 37;\n                break;\n              }\n\n              zLoad = zbuffer.mapAsync(GPUMapMode.READ);\n              _context.next = 33;\n              return Promise.all([cLoad, zLoad]);\n\n            case 33:\n              result.depthValues = new Float32Array(zbuffer.getMappedRange().slice());\n              zbuffer.unmap();\n              _context.next = 39;\n              break;\n\n            case 37:\n              _context.next = 39;\n              return cLoad;\n\n            case 39:\n              /* eslint-enable no-undef */\n              result.colorValues = new Uint32Array(colorBuffer.getMappedRange().slice());\n              colorBuffer.unmap();\n\n              result.generateSelection = function (fx1, fy1, fx2, fy2) {\n                return generateSelectionWithData(result, fx1, fy1, fx2, fy2);\n              };\n\n              return _context.abrupt(\"return\", result);\n\n            case 43:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  WebGPURenderWindow: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkHardwareSelector.extend(publicAPI, model, initialValues);\n  model._selectionPass = vtkWebGPUHardwareSelectionPass.newInstance();\n  macro.setGet(publicAPI, model, ['WebGPURenderWindow']); // Object methods\n\n  vtkWebGPUHardwareSelector(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUHardwareSelector'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUHardwareSelector$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUHardwareSelector$1 as default, extend, newInstance };\n", "import macro from '../../macros.js';\nimport vtkWebGPURenderEncoder from './RenderEncoder.js';\nimport vtkWebGPUTexture from './Texture.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\nimport vtkRenderPass from '../SceneGraph/RenderPass.js';\n\nfunction vtkWebGPUHardwareSelectionPass(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUHardwareSelectionPass'); // this pass implements a forward rendering pipeline\n  // if both volumes and opaque geometry are present\n  // it will mix the two together by capturing a zbuffer\n  // first\n\n  publicAPI.traverse = function (viewNode, renNode) {\n    if (model.deleted) {\n      return;\n    }\n\n    model.currentParent = null; // build\n\n    publicAPI.setCurrentOperation('buildPass');\n    viewNode.traverse(publicAPI);\n    var device = viewNode.getDevice();\n\n    if (!model.selectionRenderEncoder) {\n      publicAPI.createRenderEncoder(); // create color texture\n\n      model.colorTexture = vtkWebGPUTexture.newInstance({\n        label: 'hardwareSelectorColor'\n      });\n      model.colorTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: 'rgba32uint',\n\n        /* eslint-disable no-undef */\n\n        /* eslint-disable no-bitwise */\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n      });\n      var v1 = model.colorTexture.createView('hardwareSelectColorTexture');\n      model.selectionRenderEncoder.setColorTextureView(0, v1); // create depth texture\n\n      model.depthTexture = vtkWebGPUTexture.newInstance({\n        label: 'hardwareSelectorDepth'\n      });\n      model.depthTexture.create(device, {\n        width: viewNode.getCanvas().width,\n        height: viewNode.getCanvas().height,\n        format: 'depth32float',\n\n        /* eslint-disable no-undef */\n\n        /* eslint-disable no-bitwise */\n        usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC\n      });\n      var v2 = model.depthTexture.createView('hardwareSelectDepthTexture');\n      model.selectionRenderEncoder.setDepthTextureView(v2);\n    } else {\n      model.colorTexture.resize(viewNode.getCanvas().width, viewNode.getCanvas().height);\n      model.depthTexture.resizeToMatch(model.colorTexture);\n    }\n\n    model.selectionRenderEncoder.attachTextureViews();\n    renNode.setRenderEncoder(model.selectionRenderEncoder);\n    publicAPI.setCurrentOperation('cameraPass');\n    renNode.traverse(publicAPI); // opaque pass is used for selection\n\n    publicAPI.setCurrentOperation('opaquePass');\n    renNode.traverse(publicAPI);\n  };\n\n  publicAPI.createRenderEncoder = function () {\n    model.selectionRenderEncoder = vtkWebGPURenderEncoder.newInstance({\n      label: 'HardwareSelectionPass'\n    }); // default settings are fine for this\n\n    model.selectionRenderEncoder.setPipelineHash('sel');\n    model.selectionRenderEncoder.setReplaceShaderCodeFunction(function (pipeline) {\n      var fDesc = pipeline.getShaderDescription('fragment');\n      fDesc.addOutput('vec4<u32>', 'outColor');\n      var code = fDesc.getCode();\n      code = vtkWebGPUShaderCache.substitute(code, '//VTK::RenderEncoder::Impl', ['output.outColor = vec4<u32>(mapperUBO.PropID, compositeID, 0u, 0u);']).result;\n      fDesc.setCode(code);\n    });\n    var renDesc = model.selectionRenderEncoder.getDescription();\n    renDesc.colorAttachments[0].clearValue = [0.0, 0.0, 0.0, 0.0];\n    model.selectionRenderEncoder.setPipelineSettings({\n      primitive: {\n        cullMode: 'none'\n      },\n      depthStencil: {\n        depthWriteEnabled: true,\n        depthCompare: 'greater',\n        format: 'depth32float'\n      },\n      fragment: {\n        targets: [{\n          format: 'rgba32uint',\n          blend: undefined\n        }]\n      }\n    });\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  selectionRenderEncoder: null,\n  colorTexture: null,\n  depthTexture: null\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  vtkRenderPass.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['colorTexture', 'depthTexture']); // Object methods\n\n  vtkWebGPUHardwareSelectionPass(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkWebGPUHardwareSelectionPass'); // ----------------------------------------------------------------------------\n\nvar vtkWebGPUHardwareSelectionPass$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkWebGPUHardwareSelectionPass$1 as default, extend, newInstance };\n"],
  "mappings": "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",
  "names": ["exports", "undefined", "define", "obj", "self", "value", "key", "next", "undefined", "hex", "self", "import_regenerator", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "import_regenerator", "_regeneratorRuntime", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "DEFAULT_VALUES", "extend", "newInstance", "Constants", "ownKeys", "_objectSpread", "SelectionContent", "SelectionField", "FieldAssociations", "vtkErrorMacro", "_regeneratorRuntime", "DEFAULT_VALUES", "extend", "newInstance", "vtkHardwareSelector", "Md5", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "get", "vtkErrorMacro", "vtkErrorMacro", "_regeneratorRuntime", "vtkHardwareSelector", "DEFAULT_VALUES", "extend", "newInstance", "import_regenerator", "i", "_loop", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "oitpFragTemplate", "DEFAULT_VALUES", "extend", "newInstance", "DEFAULT_VALUES", "extend", "newInstance", "Representation", "DEFAULT_VALUES", "extend", "newInstance", "vtkForwardPass", "DEFAULT_VALUES", "extend", "newInstance", "vtkForwardPass$1", "VtkDataTypes", "DEFAULT_VALUES", "extend", "newInstance", "WeakRefMap", "DEFAULT_VALUES", "extend", "newInstance", "import_regenerator", "DEFAULT_VALUES", "extend", "newInstance", "SelectionContent", "SelectionField", "FieldAssociations", "vtkErrorMacro", "getInfoHash", "convert", "getPixelInformationWithData", "convertSelection", "generateSelectionWithData", "_regeneratorRuntime", "DEFAULT_VALUES", "extend", "newInstance", "vtkErrorMacro", "SCREENSHOT_PLACEHOLDER", "_regeneratorRuntime", "DEFAULT_VALUES", "extend", "newInstance", "vtkForwardPass$1"]
}
